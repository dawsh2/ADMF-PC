{
  "metadata": {
    "generated_at": "2025-05-31T17:30:46.079676",
    "tool_version": "1.0.0",
    "validation_standard": "COMPLEXITY_CHECKLIST.md Step 0"
  },
  "summary": {
    "total_files": 562,
    "passed_files": 0,
    "failed_files": 562,
    "pass_rate": 0.0,
    "average_score": 0.040869344178952716,
    "grade": "F"
  },
  "check_statistics": {
    "file_header": {
      "passed": 0,
      "total": 562,
      "pass_rate": 0.0
    },
    "class_structure": {
      "passed": 562,
      "total": 562,
      "pass_rate": 1.0
    },
    "docstrings": {
      "passed": 163,
      "total": 562,
      "pass_rate": 0.2900355871886121
    },
    "type_annotations": {
      "passed": 375,
      "total": 562,
      "pass_rate": 0.6672597864768683
    },
    "logging_setup": {
      "passed": 273,
      "total": 562,
      "pass_rate": 0.48576512455516013
    },
    "architecture_refs": {
      "passed": 0,
      "total": 562,
      "pass_rate": 0.0
    },
    "syntax": {
      "passed": 562,
      "total": 562,
      "pass_rate": 1.0
    }
  },
  "issue_breakdown": {
    "error_types": {
      "File Header Issues": 1520,
      "Architecture Reference Issues": 564,
      "Logging Setup Issues": 290,
      "Other Issues": 1208,
      "Docstring Issues": 1904,
      "File Status Issues": 12
    },
    "warning_types": {
      "Other Issues": 6061,
      "Docstring Issues": 1202,
      "Architecture Reference Issues": 371,
      "Logging Setup Issues": 180,
      "File Status Issues": 21,
      "File Header Issues": 29
    },
    "total_errors": 5498,
    "total_warnings": 7864
  },
  "detailed_results": [
    {
      "filepath": "src/core/components/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ComponentSpec' docstring should reference relevant architecture documents",
        "Class 'ComponentSpec' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/components/discovery.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'visit_ClassDef' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ComponentScanner' docstring should reference relevant architecture documents",
        "Class 'ComponentScanner' should include Architecture Context section linking to design documents",
        "Class 'ComponentFinder' docstring should reference relevant architecture documents",
        "Function 'discover_components' missing usage example",
        "Function 'auto_discover_components' missing Returns documentation",
        "Function 'auto_discover_components' missing usage example",
        "Function 'scan_package' missing usage example",
        "Function 'scan_module' missing usage example",
        "Function 'scan_file' missing usage example",
        "Function 'add_filter' missing Returns documentation",
        "Function 'add_filter' missing usage example",
        "Function 'clear_filters' missing Returns documentation",
        "Function 'visit_ClassDef' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/components/factory.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_component' has parameters but no Args/Parameters documentation",
        "Function 'can_enhance' has parameters but no Args/Parameters documentation",
        "Function 'enhance' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'can_enhance'",
        "Function 'enhance' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'can_enhance'",
        "Function 'enhance' has parameters but no Args/Parameters documentation",
        "Function 'create_from_config' has parameters but no Args/Parameters documentation",
        "Function 'add_enhancer' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'initialize_events'",
        "Missing docstring for ctiondef 'teardown_events'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'CapabilityEnhancer' docstring should reference relevant architecture documents",
        "Class 'LifecycleEnhancer' docstring should reference relevant architecture documents",
        "Class 'EventEnhancer' docstring should reference relevant architecture documents",
        "Class 'ComponentFactory' docstring should reference relevant architecture documents",
        "Class 'ComponentFactory' should include Architecture Context section linking to design documents",
        "Function 'create_component' missing Returns documentation",
        "Function 'create_component' missing usage example",
        "Function 'create_minimal_component' missing Returns documentation",
        "Function 'create_minimal_component' missing usage example",
        "Function 'can_enhance' missing Returns documentation",
        "Function 'enhance' missing Returns documentation",
        "Function 'enhance' missing Returns documentation",
        "Function 'enhance' missing Returns documentation",
        "Function 'create' missing usage example",
        "Function 'create_from_config' missing Returns documentation",
        "Function 'create_from_config' missing usage example",
        "Function 'add_enhancer' missing Returns documentation",
        "Class 'CapabilityEnhancer' should have __init__ method",
        "Class 'LifecycleEnhancer' should have __init__ method",
        "Class 'EventEnhancer' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/components/protocols.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'initialize' has parameters but no Args/Parameters documentation",
        "Function 'configure' has parameters but no Args/Parameters documentation",
        "Function 'set_parameters' has parameters but no Args/Parameters documentation",
        "Function 'generate_signal' has parameters but no Args/Parameters documentation",
        "Function 'get_data' has parameters but no Args/Parameters documentation",
        "Function 'subscribe_symbol' has parameters but no Args/Parameters documentation",
        "Function 'unsubscribe_symbol' has parameters but no Args/Parameters documentation",
        "Function 'check_risk' has parameters but no Args/Parameters documentation",
        "Function 'calculate_position_size' has parameters but no Args/Parameters documentation",
        "Function 'submit_order' has parameters but no Args/Parameters documentation",
        "Function 'cancel_order' has parameters but no Args/Parameters documentation",
        "Function 'get_order_status' has parameters but no Args/Parameters documentation",
        "Function 'update_position' has parameters but no Args/Parameters documentation",
        "Function 'calculate' has parameters but no Args/Parameters documentation",
        "Function 'load_state' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Component' docstring should reference relevant architecture documents",
        "Class 'Lifecycle' docstring should reference relevant architecture documents",
        "Class 'EventCapable' docstring should reference relevant architecture documents",
        "Class 'Configurable' docstring should reference relevant architecture documents",
        "Class 'Optimizable' docstring should reference relevant architecture documents",
        "Class 'SignalGenerator' docstring should reference relevant architecture documents",
        "Class 'DataProvider' docstring should reference relevant architecture documents",
        "Class 'RiskManager' docstring should reference relevant architecture documents",
        "Class 'OrderExecutor' docstring should reference relevant architecture documents",
        "Class 'Portfolio' docstring should reference relevant architecture documents",
        "Class 'Indicator' docstring should reference relevant architecture documents",
        "Class 'Monitorable' docstring should reference relevant architecture documents",
        "Class 'Stateful' docstring should reference relevant architecture documents",
        "Class 'Capability' docstring should reference relevant architecture documents",
        "Function 'detect_capabilities' missing usage example",
        "Function 'has_capability' missing usage example",
        "Function 'require_capability' missing Returns documentation",
        "Function 'require_capability' missing usage example",
        "Function 'component_id' missing Returns documentation",
        "Function 'initialize' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "ctiondef 'stop' has very short docstring",
        "Function 'stop' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "ctiondef 'teardown' has very short docstring",
        "Function 'teardown' missing Returns documentation",
        "Function 'event_bus' missing Returns documentation",
        "Function 'initialize_events' missing Returns documentation",
        "Function 'teardown_events' missing Returns documentation",
        "Function 'get_config_schema' missing Returns documentation",
        "Function 'configure' missing Returns documentation",
        "Function 'get_config' missing Returns documentation",
        "Function 'get_parameter_space' missing Returns documentation",
        "Function 'set_parameters' missing Returns documentation",
        "Function 'get_parameters' missing Returns documentation",
        "Function 'generate_signal' missing Returns documentation",
        "Function 'get_data' missing Returns documentation",
        "Function 'subscribe_symbol' missing Returns documentation",
        "Function 'unsubscribe_symbol' missing Returns documentation",
        "Function 'check_risk' missing Returns documentation",
        "Function 'calculate_position_size' missing Returns documentation",
        "Function 'submit_order' missing Returns documentation",
        "Function 'cancel_order' missing Returns documentation",
        "Function 'get_order_status' missing Returns documentation",
        "Function 'get_positions' missing Returns documentation",
        "Function 'get_balance' missing Returns documentation",
        "Function 'update_position' missing Returns documentation",
        "Function 'calculate' missing Returns documentation",
        "Function 'lookback_period' missing Returns documentation",
        "Function 'get_metrics' missing Returns documentation",
        "Function 'get_health_status' missing Returns documentation",
        "Function 'save_state' missing Returns documentation",
        "Function 'load_state' missing Returns documentation",
        "Class 'Component' should have __init__ method",
        "Class 'Lifecycle' should have __init__ method",
        "Class 'EventCapable' should have __init__ method",
        "Class 'Configurable' should have __init__ method",
        "Class 'Optimizable' should have __init__ method",
        "Class 'SignalGenerator' should have __init__ method",
        "Class 'DataProvider' should have __init__ method",
        "Class 'RiskManager' should have __init__ method",
        "Class 'OrderExecutor' should have __init__ method",
        "Class 'Portfolio' should have __init__ method",
        "Class 'Indicator' should have __init__ method",
        "Class 'Monitorable' should have __init__ method",
        "Class 'Stateful' should have __init__ method",
        "Class 'Capability' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/components/registry.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'register_component' has parameters but no Args/Parameters documentation",
        "Function 'has_capability' has parameters but no Args/Parameters documentation",
        "Function 'has_all_capabilities' has parameters but no Args/Parameters documentation",
        "Function 'has_any_capability' has parameters but no Args/Parameters documentation",
        "Function 'get' has parameters but no Args/Parameters documentation",
        "Function 'get_class' has parameters but no Args/Parameters documentation",
        "Function 'find_by_tag' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'decorator'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ComponentMetadata' docstring should reference relevant architecture documents",
        "Class 'ComponentRegistry' docstring should reference relevant architecture documents",
        "Class 'ComponentRegistry' should include Architecture Context section linking to design documents",
        "Function 'get_registry' missing Returns documentation",
        "Function 'register_component' missing Returns documentation",
        "Function 'has_capability' missing Returns documentation",
        "Function 'has_all_capabilities' missing Returns documentation",
        "Function 'has_any_capability' missing Returns documentation",
        "Function 'register' missing usage example",
        "Function 'unregister' missing usage example",
        "Function 'get' missing Returns documentation",
        "Function 'get_class' missing Returns documentation",
        "Function 'find_by_capability' missing usage example",
        "Function 'find_by_tag' missing Returns documentation",
        "Function 'list_all' missing Returns documentation",
        "Function 'list_capabilities' missing Returns documentation",
        "ctiondef 'list_tags' has very short docstring",
        "Function 'list_tags' missing Returns documentation",
        "Function 'add_validator' missing Returns documentation",
        "Function 'add_validator' missing usage example",
        "Function 'clear' missing Returns documentation",
        "Class 'ComponentMetadata' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/components/test_components.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'initialize'",
        "Missing docstring for ctiondef 'start'",
        "Missing docstring for ctiondef 'stop'",
        "Missing docstring for ctiondef 'reset'",
        "Missing docstring for ctiondef 'teardown'",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'generate_signal'",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'generate_signal'",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'get_config_schema'",
        "Missing docstring for ctiondef 'configure'",
        "Missing docstring for ctiondef 'get_config'",
        "Missing docstring for ctiondef 'setUp'",
        "Missing docstring for ctiondef 'setUp'",
        "Missing docstring for ctiondef 'setUp'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SimpleComponent' docstring should reference relevant architecture documents",
        "Class 'LifecycleComponent' docstring should reference relevant architecture documents",
        "Class 'TradingStrategy' docstring should reference relevant architecture documents",
        "Class 'DecoratedStrategy' docstring should reference relevant architecture documents",
        "Class 'ConfigurableComponent' docstring should reference relevant architecture documents",
        "Class 'TestProtocols' docstring should reference relevant architecture documents",
        "Class 'TestRegistry' docstring should reference relevant architecture documents",
        "Class 'TestFactory' docstring should reference relevant architecture documents",
        "Class 'TestDiscovery' docstring should reference relevant architecture documents",
        "Class 'TestDecoratorRegistration' docstring should reference relevant architecture documents",
        "Function 'test_component_protocol' missing Returns documentation",
        "Function 'test_lifecycle_protocol' missing Returns documentation",
        "Function 'test_signal_generator_protocol' missing Returns documentation",
        "Function 'test_detect_capabilities' missing Returns documentation",
        "Function 'test_register_component' missing Returns documentation",
        "Function 'test_register_with_name' missing Returns documentation",
        "Function 'test_duplicate_registration' missing Returns documentation",
        "Function 'test_find_by_capability' missing Returns documentation",
        "Function 'test_find_by_tag' missing Returns documentation",
        "Function 'test_create_simple_component' missing Returns documentation",
        "Function 'test_create_with_class' missing Returns documentation",
        "Function 'test_create_with_lifecycle' missing Returns documentation",
        "Function 'test_enhance_with_events' missing Returns documentation",
        "Function 'test_create_from_config' missing Returns documentation",
        "Function 'test_scan_module' missing Returns documentation",
        "Function 'test_component_filter' missing Returns documentation",
        "Function 'test_decorator_registration' missing Returns documentation",
        "Class 'SimpleComponent' should have __init__ method",
        "Class 'DecoratedStrategy' should have __init__ method",
        "Class 'TestProtocols' should have __init__ method",
        "Class 'TestRegistry' should have __init__ method",
        "Class 'TestFactory' should have __init__ method",
        "Class 'TestDiscovery' should have __init__ method",
        "Class 'TestDecoratorRegistration' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/config/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/config/example_usage.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'validate_yaml_file' missing Returns documentation",
        "Function 'validate_config_dict' missing Returns documentation",
        "Function 'create_sample_configs' missing Returns documentation",
        "Function 'test_invalid_configs' missing Returns documentation",
        "Using type hints but missing typing imports"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/config/schema_validator.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SchemaValidationError' docstring should reference relevant architecture documents",
        "Class 'ValidationResult' docstring should reference relevant architecture documents",
        "Class 'ConfigSchema' docstring should reference relevant architecture documents",
        "Class 'ConfigSchemaValidator' docstring should reference relevant architecture documents",
        "Function 'raise_if_invalid' missing Returns documentation",
        "Function 'register_schema' missing Returns documentation",
        "Function 'validate_file' missing usage example",
        "Function 'validate' missing usage example",
        "Function 'get_schema_info' missing usage example",
        "Function 'list_schemas' missing Returns documentation",
        "Function 'validate_backtest' missing Returns documentation",
        "Function 'validate_optimization' missing Returns documentation",
        "Function 'validate_live' missing Returns documentation",
        "Class 'ValidationResult' should have __init__ method",
        "Class 'ConfigSchema' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.11428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/config/schemas.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/config/simple_validator.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'validate_file' has parameters but no Args/Parameters documentation",
        "Function 'validate' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SchemaValidationError' docstring should reference relevant architecture documents",
        "Class 'ValidationResult' docstring should reference relevant architecture documents",
        "Class 'FieldSpec' docstring should reference relevant architecture documents",
        "Class 'SimpleConfigValidator' docstring should reference relevant architecture documents",
        "Function 'raise_if_invalid' missing Returns documentation",
        "Function 'validate_file' missing Returns documentation",
        "Function 'validate' missing Returns documentation",
        "Class 'ValidationResult' should have __init__ method",
        "Class 'FieldSpec' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/config/validator_integration.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'CoordinatorConfigValidator' docstring should reference relevant architecture documents",
        "Function 'validate_config_for_coordinator' missing usage example",
        "Class 'ConfigValidationMixin' docstring should reference relevant architecture documents",
        "Function 'validate_workflow_config' missing usage example",
        "Function 'validate_and_load' missing usage example",
        "Function 'suggest_fixes' missing usage example",
        "Function 'create_example_config' missing Returns documentation",
        "Function 'create_example_config' missing usage example",
        "Function 'validate_string' missing usage example",
        "Function 'load_validated_config' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.11428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/containers/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/containers/backtest/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/containers/backtest/factory.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BacktestPattern' docstring should reference relevant architecture documents",
        "Class 'BacktestConfig' docstring should reference relevant architecture documents",
        "Class 'BacktestContainerFactory' docstring should reference relevant architecture documents",
        "Class 'BacktestContainerFactory' should include Architecture Context section linking to design documents",
        "Class 'FullBacktestContainerFactory' docstring should reference relevant architecture documents",
        "Class 'FullBacktestContainerFactory' should include Architecture Context section linking to design documents",
        "Class 'SignalReplayContainerFactory' docstring should reference relevant architecture documents",
        "Class 'SignalReplayContainerFactory' should include Architecture Context section linking to design documents",
        "Class 'SignalGenerationContainerFactory' docstring should reference relevant architecture documents",
        "Class 'SignalGenerationContainerFactory' should include Architecture Context section linking to design documents",
        "Function 'create_instance' missing usage example",
        "Function 'create_instance' missing Returns documentation",
        "Function 'create_instance' missing Returns documentation",
        "Function 'create_instance' missing Returns documentation",
        "Class 'BacktestPattern' should have __init__ method",
        "Class 'BacktestConfig' should have __init__ method",
        "Class 'BacktestContainerFactory' should have __init__ method",
        "Class 'FullBacktestContainerFactory' should have __init__ method",
        "Class 'SignalReplayContainerFactory' should have __init__ method",
        "Class 'SignalGenerationContainerFactory' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.11428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/containers/bootstrap.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'add_shared_service' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ContainerBootstrap' docstring should reference relevant architecture documents",
        "Class 'ContainerBootstrap' should include Architecture Context section linking to design documents",
        "Function 'initialize' missing Returns documentation",
        "Function 'initialize' missing usage example",
        "Function 'create_container' missing usage example",
        "Function 'create_batch' missing usage example",
        "Function 'add_shared_service' missing Returns documentation",
        "Function 'execute_workflow' missing usage example",
        "Function 'shutdown' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/containers/composable.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'add_child_container' has parameters but no Args/Parameters documentation",
        "Function 'remove_child_container' has parameters but no Args/Parameters documentation",
        "Function 'get_child_container' has parameters but no Args/Parameters documentation",
        "Function 'find_containers_by_role' has parameters but no Args/Parameters documentation",
        "Function 'process_event' has parameters but no Args/Parameters documentation",
        "Function 'publish_event' has parameters but no Args/Parameters documentation",
        "Function 'update_config' has parameters but no Args/Parameters documentation",
        "Function 'create_container' has parameters but no Args/Parameters documentation",
        "Function 'compose_pattern' has parameters but no Args/Parameters documentation",
        "Function 'validate_pattern' has parameters but no Args/Parameters documentation",
        "Function 'from_yaml' has parameters but no Args/Parameters documentation",
        "Function 'register_container_type' has parameters but no Args/Parameters documentation",
        "Function 'get_container_factory' has parameters but no Args/Parameters documentation",
        "Function 'register_pattern' has parameters but no Args/Parameters documentation",
        "Function 'get_pattern' has parameters but no Args/Parameters documentation",
        "Function 'subscribe_to_data' has parameters but no Args/Parameters documentation",
        "Function 'publish_data' has parameters but no Args/Parameters documentation",
        "Function 'get_data_dependencies' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'metadata'",
        "Missing docstring for ctiondef 'state'",
        "Missing docstring for ctiondef 'event_bus'",
        "Missing docstring for ctiondef 'parent_container'",
        "Missing docstring for ctiondef 'child_containers'",
        "Function 'add_child_container' has parameters but no Args/Parameters documentation",
        "Function 'remove_child_container' has parameters but no Args/Parameters documentation",
        "Function 'get_child_container' has parameters but no Args/Parameters documentation",
        "Function 'find_containers_by_role' has parameters but no Args/Parameters documentation",
        "Function 'publish_event' has parameters but no Args/Parameters documentation",
        "Function 'update_config' has parameters but no Args/Parameters documentation",
        "Function 'process_event' has parameters but no Args/Parameters documentation",
        "Missing docstring for ncfunctiondef 'event_handler'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ContainerRole' docstring should reference relevant architecture documents",
        "Class 'ContainerState' docstring should reference relevant architecture documents",
        "Class 'ContainerMetadata' docstring should reference relevant architecture documents",
        "Class 'ContainerLimits' docstring should reference relevant architecture documents",
        "Class 'ComposableContainerProtocol' docstring should reference relevant architecture documents",
        "Class 'ComposableContainerProtocol' should include Architecture Context section linking to design documents",
        "Class 'ContainerCompositionProtocol' docstring should reference relevant architecture documents",
        "Class 'ContainerPattern' docstring should reference relevant architecture documents",
        "Class 'ContainerRegistryProtocol' docstring should reference relevant architecture documents",
        "Class 'DataFlowProtocol' docstring should reference relevant architecture documents",
        "Class 'BaseComposableContainer' docstring should reference relevant architecture documents",
        "Class 'BaseComposableContainer' should include Architecture Context section linking to design documents",
        "Function 'metadata' missing Returns documentation",
        "Function 'state' missing Returns documentation",
        "Function 'event_bus' missing Returns documentation",
        "Function 'parent_container' missing Returns documentation",
        "Function 'child_containers' missing Returns documentation",
        "Function 'initialize' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "Function 'stop' missing Returns documentation",
        "Function 'dispose' missing Returns documentation",
        "Function 'add_child_container' missing Returns documentation",
        "Function 'remove_child_container' missing Returns documentation",
        "Function 'get_child_container' missing Returns documentation",
        "Function 'find_containers_by_role' missing Returns documentation",
        "Function 'process_event' missing Returns documentation",
        "Function 'publish_event' missing Returns documentation",
        "Function 'update_config' missing Returns documentation",
        "Function 'get_status' missing Returns documentation",
        "Function 'get_capabilities' missing Returns documentation",
        "Function 'create_container' missing Returns documentation",
        "Function 'compose_pattern' missing Returns documentation",
        "Function 'validate_pattern' missing Returns documentation",
        "Function 'from_yaml' missing Returns documentation",
        "Function 'register_container_type' missing Returns documentation",
        "Function 'get_container_factory' missing Returns documentation",
        "Function 'register_pattern' missing Returns documentation",
        "Function 'get_pattern' missing Returns documentation",
        "Function 'list_available_patterns' missing Returns documentation",
        "Function 'subscribe_to_data' missing Returns documentation",
        "Function 'publish_data' missing Returns documentation",
        "Function 'get_data_dependencies' missing Returns documentation",
        "Function 'add_child_container' missing Returns documentation",
        "Function 'remove_child_container' missing Returns documentation",
        "Function 'get_child_container' missing Returns documentation",
        "Function 'find_containers_by_role' missing Returns documentation",
        "Function 'publish_event' missing Returns documentation",
        "Function 'update_config' missing Returns documentation",
        "Function 'get_status' missing Returns documentation",
        "Function 'initialize' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "Function 'stop' missing Returns documentation",
        "Function 'dispose' missing Returns documentation",
        "Function 'process_event' missing Returns documentation",
        "Function 'get_capabilities' missing Returns documentation",
        "Class 'ContainerRole' should have __init__ method",
        "Class 'ContainerState' should have __init__ method",
        "Class 'ContainerMetadata' should have __init__ method",
        "Class 'ContainerLimits' should have __init__ method",
        "Class 'ComposableContainerProtocol' should have __init__ method",
        "Class 'ContainerCompositionProtocol' should have __init__ method",
        "Class 'ContainerPattern' should have __init__ method",
        "Class 'ContainerRegistryProtocol' should have __init__ method",
        "Class 'DataFlowProtocol' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/containers/composition_engine.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'register_container_type' has parameters but no Args/Parameters documentation",
        "Function 'compose_pattern' has parameters but no Args/Parameters documentation",
        "Function 'register_container_type' has parameters but no Args/Parameters documentation",
        "Function 'get_container_factory' has parameters but no Args/Parameters documentation",
        "Function 'register_pattern' has parameters but no Args/Parameters documentation",
        "Function 'get_pattern' has parameters but no Args/Parameters documentation",
        "Function 'get_container_capabilities' has parameters but no Args/Parameters documentation",
        "Function 'create_container' has parameters but no Args/Parameters documentation",
        "Function 'compose_pattern' has parameters but no Args/Parameters documentation",
        "Function 'compose_custom_pattern' has parameters but no Args/Parameters documentation",
        "Function 'validate_pattern' has parameters but no Args/Parameters documentation",
        "Function 'load_pattern_from_file' has parameters but no Args/Parameters documentation",
        "Function 'save_pattern_to_file' has parameters but no Args/Parameters documentation",
        "Function 'create_pattern_from_config' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ContainerRegistry' docstring should reference relevant architecture documents",
        "Class 'ContainerCompositionEngine' docstring should reference relevant architecture documents",
        "Class 'PatternManager' docstring should reference relevant architecture documents",
        "Function 'get_global_registry' missing Returns documentation",
        "Function 'get_global_composition_engine' missing Returns documentation",
        "Function 'register_container_type' missing Returns documentation",
        "Function 'compose_pattern' missing Returns documentation",
        "Function 'register_container_type' missing Returns documentation",
        "Function 'get_container_factory' missing Returns documentation",
        "Function 'register_pattern' missing Returns documentation",
        "Function 'get_pattern' missing Returns documentation",
        "Function 'list_available_patterns' missing Returns documentation",
        "Function 'get_container_capabilities' missing Returns documentation",
        "Function 'create_container' missing Returns documentation",
        "Function 'compose_pattern' missing Returns documentation",
        "Function 'compose_custom_pattern' missing Returns documentation",
        "Function 'validate_pattern' missing Returns documentation",
        "Function 'load_pattern_from_file' missing Returns documentation",
        "Function 'save_pattern_to_file' missing Returns documentation",
        "Function 'load_all_patterns' missing Returns documentation",
        "Function 'create_pattern_from_config' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/containers/enhanced_container.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get_subcontainers_by_type' has parameters but no Args/Parameters documentation",
        "Function 'get_component' has parameters but no Args/Parameters documentation",
        "Function 'replay_signals' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'EnhancedContainer' docstring should reference relevant architecture documents",
        "Class 'EnhancedContainer' should include Architecture Context section linking to design documents",
        "Class 'ScopedEventBus' docstring should reference relevant architecture documents",
        "Class 'ScopedEventBus' should include Architecture Context section linking to design documents",
        "Function 'event_bus' missing Returns documentation",
        "Function 'create_subcontainer' missing usage example",
        "Function 'get_subcontainers' missing Returns documentation",
        "Function 'get_subcontainers_by_type' missing Returns documentation",
        "Function 'get_component' missing Returns documentation",
        "Function 'get_component' missing usage example",
        "Function 'register_singleton' missing Returns documentation",
        "Function 'register_singleton' missing usage example",
        "Function 'initialize' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "Function 'stop' missing Returns documentation",
        "Function 'cleanup' missing Returns documentation",
        "Function 'prepare_data' missing Returns documentation",
        "Function 'execute_backtest' missing Returns documentation",
        "Function 'get_results' missing Returns documentation",
        "Function 'generate_signals' missing Returns documentation",
        "Function 'replay_signals' missing Returns documentation",
        "Function 'publish' missing Returns documentation",
        "Function 'publish' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/containers/factory.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get_container' has parameters but no Args/Parameters documentation",
        "Function 'dispose_container' has parameters but no Args/Parameters documentation",
        "Function 'list_containers' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ContainerFactory' docstring should reference relevant architecture documents",
        "Class 'ContainerFactory' should include Architecture Context section linking to design documents",
        "Function 'create_backtest_container' missing usage example",
        "Function 'create_optimization_container' missing usage example",
        "Function 'create_live_trading_container' missing usage example",
        "Function 'create_indicator_container' missing usage example",
        "Function 'create_custom_container' missing usage example",
        "Function 'register_container_config' missing Returns documentation",
        "Function 'register_container_config' missing usage example",
        "Function 'get_container' missing Returns documentation",
        "Function 'dispose_container' missing Returns documentation",
        "Function 'list_containers' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/containers/lifecycle.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'initialize_container' has parameters but no Args/Parameters documentation",
        "Function 'start_container' has parameters but no Args/Parameters documentation",
        "Function 'stop_container' has parameters but no Args/Parameters documentation",
        "Function 'reset_container' has parameters but no Args/Parameters documentation",
        "Function 'get_container' has parameters but no Args/Parameters documentation",
        "Function 'add_lifecycle_hook' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'LifecycleEvent' docstring should reference relevant architecture documents",
        "Class 'ContainerInfo' docstring should reference relevant architecture documents",
        "Class 'ContainerLifecycleManager' docstring should reference relevant architecture documents",
        "Class 'ContainerLifecycleManager' should include Architecture Context section linking to design documents",
        "Function 'get_lifecycle_manager' missing Returns documentation",
        "Function 'create_container' missing usage example",
        "Function 'create_and_start_container' missing usage example",
        "Function 'initialize_container' missing Returns documentation",
        "ctiondef 'start_container' has very short docstring",
        "Function 'start_container' missing Returns documentation",
        "ctiondef 'stop_container' has very short docstring",
        "Function 'stop_container' missing Returns documentation",
        "Function 'reset_container' missing Returns documentation",
        "Function 'dispose_container' missing Returns documentation",
        "Function 'dispose_container' missing usage example",
        "Function 'stop_and_destroy_container' missing Returns documentation",
        "Function 'stop_and_destroy_container' missing usage example",
        "Function 'get_container' missing Returns documentation",
        "Function 'list_containers' missing usage example",
        "Function 'dispose_all' missing Returns documentation",
        "Function 'add_lifecycle_hook' missing Returns documentation",
        "Function 'configure_pool' missing Returns documentation",
        "Function 'configure_pool' missing usage example",
        "Function 'get_stats' missing Returns documentation",
        "Class 'LifecycleEvent' should have __init__ method",
        "Class 'ContainerInfo' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/containers/minimal_bootstrap.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'execute_workflow' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'MinimalBootstrap' docstring should reference relevant architecture documents",
        "Class 'MinimalBootstrap' should include Architecture Context section linking to design documents",
        "Function 'initialize' missing Returns documentation",
        "Function 'create_coordinator' missing Returns documentation",
        "Function 'execute_workflow' missing Returns documentation",
        "ncfunctiondef 'shutdown' has very short docstring",
        "Function 'shutdown' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/containers/naming.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_backtest_container_id' has parameters but no Args/Parameters documentation",
        "Function 'create_optimization_container_id' has parameters but no Args/Parameters documentation",
        "Function 'create_signal_analysis_container_id' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ContainerType' docstring should reference relevant architecture documents",
        "Class 'Phase' docstring should reference relevant architecture documents",
        "Class 'ClassifierType' docstring should reference relevant architecture documents",
        "Class 'RiskProfile' docstring should reference relevant architecture documents",
        "Class 'ContainerNamingStrategy' docstring should reference relevant architecture documents",
        "Class 'ContainerNamingStrategy' should include Architecture Context section linking to design documents",
        "Function 'create_backtest_container_id' missing Returns documentation",
        "Function 'create_optimization_container_id' missing Returns documentation",
        "Function 'create_signal_analysis_container_id' missing Returns documentation",
        "Function 'generate_container_id' missing usage example",
        "Function 'parse_container_id' missing usage example",
        "Function 'create_hierarchical_id' missing usage example",
        "Function 'get_container_family' missing usage example",
        "Function 'create_workflow_container_id' missing usage example",
        "Class 'ContainerType' should have __init__ method",
        "Class 'Phase' should have __init__ method",
        "Class 'ClassifierType' should have __init__ method",
        "Class 'RiskProfile' should have __init__ method",
        "Class 'ContainerNamingStrategy' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/containers/protocols.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get_subcontainers_by_type' has parameters but no Args/Parameters documentation",
        "Function 'replay_signals' has parameters but no Args/Parameters documentation",
        "Function 'create_instance' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Container' docstring should reference relevant architecture documents",
        "Class 'Container' should include Architecture Context section linking to design documents",
        "Class 'BacktestContainer' docstring should reference relevant architecture documents",
        "Class 'SignalGenerationContainer' docstring should reference relevant architecture documents",
        "Class 'SignalReplayContainer' docstring should reference relevant architecture documents",
        "Class 'ContainerFactory' docstring should reference relevant architecture documents",
        "Function 'container_id' missing Returns documentation",
        "Function 'container_type' missing Returns documentation",
        "Function 'event_bus' missing Returns documentation",
        "Function 'create_subcontainer' missing usage example",
        "Function 'register_singleton' missing Returns documentation",
        "Function 'register_singleton' missing usage example",
        "Function 'get_component' missing usage example",
        "Function 'initialize' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "Function 'stop' missing Returns documentation",
        "Function 'cleanup' missing Returns documentation",
        "Function 'get_subcontainers' missing Returns documentation",
        "Function 'get_subcontainers_by_type' missing Returns documentation",
        "Function 'prepare_data' missing Returns documentation",
        "Function 'execute_backtest' missing Returns documentation",
        "Function 'get_results' missing Returns documentation",
        "Function 'generate_signals' missing Returns documentation",
        "Function 'analyze_signals' missing Returns documentation",
        "Function 'replay_signals' missing Returns documentation",
        "Function 'create_instance' missing Returns documentation",
        "Class 'Container' should have __init__ method",
        "Class 'BacktestContainer' should have __init__ method",
        "Class 'SignalGenerationContainer' should have __init__ method",
        "Class 'SignalReplayContainer' should have __init__ method",
        "Class 'ContainerFactory' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/containers/test_containers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'initialize'",
        "Missing docstring for ctiondef 'start'",
        "Missing docstring for ctiondef 'stop'",
        "Missing docstring for ctiondef 'reset'",
        "Missing docstring for ctiondef 'generate_signal'",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'reset'",
        "Missing docstring for ctiondef 'setUp'",
        "Missing docstring for ctiondef 'tearDown'",
        "Missing docstring for ctiondef 'setUp'",
        "Missing docstring for ctiondef 'tearDown'",
        "Missing docstring for ctiondef 'setUp'",
        "Missing docstring for ctiondef 'tearDown'",
        "Missing docstring for ctiondef 'setUp'",
        "Missing docstring for ctiondef 'tearDown'",
        "Missing docstring for ctiondef 'test_hook'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'MockStrategy' docstring should reference relevant architecture documents",
        "Class 'MockPortfolio' docstring should reference relevant architecture documents",
        "Class 'TestUniversalScopedContainer' docstring should reference relevant architecture documents",
        "Class 'TestContainerLifecycleManager' docstring should reference relevant architecture documents",
        "Class 'TestContainerFactory' docstring should reference relevant architecture documents",
        "Class 'TestContainerBootstrap' docstring should reference relevant architecture documents",
        "Function 'test_container_creation' missing Returns documentation",
        "Function 'test_component_creation' missing Returns documentation",
        "Function 'test_component_initialization' missing Returns documentation",
        "Function 'test_container_lifecycle' missing Returns documentation",
        "Function 'test_shared_services' missing Returns documentation",
        "Function 'test_event_isolation' missing Returns documentation",
        "Function 'test_container_stats' missing Returns documentation",
        "Function 'test_create_container' missing Returns documentation",
        "Function 'test_container_lifecycle_management' missing Returns documentation",
        "Function 'test_container_limit' missing Returns documentation",
        "Function 'test_list_containers' missing Returns documentation",
        "Function 'test_lifecycle_hooks' missing Returns documentation",
        "Function 'test_create_backtest_container' missing Returns documentation",
        "Function 'test_create_optimization_container' missing Returns documentation",
        "Function 'test_custom_container' missing Returns documentation",
        "Function 'test_create_container_from_spec' missing Returns documentation",
        "Function 'test_create_batch' missing Returns documentation",
        "Function 'test_shared_services' missing Returns documentation",
        "Using type hints but missing typing imports",
        "Class 'TestUniversalScopedContainer' should have __init__ method",
        "Class 'TestContainerLifecycleManager' should have __init__ method",
        "Class 'TestContainerFactory' should have __init__ method",
        "Class 'TestContainerBootstrap' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/containers/universal.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get_component' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ContainerState' docstring should reference relevant architecture documents",
        "Class 'ComponentSpec' docstring should reference relevant architecture documents",
        "Class 'ContainerMetadata' docstring should reference relevant architecture documents",
        "Class 'UniversalScopedContainer' docstring should reference relevant architecture documents",
        "Class 'UniversalScopedContainer' should include Architecture Context section linking to design documents",
        "Class 'ContainerType' docstring should reference relevant architecture documents",
        "Function 'create_backtest_container' missing usage example",
        "Function 'create_component' missing usage example",
        "Function 'initialize_component' missing usage example",
        "Function 'initialize_scope' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "Function 'stop' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'dispose' missing Returns documentation",
        "Function 'get_component' missing Returns documentation",
        "Function 'get_all_components' missing Returns documentation",
        "Function 'state' missing Returns documentation",
        "Function 'event_bus' missing Returns documentation",
        "Function 'get_stats' missing Returns documentation",
        "Class 'ContainerState' should have __init__ method",
        "Class 'ComponentSpec' should have __init__ method",
        "Class 'ContainerMetadata' should have __init__ method",
        "Class 'ContainerType' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_coordinator'",
        "Missing docstring for ssdef 'WorkflowResult'",
        "Missing docstring for ctiondef 'finalize'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'WorkflowResult' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/composable_workflow_manager.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'execute' has parameters but no Args/Parameters documentation",
        "Function 'validate_config' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ComposableWorkflowManager' docstring should reference relevant architecture documents",
        "Class 'ComposableWorkflowManager' should include Architecture Context section linking to design documents",
        "Function 'execute' missing Returns documentation",
        "Function 'validate_config' missing Returns documentation",
        "Function 'get_required_capabilities' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/coordinator.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'execute_backtest' has parameters but no Args/Parameters documentation",
        "Function 'execute_optimization' has parameters but no Args/Parameters documentation",
        "Function 'add_error' has parameters but no Args/Parameters documentation",
        "Function 'add_warning' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'validate_workflow_config' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'CoordinatorResult' docstring should reference relevant architecture documents",
        "Class 'ExecutionMode' docstring should reference relevant architecture documents",
        "Class 'Coordinator' docstring should reference relevant architecture documents",
        "Class 'Coordinator' should include Architecture Context section linking to design documents",
        "Function 'execute_backtest' missing Returns documentation",
        "Function 'execute_optimization' missing Returns documentation",
        "Function 'finalize' missing Returns documentation",
        "Function 'add_error' missing Returns documentation",
        "ctiondef 'add_warning' has very short docstring",
        "Function 'add_warning' missing Returns documentation",
        "Function 'execute_workflow' missing usage example",
        "Function 'get_available_patterns' missing Returns documentation",
        "Function 'validate_workflow_config' missing Returns documentation",
        "Function 'shutdown' missing Returns documentation",
        "Class 'CoordinatorResult' should have __init__ method",
        "Class 'ExecutionMode' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/infrastructure.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Config'",
        "Function 'setup_workflow_infrastructure' has parameters but no Args/Parameters documentation",
        "Function 'teardown_workflow_infrastructure' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SharedResource' docstring should reference relevant architecture documents",
        "Class 'InfrastructureSetup' docstring should reference relevant architecture documents",
        "Function 'setup_workflow_infrastructure' missing Returns documentation",
        "Function 'teardown_workflow_infrastructure' missing Returns documentation",
        "Class 'SharedResource' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/managers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'execute' has parameters but no Args/Parameters documentation",
        "Function 'execute_phase' has parameters but no Args/Parameters documentation",
        "Function 'is_critical_phase' has parameters but no Args/Parameters documentation",
        "Function 'aggregate_results' has parameters but no Args/Parameters documentation",
        "Function 'validate_config' has parameters but no Args/Parameters documentation",
        "Function 'validate_specific_config' has parameters but no Args/Parameters documentation",
        "Function 'execute_phase' has parameters but no Args/Parameters documentation",
        "Function 'is_critical_phase' has parameters but no Args/Parameters documentation",
        "Function 'aggregate_results' has parameters but no Args/Parameters documentation",
        "Function 'validate_specific_config' has parameters but no Args/Parameters documentation",
        "Function 'execute_phase' has parameters but no Args/Parameters documentation",
        "Function 'is_critical_phase' has parameters but no Args/Parameters documentation",
        "Function 'aggregate_results' has parameters but no Args/Parameters documentation",
        "Function 'validate_specific_config' has parameters but no Args/Parameters documentation",
        "Function 'execute_phase' has parameters but no Args/Parameters documentation",
        "Function 'is_critical_phase' has parameters but no Args/Parameters documentation",
        "Function 'aggregate_results' has parameters but no Args/Parameters documentation",
        "Function 'validate_specific_config' has parameters but no Args/Parameters documentation",
        "Function 'execute_phase' has parameters but no Args/Parameters documentation",
        "Function 'is_critical_phase' has parameters but no Args/Parameters documentation",
        "Function 'aggregate_results' has parameters but no Args/Parameters documentation",
        "Function 'validate_specific_config' has parameters but no Args/Parameters documentation",
        "Function 'execute_phase' has parameters but no Args/Parameters documentation",
        "Function 'is_critical_phase' has parameters but no Args/Parameters documentation",
        "Function 'aggregate_results' has parameters but no Args/Parameters documentation",
        "Function 'validate_specific_config' has parameters but no Args/Parameters documentation",
        "Function 'create_manager' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BaseWorkflowManager' docstring should reference relevant architecture documents",
        "Class 'OptimizationManager' docstring should reference relevant architecture documents",
        "Class 'BacktestManager' docstring should reference relevant architecture documents",
        "Class 'LiveTradingManager' docstring should reference relevant architecture documents",
        "Class 'AnalysisManager' docstring should reference relevant architecture documents",
        "Class 'ValidationManager' docstring should reference relevant architecture documents",
        "Class 'WorkflowManagerFactory' docstring should reference relevant architecture documents",
        "Function 'execute' missing Returns documentation",
        "Function 'get_execution_phases' missing Returns documentation",
        "Function 'execute_phase' missing Returns documentation",
        "Function 'is_critical_phase' missing Returns documentation",
        "Function 'aggregate_results' missing Returns documentation",
        "Function 'validate_config' missing Returns documentation",
        "Function 'validate_specific_config' missing Returns documentation",
        "Function 'get_execution_phases' missing Returns documentation",
        "Function 'execute_phase' missing Returns documentation",
        "Function 'is_critical_phase' missing Returns documentation",
        "Function 'aggregate_results' missing Returns documentation",
        "Function 'validate_specific_config' missing Returns documentation",
        "Function 'get_required_capabilities' missing Returns documentation",
        "Function 'get_execution_phases' missing Returns documentation",
        "Function 'execute_phase' missing Returns documentation",
        "Function 'is_critical_phase' missing Returns documentation",
        "Function 'aggregate_results' missing Returns documentation",
        "Function 'validate_specific_config' missing Returns documentation",
        "Function 'get_required_capabilities' missing Returns documentation",
        "Function 'get_execution_phases' missing Returns documentation",
        "Function 'execute_phase' missing Returns documentation",
        "Function 'is_critical_phase' missing Returns documentation",
        "Function 'aggregate_results' missing Returns documentation",
        "Function 'validate_specific_config' missing Returns documentation",
        "Function 'get_execution_phases' missing Returns documentation",
        "Function 'execute_phase' missing Returns documentation",
        "Function 'is_critical_phase' missing Returns documentation",
        "Function 'aggregate_results' missing Returns documentation",
        "Function 'validate_specific_config' missing Returns documentation",
        "Function 'get_execution_phases' missing Returns documentation",
        "Function 'execute_phase' missing Returns documentation",
        "Function 'is_critical_phase' missing Returns documentation",
        "Function 'aggregate_results' missing Returns documentation",
        "Function 'validate_specific_config' missing Returns documentation",
        "Function 'create_manager' missing Returns documentation",
        "Class 'OptimizationManager' should have __init__ method",
        "Class 'BacktestManager' should have __init__ method",
        "Class 'LiveTradingManager' should have __init__ method",
        "Class 'AnalysisManager' should have __init__ method",
        "Class 'ValidationManager' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/phase_management.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'record_phase_output' has parameters but no Args/Parameters documentation",
        "Function 'get_phase_input' has parameters but no Args/Parameters documentation",
        "Function 'generate_container_id' has parameters but no Args/Parameters documentation",
        "Function 'write' has parameters but no Args/Parameters documentation",
        "Function 'handle_container_result' has parameters but no Args/Parameters documentation",
        "Function 'get_top_results' has parameters but no Args/Parameters documentation",
        "Function 'add_regime_instance' has parameters but no Args/Parameters documentation",
        "Function 'get_regime_performance' has parameters but no Args/Parameters documentation",
        "Function 'from_dict' has parameters but no Args/Parameters documentation",
        "Function 'save_state' has parameters but no Args/Parameters documentation",
        "Function 'restore_state' has parameters but no Args/Parameters documentation",
        "Function 'delete_checkpoint' has parameters but no Args/Parameters documentation",
        "Function 'execute_phase' has parameters but no Args/Parameters documentation",
        "Function 'register_service' has parameters but no Args/Parameters documentation",
        "Function 'get_service' has parameters but no Args/Parameters documentation",
        "Function 'get_service_version' has parameters but no Args/Parameters documentation",
        "Function 'record_execution' has parameters but no Args/Parameters documentation",
        "Function 'validate_execution_path' has parameters but no Args/Parameters documentation",
        "Function 'create_forward_period' has parameters but no Args/Parameters documentation",
        "Function 'track_strategy_identity' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PhaseTransition' docstring should reference relevant architecture documents",
        "Class 'ContainerNamingStrategy' docstring should reference relevant architecture documents",
        "Class 'StreamingResultWriter' docstring should reference relevant architecture documents",
        "Class 'ResultAggregator' docstring should reference relevant architecture documents",
        "Class 'ResultAggregator' should include Architecture Context section linking to design documents",
        "Class 'StrategyIdentity' docstring should reference relevant architecture documents",
        "Class 'StrategyIdentity' should include Architecture Context section linking to design documents",
        "Class 'WorkflowState' docstring should reference relevant architecture documents",
        "Class 'CheckpointManager' docstring should reference relevant architecture documents",
        "Class 'CheckpointManager' should include Architecture Context section linking to design documents",
        "Class 'WorkflowCoordinator' docstring should reference relevant architecture documents",
        "Class 'WorkflowCoordinator' should include Architecture Context section linking to design documents",
        "Class 'SharedServiceRegistry' docstring should reference relevant architecture documents",
        "Class 'WalkForwardValidator' docstring should reference relevant architecture documents",
        "Class 'WalkForwardValidator' should include Architecture Context section linking to design documents",
        "Function 'integrate_phase_management' missing Returns documentation",
        "Function 'integrate_phase_management' missing usage example",
        "Function 'record_phase_output' missing Returns documentation",
        "Function 'get_phase_input' missing Returns documentation",
        "Function 'generate_container_id' missing Returns documentation",
        "Function 'parse_container_id' missing Returns documentation",
        "Function 'write' missing Returns documentation",
        "ctiondef 'flush_all' has very short docstring",
        "Function 'flush_all' missing Returns documentation",
        "Function 'close' missing Returns documentation",
        "Function 'handle_container_result' missing Returns documentation",
        "Function 'get_top_results' missing Returns documentation",
        "Function 'close' missing Returns documentation",
        "Function 'add_regime_instance' missing Returns documentation",
        "Function 'get_regime_performance' missing Returns documentation",
        "Function 'to_dict' missing Returns documentation",
        "Function 'from_dict' missing Returns documentation",
        "Function 'save_state' missing Returns documentation",
        "Function 'restore_state' missing Returns documentation",
        "Function 'delete_checkpoint' missing Returns documentation",
        "Function 'execute_phase' missing Returns documentation",
        "Function 'register_service' missing Returns documentation",
        "Function 'get_service' missing Returns documentation",
        "Function 'get_service_version' missing Returns documentation",
        "Function 'record_execution' missing Returns documentation",
        "Function 'validate_execution_path' missing Returns documentation",
        "Function 'create_forward_period' missing Returns documentation",
        "Function 'enhanced_execute_workflow' missing Returns documentation",
        "Function 'track_strategy_identity' missing Returns documentation",
        "Class 'ContainerNamingStrategy' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/protocols.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'execute' has parameters but no Args/Parameters documentation",
        "Function 'validate_config' has parameters but no Args/Parameters documentation",
        "Function 'execute' has parameters but no Args/Parameters documentation",
        "Function 'validate_inputs' has parameters but no Args/Parameters documentation",
        "Function 'write_result' has parameters but no Args/Parameters documentation",
        "Function 'write_batch' has parameters but no Args/Parameters documentation",
        "Function 'save_checkpoint' has parameters but no Args/Parameters documentation",
        "Function 'load_checkpoint' has parameters but no Args/Parameters documentation",
        "Function 'list_checkpoints' has parameters but no Args/Parameters documentation",
        "Function 'delete_checkpoint' has parameters but no Args/Parameters documentation",
        "Function 'allocate_resources' has parameters but no Args/Parameters documentation",
        "Function 'release_resources' has parameters but no Args/Parameters documentation",
        "Function 'check_availability' has parameters but no Args/Parameters documentation",
        "Function 'aggregate' has parameters but no Args/Parameters documentation",
        "Function 'validate_completeness' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'WorkflowManager' docstring should reference relevant architecture documents",
        "Class 'PhaseExecutor' docstring should reference relevant architecture documents",
        "Class 'ResultStreamer' docstring should reference relevant architecture documents",
        "Class 'CheckpointManager' docstring should reference relevant architecture documents",
        "Class 'ResourceManager' docstring should reference relevant architecture documents",
        "Class 'ResultAggregator' docstring should reference relevant architecture documents",
        "Function 'execute' missing Returns documentation",
        "Function 'validate_config' missing Returns documentation",
        "Function 'get_required_capabilities' missing Returns documentation",
        "Function 'execute' missing Returns documentation",
        "Function 'validate_inputs' missing Returns documentation",
        "Function 'write_result' missing Returns documentation",
        "Function 'write_batch' missing Returns documentation",
        "Function 'flush' missing Returns documentation",
        "ctiondef 'close' has very short docstring",
        "Function 'close' missing Returns documentation",
        "ctiondef 'save_checkpoint' has very short docstring",
        "Function 'save_checkpoint' missing Returns documentation",
        "ctiondef 'load_checkpoint' has very short docstring",
        "Function 'load_checkpoint' missing Returns documentation",
        "Function 'list_checkpoints' missing Returns documentation",
        "Function 'delete_checkpoint' missing Returns documentation",
        "Function 'allocate_resources' missing Returns documentation",
        "Function 'release_resources' missing Returns documentation",
        "Function 'check_availability' missing Returns documentation",
        "Function 'aggregate' missing Returns documentation",
        "Function 'validate_completeness' missing Returns documentation",
        "Class 'WorkflowManager' should have __init__ method",
        "Class 'PhaseExecutor' should have __init__ method",
        "Class 'ResultStreamer' should have __init__ method",
        "Class 'CheckpointManager' should have __init__ method",
        "Class 'ResourceManager' should have __init__ method",
        "Class 'ResultAggregator' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/simple_types.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'update_phase' has parameters but no Args/Parameters documentation",
        "Function 'add_phase_result' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'WorkflowType' docstring should reference relevant architecture documents",
        "Class 'WorkflowPhase' docstring should reference relevant architecture documents",
        "Class 'ExecutionContext' docstring should reference relevant architecture documents",
        "Class 'WorkflowConfig' docstring should reference relevant architecture documents",
        "Class 'PhaseResult' docstring should reference relevant architecture documents",
        "Class 'WorkflowResult' docstring should reference relevant architecture documents",
        "Function 'update_phase' missing Returns documentation",
        "Function 'dict' missing Returns documentation",
        "ctiondef 'add_phase_result' has very short docstring",
        "Function 'add_phase_result' missing Returns documentation",
        "Function 'finalize' missing Returns documentation",
        "Class 'WorkflowType' should have __init__ method",
        "Class 'WorkflowPhase' should have __init__ method",
        "Class 'ExecutionContext' should have __init__ method",
        "Class 'WorkflowConfig' should have __init__ method",
        "Class 'PhaseResult' should have __init__ method",
        "Class 'WorkflowResult' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/types.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'update_phase' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'WorkflowType' docstring should reference relevant architecture documents",
        "Class 'WorkflowPhase' docstring should reference relevant architecture documents",
        "Class 'ExecutionContext' docstring should reference relevant architecture documents",
        "Class 'WorkflowConfig' docstring should reference relevant architecture documents",
        "Class 'PhaseResult' docstring should reference relevant architecture documents",
        "Class 'WorkflowResult' docstring should reference relevant architecture documents",
        "Function 'update_phase' missing Returns documentation",
        "Function 'finalize' missing Returns documentation",
        "Class 'WorkflowType' should have __init__ method",
        "Class 'WorkflowPhase' should have __init__ method",
        "Class 'ExecutionContext' should have __init__ method",
        "Class 'WorkflowConfig' should have __init__ method",
        "Class 'PhaseResult' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/types_no_pydantic.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'update_phase' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'WorkflowType' docstring should reference relevant architecture documents",
        "Class 'WorkflowPhase' docstring should reference relevant architecture documents",
        "Class 'ExecutionContext' docstring should reference relevant architecture documents",
        "Class 'WorkflowConfig' docstring should reference relevant architecture documents",
        "Class 'PhaseResult' docstring should reference relevant architecture documents",
        "Class 'WorkflowResult' docstring should reference relevant architecture documents",
        "Function 'update_phase' missing Returns documentation",
        "Function 'dict' missing Returns documentation",
        "Function 'finalize' missing Returns documentation",
        "Function 'dict' missing Returns documentation",
        "Class 'WorkflowType' should have __init__ method",
        "Class 'WorkflowPhase' should have __init__ method",
        "Class 'ExecutionContext' should have __init__ method",
        "Class 'WorkflowConfig' should have __init__ method",
        "Class 'PhaseResult' should have __init__ method",
        "Class 'WorkflowResult' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'main' missing Returns documentation",
        "Function 'main' missing usage example"
      ],
      "score": 0.21428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/__main__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/__pip-runner__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'version_str'",
        "Missing docstring for ssdef 'PipImportRedirectingFinder'",
        "Missing docstring for ctiondef 'find_spec'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'main' missing Returns documentation",
        "Function 'main' missing usage example"
      ],
      "score": 0.21428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/build_env.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'check_requirements' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'install_requirements'",
        "Missing docstring for ctiondef 'cleanup'",
        "Missing docstring for ctiondef 'install_requirements'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_runnable_pip' missing Returns documentation",
        "Function 'get_runnable_pip' missing usage example",
        "Class 'BuildEnvironment' docstring should reference relevant architecture documents",
        "Class 'NoOpBuildEnvironment' docstring should reference relevant architecture documents",
        "Function 'check_requirements' missing Returns documentation",
        "Function 'check_requirements' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/cache.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'CacheEntry'",
        "Function 'get_path_for_link' has parameters but no Args/Parameters documentation",
        "Function 'get' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get'",
        "Missing docstring for ctiondef 'get_path_for_link'",
        "Missing docstring for ctiondef 'get_ephem_path_for_link'",
        "Missing docstring for ctiondef 'get'",
        "Function 'get_cache_entry' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'record_download_origin'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Cache' docstring should reference relevant architecture documents",
        "Class 'Cache' should include Architecture Context section linking to design documents",
        "Class 'SimpleWheelCache' docstring should reference relevant architecture documents",
        "Class 'EphemWheelCache' docstring should reference relevant architecture documents",
        "Class 'WheelCache' docstring should reference relevant architecture documents",
        "Class 'WheelCache' should include Architecture Context section linking to design documents",
        "Function 'get_path_for_link' missing Returns documentation",
        "Function 'get' missing Returns documentation",
        "Function 'get_path_for_link' missing Returns documentation",
        "Function 'get_path_for_link' missing usage example",
        "Function 'get_cache_entry' missing Returns documentation",
        "Function 'get_cache_entry' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/cli/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/cli/autocompletion.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'autocomplete' missing Returns documentation",
        "Function 'get_path_completion_type' missing usage example",
        "Function 'auto_complete_paths' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/cli/base_command.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Command'",
        "Missing docstring for ctiondef 'add_options'",
        "Function 'handle_pip_version_check' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'run'",
        "Missing docstring for ctiondef 'parse_args'",
        "Missing docstring for ctiondef 'main'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'handle_pip_version_check' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/cli/cmdoptions.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'make_option_group' has parameters but no Args/Parameters documentation",
        "Missing docstring for ssdef 'PipOption'",
        "Missing docstring for ctiondef 'exists_action'",
        "Missing docstring for ctiondef 'extra_index_url'",
        "Missing docstring for ctiondef 'find_links'",
        "Missing docstring for ctiondef 'trusted_host'",
        "Missing docstring for ctiondef 'constraints'",
        "Missing docstring for ctiondef 'requirements'",
        "Missing docstring for ctiondef 'editable'",
        "Missing docstring for ctiondef 'no_binary'",
        "Missing docstring for ctiondef 'only_binary'",
        "Missing docstring for ctiondef 'add_target_python_options'",
        "Missing docstring for ctiondef 'make_target_python'",
        "Missing docstring for ctiondef 'prefer_binary'",
        "Missing docstring for ctiondef 'check_list_path_option'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'raise_option_error' missing Returns documentation",
        "Function 'raise_option_error' missing usage example",
        "Function 'make_option_group' missing Returns documentation",
        "Function 'make_option_group' missing usage example",
        "Function 'check_dist_restriction' missing Returns documentation",
        "Function 'check_dist_restriction' missing usage example",
        "Class 'PipOption' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/cli/command_context.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ssdef 'CommandContextMixIn'",
        "Missing docstring for ctiondef 'main_context'",
        "Missing docstring for ctiondef 'enter_context'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/cli/index_command.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get_default_session' has parameters but no Args/Parameters documentation",
        "Function 'handle_pip_version_check' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SessionCommandMixin' docstring should reference relevant architecture documents",
        "Class 'IndexGroupCommand' docstring should reference relevant architecture documents",
        "Class 'IndexGroupCommand' should include Architecture Context section linking to design documents",
        "Function 'get_default_session' missing Returns documentation",
        "Function 'handle_pip_version_check' missing Returns documentation",
        "Function 'handle_pip_version_check' missing usage example",
        "Class 'IndexGroupCommand' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/cli/main.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'main'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.011428571428571399,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/cli/main_parser.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'identify_python_interpreter'",
        "Missing docstring for ctiondef 'parse_command'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'create_main_parser' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/cli/parser.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'CustomOptionParser'",
        "Missing docstring for ctiondef 'format_option_strings'",
        "Missing docstring for ctiondef 'format_heading'",
        "Function 'format_usage' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'format_description'",
        "Missing docstring for ctiondef 'format_epilog'",
        "Missing docstring for ctiondef 'indent_lines'",
        "Missing docstring for ctiondef 'expand_default'",
        "Function 'insert_option_group' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'check_default'",
        "Missing docstring for ctiondef 'error'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PrettyHelpFormatter' docstring should reference relevant architecture documents",
        "Class 'UpdatingDefaultsHelpFormatter' docstring should reference relevant architecture documents",
        "Class 'UpdatingDefaultsHelpFormatter' should include Architecture Context section linking to design documents",
        "Class 'ConfigOptionParser' docstring should reference relevant architecture documents",
        "Class 'ConfigOptionParser' should include Architecture Context section linking to design documents",
        "Function 'format_usage' missing Returns documentation",
        "Function 'insert_option_group' missing Returns documentation",
        "Function 'option_list_all' missing Returns documentation",
        "Function 'get_default_values' missing Returns documentation",
        "Function 'get_default_values' missing usage example",
        "Class 'UpdatingDefaultsHelpFormatter' should have __init__ method",
        "Class 'CustomOptionParser' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/cli/progress_bars.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'write_progress'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_download_progress_renderer' missing Returns documentation",
        "Function 'get_download_progress_renderer' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/cli/req_command.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'RequirementCommand'",
        "Missing docstring for ctiondef 'configure_tempdir_registry'",
        "Missing docstring for ctiondef 'wrapper'",
        "Function 'make_requirement_preparer' has parameters but no Args/Parameters documentation",
        "Function 'make_resolver' has parameters but no Args/Parameters documentation",
        "Function 'get_requirements' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'with_cleanup' missing Returns documentation",
        "Function 'determine_resolver_variant' missing Returns documentation",
        "Function 'make_requirement_preparer' missing Returns documentation",
        "Function 'make_resolver' missing Returns documentation",
        "Function 'get_requirements' missing Returns documentation",
        "Function 'trace_basic_info' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/cli/spinners.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ssdef 'SpinnerInterface'",
        "Missing docstring for ssdef 'InteractiveSpinner'",
        "Missing docstring for ssdef 'NonInteractiveSpinner'",
        "Missing docstring for ssdef 'RateLimiter'",
        "Missing docstring for ctiondef 'open_spinner'",
        "Missing docstring for ctiondef 'hidden_cursor'",
        "Missing docstring for ctiondef 'spin'",
        "Missing docstring for ctiondef 'finish'",
        "Missing docstring for ctiondef 'spin'",
        "Missing docstring for ctiondef 'finish'",
        "Missing docstring for ctiondef 'spin'",
        "Missing docstring for ctiondef 'finish'",
        "Missing docstring for ctiondef 'ready'",
        "Missing docstring for ctiondef 'reset'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Class 'SpinnerInterface' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.031428571428571396,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/cli/status_codes.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'create_command' missing Returns documentation",
        "Function 'get_similar_commands' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/cache.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'add_options'",
        "Missing docstring for ctiondef 'run'",
        "Missing docstring for ctiondef 'get_cache_dir'",
        "Missing docstring for ctiondef 'get_cache_info'",
        "Missing docstring for ctiondef 'list_cache_items'",
        "Missing docstring for ctiondef 'format_for_human'",
        "Missing docstring for ctiondef 'format_for_abspath'",
        "Missing docstring for ctiondef 'remove_cache_items'",
        "Missing docstring for ctiondef 'purge_cache'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'CacheCommand' docstring should reference relevant architecture documents",
        "Class 'CacheCommand' should include Architecture Context section linking to design documents",
        "Class 'CacheCommand' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/check.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'run'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'CheckCommand' docstring should reference relevant architecture documents",
        "Class 'CheckCommand' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/completion.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'add_options'",
        "Function 'run' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'CompletionCommand' docstring should reference relevant architecture documents",
        "Function 'run' missing Returns documentation",
        "Class 'CompletionCommand' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/configuration.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'add_options'",
        "Missing docstring for ctiondef 'run'",
        "Missing docstring for ctiondef 'list_values'",
        "Missing docstring for ctiondef 'get_name'",
        "Missing docstring for ctiondef 'set_name_value'",
        "Missing docstring for ctiondef 'unset_name'",
        "Function 'list_config_values' has parameters but no Args/Parameters documentation",
        "Function 'print_config_file_values' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'open_in_editor'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ConfigurationCommand' docstring should reference relevant architecture documents",
        "Class 'ConfigurationCommand' should include Architecture Context section linking to design documents",
        "Function 'list_config_values' missing Returns documentation",
        "Function 'print_config_file_values' missing Returns documentation",
        "Function 'print_env_var_values' missing Returns documentation",
        "Class 'ConfigurationCommand' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/debug.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'show_value'",
        "Missing docstring for ctiondef 'show_sys_implementation'",
        "Missing docstring for ctiondef 'create_vendor_txt_map'",
        "Missing docstring for ctiondef 'get_module_from_module_name'",
        "Missing docstring for ctiondef 'get_vendor_version_from_module'",
        "Missing docstring for ctiondef 'show_vendor_versions'",
        "Missing docstring for ctiondef 'show_tags'",
        "Missing docstring for ctiondef 'ca_bundle_info'",
        "Missing docstring for ctiondef 'add_options'",
        "Missing docstring for ctiondef 'run'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'show_actual_vendor_versions' missing Returns documentation",
        "Function 'show_actual_vendor_versions' missing usage example",
        "Class 'DebugCommand' docstring should reference relevant architecture documents",
        "Class 'DebugCommand' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/download.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'add_options'",
        "Missing docstring for ctiondef 'run'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'DownloadCommand' docstring should reference relevant architecture documents",
        "Class 'DownloadCommand' should include Architecture Context section linking to design documents",
        "Class 'DownloadCommand' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/freeze.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'add_options'",
        "Missing docstring for ctiondef 'run'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'FreezeCommand' docstring should reference relevant architecture documents",
        "Class 'FreezeCommand' should include Architecture Context section linking to design documents",
        "Class 'FreezeCommand' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/hash.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'add_options'",
        "Missing docstring for ctiondef 'run'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'HashCommand' docstring should reference relevant architecture documents",
        "Class 'HashCommand' should include Architecture Context section linking to design documents",
        "Class 'HashCommand' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/help.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'run'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'HelpCommand' docstring should reference relevant architecture documents",
        "Class 'HelpCommand' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/index.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'add_options'",
        "Missing docstring for ctiondef 'run'",
        "Missing docstring for ctiondef 'get_available_package_versions'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'IndexCommand' docstring should reference relevant architecture documents",
        "Class 'IndexCommand' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/inspect.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'add_options'",
        "Missing docstring for ctiondef 'run'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'InspectCommand' docstring should reference relevant architecture documents",
        "Class 'InspectCommand' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/install.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_lib_location_guesses'",
        "Missing docstring for ctiondef 'site_packages_writable'",
        "Function 'decide_user_install' has parameters but no Args/Parameters documentation",
        "Function 'create_os_error_message' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'add_options'",
        "Missing docstring for ctiondef 'run'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'InstallCommand' docstring should reference relevant architecture documents",
        "Class 'InstallCommand' should include Architecture Context section linking to design documents",
        "Function 'decide_user_install' missing Returns documentation",
        "Function 'decide_user_install' missing usage example",
        "Function 'create_os_error_message' missing Returns documentation",
        "Function 'create_os_error_message' missing usage example",
        "Class 'InstallCommand' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/list.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'format_for_columns' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'format_for_json'",
        "Missing docstring for ctiondef 'add_options'",
        "Missing docstring for ctiondef 'handle_pip_version_check'",
        "Missing docstring for ctiondef 'run'",
        "Missing docstring for ctiondef 'get_outdated'",
        "Missing docstring for ctiondef 'get_uptodate'",
        "Missing docstring for ctiondef 'get_not_required'",
        "Missing docstring for ctiondef 'iter_packages_latest_infos'",
        "Missing docstring for ctiondef 'output_package_listing'",
        "Missing docstring for ctiondef 'output_package_listing_columns'",
        "Missing docstring for ctiondef 'latest_info'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ListCommand' docstring should reference relevant architecture documents",
        "Class 'ListCommand' should include Architecture Context section linking to design documents",
        "Function 'format_for_columns' missing Returns documentation",
        "Class 'ListCommand' should have __init__ method",
        "Class '_DistWithLatestInfo' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/search.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'print_dist_installation_info'",
        "Missing docstring for ctiondef 'print_results'",
        "Missing docstring for ctiondef 'highest_version'",
        "Missing docstring for ssdef 'TransformedHit'",
        "Missing docstring for ctiondef 'add_options'",
        "Missing docstring for ctiondef 'run'",
        "Missing docstring for ctiondef 'search'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SearchCommand' docstring should reference relevant architecture documents",
        "Function 'transform_hits' missing Returns documentation",
        "Function 'transform_hits' missing usage example",
        "Class 'SearchCommand' should have __init__ method",
        "Class 'TransformedHit' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/show.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'print_results' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'add_options'",
        "Missing docstring for ctiondef 'run'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ShowCommand' docstring should reference relevant architecture documents",
        "Class 'ShowCommand' should include Architecture Context section linking to design documents",
        "Function 'search_packages_info' missing Returns documentation",
        "Function 'search_packages_info' missing usage example",
        "Function 'print_results' missing Returns documentation",
        "Class 'ShowCommand' should have __init__ method",
        "Class '_PackageInfo' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/uninstall.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'add_options'",
        "Missing docstring for ctiondef 'run'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'UninstallCommand' docstring should reference relevant architecture documents",
        "Class 'UninstallCommand' should include Architecture Context section linking to design documents",
        "Class 'UninstallCommand' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/commands/wheel.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'add_options'",
        "Missing docstring for ctiondef 'run'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'WheelCommand' docstring should reference relevant architecture documents",
        "Class 'WheelCommand' should include Architecture Context section linking to design documents",
        "Class 'WheelCommand' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/configuration.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_configuration_files'",
        "Function 'get_value' has parameters but no Args/Parameters documentation",
        "Function 'set_value' has parameters but no Args/Parameters documentation",
        "Function 'unset_value' has parameters but no Args/Parameters documentation",
        "Function 'get_values_in_config' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Configuration' docstring should reference relevant architecture documents",
        "Class 'Configuration' should include Architecture Context section linking to design documents",
        "Function 'load' missing Returns documentation",
        "Function 'get_file_to_edit' missing Returns documentation",
        "Function 'items' missing Returns documentation",
        "Function 'get_value' missing Returns documentation",
        "Function 'set_value' missing Returns documentation",
        "Function 'unset_value' missing Returns documentation",
        "Function 'save' missing Returns documentation",
        "Function 'get_environ_vars' missing Returns documentation",
        "Function 'iter_config_files' missing Returns documentation",
        "Function 'iter_config_files' missing usage example",
        "Function 'get_values_in_config' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/distributions/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'make_distribution_for_install_requirement' missing Returns documentation",
        "Using type hints but missing typing imports"
      ],
      "score": 0.21428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/distributions/base.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_metadata_distribution'",
        "Missing docstring for ctiondef 'prepare_distribution_metadata'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'AbstractDistribution' docstring should reference relevant architecture documents",
        "Class 'AbstractDistribution' should include Architecture Context section linking to design documents",
        "Function 'build_tracker_id' missing Returns documentation",
        "Function 'build_tracker_id' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/distributions/installed.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'build_tracker_id'",
        "Missing docstring for ctiondef 'get_metadata_distribution'",
        "Missing docstring for ctiondef 'prepare_distribution_metadata'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'InstalledDistribution' docstring should reference relevant architecture documents",
        "Class 'InstalledDistribution' should include Architecture Context section linking to design documents",
        "Class 'InstalledDistribution' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/distributions/sdist.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_metadata_distribution'",
        "Missing docstring for ctiondef 'prepare_distribution_metadata'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SourceDistribution' docstring should reference relevant architecture documents",
        "Class 'SourceDistribution' should include Architecture Context section linking to design documents",
        "Function 'build_tracker_id' missing Returns documentation",
        "Class 'SourceDistribution' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/distributions/wheel.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'build_tracker_id'",
        "Missing docstring for ctiondef 'prepare_distribution_metadata'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'WheelDistribution' docstring should reference relevant architecture documents",
        "Class 'WheelDistribution' should include Architecture Context section linking to design documents",
        "Function 'get_metadata_distribution' missing Returns documentation",
        "Function 'get_metadata_distribution' missing usage example",
        "Class 'WheelDistribution' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/exceptions.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'InvalidSchemeCombination'",
        "Missing docstring for ssdef 'MetadataGenerationFailed'",
        "Missing docstring for ssdef 'UninstallMissingRecord'",
        "Missing docstring for ssdef 'LegacyDistutilsInstall'",
        "Missing docstring for ssdef 'InvalidInstalledPackage'",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'append'",
        "Missing docstring for ctiondef 'body'",
        "Missing docstring for ctiondef 'body'",
        "Missing docstring for ctiondef 'from_config'",
        "Missing docstring for ctiondef 'hash_then_or'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "ssdef 'PipError' has very short docstring",
        "Class 'PipError' docstring should reference relevant architecture documents",
        "Class 'DiagnosticPipError' docstring should reference relevant architecture documents",
        "Class 'DiagnosticPipError' should include Architecture Context section linking to design documents",
        "Class 'ConfigurationError' docstring should reference relevant architecture documents",
        "Class 'InstallationError' docstring should reference relevant architecture documents",
        "Class 'MissingPyProjectBuildRequires' docstring should reference relevant architecture documents",
        "Class 'InvalidPyProjectBuildRequires' docstring should reference relevant architecture documents",
        "Class 'NoneMetadataError' docstring should reference relevant architecture documents",
        "Class 'NoneMetadataError' should include Architecture Context section linking to design documents",
        "Class 'UserInstallationInvalid' docstring should reference relevant architecture documents",
        "Class 'DistributionNotFound' docstring should reference relevant architecture documents",
        "Class 'RequirementsFileParseError' docstring should reference relevant architecture documents",
        "Class 'BestVersionAlreadyInstalled' docstring should reference relevant architecture documents",
        "Class 'BadCommand' docstring should reference relevant architecture documents",
        "Class 'CommandError' docstring should reference relevant architecture documents",
        "Class 'PreviousBuildDirError' docstring should reference relevant architecture documents",
        "Class 'NetworkConnectionError' docstring should reference relevant architecture documents",
        "Class 'InvalidWheelFilename' docstring should reference relevant architecture documents",
        "ssdef 'UnsupportedWheel' has very short docstring",
        "Class 'UnsupportedWheel' docstring should reference relevant architecture documents",
        "Class 'InvalidWheel' docstring should reference relevant architecture documents",
        "Class 'MetadataInconsistent' docstring should reference relevant architecture documents",
        "Class 'MetadataInconsistent' should include Architecture Context section linking to design documents",
        "Class 'MetadataInvalid' docstring should reference relevant architecture documents",
        "Class 'InstallationSubprocessError' docstring should reference relevant architecture documents",
        "Class 'HashErrors' docstring should reference relevant architecture documents",
        "Class 'HashError' docstring should reference relevant architecture documents",
        "Class 'HashError' should include Architecture Context section linking to design documents",
        "Class 'VcsHashUnsupported' docstring should reference relevant architecture documents",
        "Class 'VcsHashUnsupported' should include Architecture Context section linking to design documents",
        "Class 'DirectoryUrlHashUnsupported' docstring should reference relevant architecture documents",
        "Class 'DirectoryUrlHashUnsupported' should include Architecture Context section linking to design documents",
        "Class 'HashMissing' docstring should reference relevant architecture documents",
        "Class 'HashUnpinned' docstring should reference relevant architecture documents",
        "Class 'HashMismatch' docstring should reference relevant architecture documents",
        "Class 'HashMismatch' should include Architecture Context section linking to design documents",
        "Class 'UnsupportedPythonVersion' docstring should reference relevant architecture documents",
        "Class 'ConfigurationFileCouldNotBeLoaded' docstring should reference relevant architecture documents",
        "Class 'ExternallyManagedEnvironment' docstring should reference relevant architecture documents",
        "Class 'ExternallyManagedEnvironment' should include Architecture Context section linking to design documents",
        "Function 'body' missing Returns documentation",
        "Function 'body' missing usage example",
        "Class 'UserInstallationInvalid' should have __init__ method",
        "Class 'HashError' should have __init__ method",
        "Class 'VcsHashUnsupported' should have __init__ method",
        "Class 'DirectoryUrlHashUnsupported' should have __init__ method",
        "Class 'HashUnpinned' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/index/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/index/collector.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'CacheablePageContent'",
        "Missing docstring for ssdef 'ParseLinks'",
        "Missing docstring for ssdef 'CollectedSources'",
        "Missing docstring for ctiondef 'wrapper'",
        "Missing docstring for ctiondef 'wrapper_wrapper'",
        "Missing docstring for ctiondef 'handle_starttag'",
        "Missing docstring for ctiondef 'get_href'",
        "Missing docstring for ctiondef 'find_links'",
        "Function 'fetch_response' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'collect_sources'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'with_cached_index_content' missing Returns documentation",
        "Function 'with_cached_index_content' missing usage example",
        "Function 'parse_links' missing Returns documentation",
        "Class 'IndexContent' docstring should reference relevant architecture documents",
        "Class 'IndexContent' should include Architecture Context section linking to design documents",
        "Class 'HTMLLinkParser' docstring should reference relevant architecture documents",
        "Class 'LinkCollector' docstring should reference relevant architecture documents",
        "Class 'LinkCollector' should include Architecture Context section linking to design documents",
        "Function 'create' missing Returns documentation",
        "Function 'create' missing usage example",
        "Function 'fetch_response' missing Returns documentation",
        "Class 'IndexContent' should have __init__ method",
        "Class 'CollectedSources' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/index/package_finder.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'LinkType'",
        "Function 'filter_unallowed_hashes' has parameters but no Args/Parameters documentation",
        "Function 'evaluate_link' has parameters but no Args/Parameters documentation",
        "Function 'get_applicable_candidates' has parameters but no Args/Parameters documentation",
        "Function 'sort_best_candidate' has parameters but no Args/Parameters documentation",
        "Function 'compute_best_candidate' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'target_python'",
        "Missing docstring for ctiondef 'search_scope'",
        "Missing docstring for ctiondef 'search_scope'",
        "Missing docstring for ctiondef 'find_links'",
        "Missing docstring for ctiondef 'index_urls'",
        "Missing docstring for ctiondef 'proxy'",
        "Missing docstring for ctiondef 'trusted_hosts'",
        "Missing docstring for ctiondef 'custom_cert'",
        "Missing docstring for ctiondef 'client_cert'",
        "Missing docstring for ctiondef 'allow_all_prereleases'",
        "Missing docstring for ctiondef 'set_allow_all_prereleases'",
        "Missing docstring for ctiondef 'prefer_binary'",
        "Missing docstring for ctiondef 'set_prefer_binary'",
        "Missing docstring for ctiondef 'requires_python_skipped_reasons'",
        "Missing docstring for ctiondef 'make_link_evaluator'",
        "Function 'get_install_candidate' has parameters but no Args/Parameters documentation",
        "Function 'evaluate_links' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'process_project_url'",
        "Function 'find_all_candidates' has parameters but no Args/Parameters documentation",
        "Function 'make_candidate_evaluator' has parameters but no Args/Parameters documentation",
        "Function 'find_requirement' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'LinkEvaluator' docstring should reference relevant architecture documents",
        "Function 'filter_unallowed_hashes' missing Returns documentation",
        "Function 'filter_unallowed_hashes' missing usage example",
        "Class 'CandidatePreferences' docstring should reference relevant architecture documents",
        "Class 'BestCandidateResult' docstring should reference relevant architecture documents",
        "Class 'BestCandidateResult' should include Architecture Context section linking to design documents",
        "Class 'CandidateEvaluator' docstring should reference relevant architecture documents",
        "Class 'PackageFinder' docstring should reference relevant architecture documents",
        "Class 'PackageFinder' should include Architecture Context section linking to design documents",
        "Function 'evaluate_link' missing usage example",
        "Function 'create' missing Returns documentation",
        "Function 'create' missing usage example",
        "Function 'get_applicable_candidates' missing Returns documentation",
        "Function 'sort_best_candidate' missing Returns documentation",
        "Function 'compute_best_candidate' missing Returns documentation",
        "Function 'create' missing Returns documentation",
        "Function 'create' missing usage example",
        "Function 'get_install_candidate' missing Returns documentation",
        "Function 'get_install_candidate' missing usage example",
        "Function 'evaluate_links' missing Returns documentation",
        "Function 'find_all_candidates' missing Returns documentation",
        "Function 'find_all_candidates' missing usage example",
        "Function 'make_candidate_evaluator' missing Returns documentation",
        "Function 'find_best_candidate' missing usage example",
        "Function 'find_requirement' missing Returns documentation",
        "Function 'find_requirement' missing usage example",
        "Class 'LinkType' should have __init__ method",
        "Class 'CandidatePreferences' should have __init__ method",
        "Class 'BestCandidateResult' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/index/sources.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'LinkSource'",
        "Missing docstring for ctiondef 'build_source'",
        "Missing docstring for ctiondef 'page_candidates'",
        "Missing docstring for ctiondef 'project_name_to_urls'",
        "Missing docstring for ctiondef 'link'",
        "Missing docstring for ctiondef 'page_candidates'",
        "Missing docstring for ctiondef 'file_links'",
        "Missing docstring for ctiondef 'link'",
        "Missing docstring for ctiondef 'page_candidates'",
        "Missing docstring for ctiondef 'file_links'",
        "Missing docstring for ctiondef 'link'",
        "Missing docstring for ctiondef 'page_candidates'",
        "Missing docstring for ctiondef 'file_links'",
        "Missing docstring for ctiondef 'link'",
        "Missing docstring for ctiondef 'page_candidates'",
        "Missing docstring for ctiondef 'file_links'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'link' missing Returns documentation",
        "Function 'page_candidates' missing Returns documentation",
        "Function 'file_links' missing Returns documentation",
        "Class 'LinkSource' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/locations/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_scheme'",
        "Missing docstring for ctiondef 'get_bin_prefix'",
        "Missing docstring for ctiondef 'get_bin_user'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_purelib' missing Returns documentation",
        "Function 'get_platlib' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/locations/_distutils.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'distutils_scheme' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_bin_prefix'",
        "Missing docstring for ctiondef 'get_purelib'",
        "Missing docstring for ctiondef 'get_platlib'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'distutils_scheme' missing Returns documentation",
        "Function 'get_scheme' missing Returns documentation",
        "Function 'get_scheme' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/locations/_sysconfig.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_bin_prefix'",
        "Missing docstring for ctiondef 'get_purelib'",
        "Missing docstring for ctiondef 'get_platlib'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_scheme' missing Returns documentation",
        "Function 'get_scheme' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/locations/base.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'change_root' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_src_prefix'",
        "Missing docstring for ctiondef 'is_osx_framework'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_major_minor_version' missing Returns documentation",
        "Function 'change_root' missing Returns documentation",
        "Function 'change_root' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/main.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'main' missing Returns documentation",
        "Function 'main' missing usage example"
      ],
      "score": 0.21428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/metadata/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Backend'",
        "Missing docstring for ctiondef 'select_backend'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_default_environment' missing Returns documentation",
        "Function 'get_default_environment' missing usage example",
        "Function 'get_environment' missing Returns documentation",
        "Function 'get_environment' missing usage example",
        "Function 'get_directory_distribution' missing Returns documentation",
        "Function 'get_directory_distribution' missing usage example",
        "Function 'get_wheel_distribution' missing Returns documentation",
        "Function 'get_wheel_distribution' missing usage example",
        "Function 'get_metadata_distribution' missing Returns documentation",
        "Function 'get_metadata_distribution' missing usage example",
        "Class 'Backend' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/metadata/_json.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'json_name'",
        "Missing docstring for ctiondef 'sanitise_header'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'msg_to_json' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/metadata/base.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'BaseEntryPoint'",
        "Missing docstring for ssdef 'RequiresEntry'",
        "Missing docstring for ssdef 'BaseDistribution'",
        "Missing docstring for ssdef 'Wheel'",
        "Missing docstring for ssdef 'FilesystemWheel'",
        "Missing docstring for ssdef 'MemoryWheel'",
        "Missing docstring for ctiondef 'name'",
        "Missing docstring for ctiondef 'value'",
        "Missing docstring for ctiondef 'group'",
        "Missing docstring for ctiondef 'canonical_name'",
        "Missing docstring for ctiondef 'version'",
        "Missing docstring for ctiondef 'raw_version'",
        "Missing docstring for ctiondef 'installer'",
        "Missing docstring for ctiondef 'requested'",
        "Missing docstring for ctiondef 'editable'",
        "Missing docstring for ctiondef 'in_usersite'",
        "Missing docstring for ctiondef 'in_site_packages'",
        "Function 'is_file' has parameters but no Args/Parameters documentation",
        "Function 'read_text' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'iter_entry_points'",
        "Function 'iter_dependencies' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'default'",
        "Missing docstring for ctiondef 'from_paths'",
        "Function 'get_distribution' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'as_zipfile'",
        "Missing docstring for ctiondef 'as_zipfile'",
        "Missing docstring for ctiondef 'as_zipfile'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BaseEnvironment' docstring should reference relevant architecture documents",
        "Function 'from_directory' missing Returns documentation",
        "Function 'from_directory' missing usage example",
        "Function 'from_metadata_file_contents' missing Returns documentation",
        "Function 'from_metadata_file_contents' missing usage example",
        "Function 'from_wheel' missing Returns documentation",
        "Function 'from_wheel' missing usage example",
        "Function 'location' missing Returns documentation",
        "Function 'location' missing usage example",
        "Function 'editable_project_location' missing Returns documentation",
        "Function 'editable_project_location' missing usage example",
        "Function 'installed_location' missing Returns documentation",
        "Function 'installed_location' missing usage example",
        "Function 'info_location' missing Returns documentation",
        "Function 'info_location' missing usage example",
        "Function 'installed_by_distutils' missing Returns documentation",
        "Function 'installed_by_distutils' missing usage example",
        "Function 'installed_as_egg' missing Returns documentation",
        "Function 'installed_as_egg' missing usage example",
        "Function 'installed_with_setuptools_egg_info' missing Returns documentation",
        "Function 'installed_with_setuptools_egg_info' missing usage example",
        "Function 'installed_with_dist_info' missing Returns documentation",
        "Function 'installed_with_dist_info' missing usage example",
        "Function 'setuptools_filename' missing Returns documentation",
        "Function 'setuptools_filename' missing usage example",
        "Function 'direct_url' missing Returns documentation",
        "Function 'direct_url' missing usage example",
        "Function 'local' missing Returns documentation",
        "Function 'local' missing usage example",
        "Function 'is_file' missing Returns documentation",
        "Function 'iter_distutils_script_names' missing Returns documentation",
        "Function 'iter_distutils_script_names' missing usage example",
        "Function 'read_text' missing Returns documentation",
        "Function 'read_text' missing usage example",
        "Function 'metadata' missing Returns documentation",
        "Function 'metadata' missing usage example",
        "Function 'metadata_dict' missing Returns documentation",
        "Function 'metadata_dict' missing usage example",
        "Function 'metadata_version' missing Returns documentation",
        "Function 'raw_name' missing Returns documentation",
        "Function 'requires_python' missing Returns documentation",
        "Function 'requires_python' missing usage example",
        "Function 'iter_dependencies' missing Returns documentation",
        "Function 'iter_dependencies' missing usage example",
        "Function 'iter_raw_dependencies' missing Returns documentation",
        "Function 'iter_provided_extras' missing Returns documentation",
        "Function 'iter_provided_extras' missing usage example",
        "Function 'iter_declared_entries' missing usage example",
        "Function 'get_distribution' missing Returns documentation",
        "Function 'get_distribution' missing usage example",
        "Function 'iter_all_distributions' missing Returns documentation",
        "Function 'iter_installed_distributions' missing Returns documentation",
        "Function 'iter_installed_distributions' missing usage example",
        "Class 'BaseEntryPoint' should have __init__ method",
        "Class 'RequiresEntry' should have __init__ method",
        "Class 'BaseDistribution' should have __init__ method",
        "Class 'BaseEnvironment' should have __init__ method",
        "Class 'Wheel' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/metadata/importlib/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/metadata/importlib/_compat.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'BadMetadata'",
        "Missing docstring for ctiondef 'name'",
        "Missing docstring for ctiondef 'parent'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BasePath' docstring should reference relevant architecture documents",
        "Class 'BasePath' should include Architecture Context section linking to design documents",
        "Function 'get_info_location' missing Returns documentation",
        "Function 'get_info_location' missing usage example",
        "Function 'parse_name_and_version_from_info_directory' missing Returns documentation",
        "Function 'parse_name_and_version_from_info_directory' missing usage example",
        "Function 'get_dist_canonical_name' missing Returns documentation",
        "Function 'get_dist_canonical_name' missing usage example",
        "Class 'BasePath' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/metadata/importlib/_dists.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Distribution'",
        "Missing docstring for ctiondef 'from_zipfile'",
        "Missing docstring for ctiondef 'iterdir'",
        "Missing docstring for ctiondef 'read_text'",
        "Missing docstring for ctiondef 'locate_file'",
        "Missing docstring for ctiondef 'from_directory'",
        "Missing docstring for ctiondef 'from_metadata_file_contents'",
        "Missing docstring for ctiondef 'from_wheel'",
        "Missing docstring for ctiondef 'location'",
        "Missing docstring for ctiondef 'info_location'",
        "Missing docstring for ctiondef 'installed_location'",
        "Missing docstring for ctiondef 'canonical_name'",
        "Missing docstring for ctiondef 'version'",
        "Missing docstring for ctiondef 'raw_version'",
        "Missing docstring for ctiondef 'is_file'",
        "Missing docstring for ctiondef 'iter_distutils_script_names'",
        "Missing docstring for ctiondef 'read_text'",
        "Missing docstring for ctiondef 'iter_entry_points'",
        "Missing docstring for ctiondef 'iter_provided_extras'",
        "Missing docstring for ctiondef 'iter_dependencies'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'WheelDistribution' docstring should reference relevant architecture documents",
        "Class 'WheelDistribution' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/metadata/importlib/_envs.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Environment'",
        "Function 'find' has parameters but no Args/Parameters documentation",
        "Function 'find_linked' has parameters but no Args/Parameters documentation",
        "Function 'find_eggs' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'default'",
        "Missing docstring for ctiondef 'from_paths'",
        "Missing docstring for ctiondef 'get_distribution'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'find' missing Returns documentation",
        "Function 'find_linked' missing Returns documentation",
        "Function 'find_linked' missing usage example",
        "Function 'find_eggs' missing Returns documentation",
        "Function 'find_eggs' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/metadata/pkg_resources.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'EntryPoint'",
        "Missing docstring for ssdef 'Distribution'",
        "Missing docstring for ssdef 'Environment'",
        "Missing docstring for ctiondef 'has_metadata'",
        "Missing docstring for ctiondef 'get_metadata'",
        "Missing docstring for ctiondef 'get_metadata_lines'",
        "Missing docstring for ctiondef 'metadata_isdir'",
        "Missing docstring for ctiondef 'metadata_listdir'",
        "Missing docstring for ctiondef 'run_script'",
        "Missing docstring for ctiondef 'from_directory'",
        "Missing docstring for ctiondef 'from_metadata_file_contents'",
        "Missing docstring for ctiondef 'from_wheel'",
        "Missing docstring for ctiondef 'location'",
        "Missing docstring for ctiondef 'installed_location'",
        "Missing docstring for ctiondef 'info_location'",
        "Missing docstring for ctiondef 'installed_by_distutils'",
        "Missing docstring for ctiondef 'canonical_name'",
        "Missing docstring for ctiondef 'version'",
        "Missing docstring for ctiondef 'raw_version'",
        "Missing docstring for ctiondef 'is_file'",
        "Missing docstring for ctiondef 'iter_distutils_script_names'",
        "Missing docstring for ctiondef 'read_text'",
        "Missing docstring for ctiondef 'iter_entry_points'",
        "Missing docstring for ctiondef 'iter_dependencies'",
        "Missing docstring for ctiondef 'iter_provided_extras'",
        "Missing docstring for ctiondef 'default'",
        "Missing docstring for ctiondef 'from_paths'",
        "Missing docstring for ctiondef 'get_distribution'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'InMemoryMetadata' docstring should reference relevant architecture documents",
        "Class 'InMemoryMetadata' should include Architecture Context section linking to design documents",
        "Class 'EntryPoint' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/models/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/models/candidate.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'InstallationCandidate' docstring should reference relevant architecture documents",
        "Using type hints but missing typing imports"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/models/direct_url.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'DirectUrlValidationError'",
        "Missing docstring for ssdef 'VcsInfo'",
        "Missing docstring for ssdef 'ArchiveInfo'",
        "Missing docstring for ssdef 'DirInfo'",
        "Missing docstring for ssdef 'DirectUrl'",
        "Missing docstring for ctiondef 'hash'",
        "Missing docstring for ctiondef 'hash'",
        "Missing docstring for ctiondef 'validate'",
        "Missing docstring for ctiondef 'from_dict'",
        "Missing docstring for ctiondef 'to_dict'",
        "Missing docstring for ctiondef 'from_json'",
        "Missing docstring for ctiondef 'to_json'",
        "Missing docstring for ctiondef 'is_local_editable'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'redacted_url' missing Returns documentation",
        "Function 'redacted_url' missing usage example",
        "Class 'VcsInfo' should have __init__ method",
        "Class 'DirInfo' should have __init__ method",
        "Class 'DirectUrl' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/models/format_control.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'handle_mutual_excludes'",
        "Missing docstring for ctiondef 'get_allowed_formats'",
        "Missing docstring for ctiondef 'disallow_binaries'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'FormatControl' docstring should reference relevant architecture documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/models/index.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PackageIndex' docstring should reference relevant architecture documents",
        "Using type hints but missing typing imports"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/models/installation_report.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ssdef 'InstallationReport'",
        "Missing docstring for ctiondef 'to_dict'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/models/link.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'supported_hashes'",
        "Missing docstring for ctiondef 'links_equivalent'",
        "Function 'find_hash_url_fragment' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'as_dict'",
        "Function 'is_hash_allowed' has parameters but no Args/Parameters documentation",
        "Function 'from_json' has parameters but no Args/Parameters documentation",
        "Function 'from_element' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'url'",
        "Missing docstring for ctiondef 'filename'",
        "Missing docstring for ctiondef 'file_path'",
        "Missing docstring for ctiondef 'scheme'",
        "Missing docstring for ctiondef 'path'",
        "Missing docstring for ctiondef 'splitext'",
        "Missing docstring for ctiondef 'ext'",
        "Missing docstring for ctiondef 'url_without_fragment'",
        "Missing docstring for ctiondef 'subdirectory_fragment'",
        "Missing docstring for ctiondef 'as_hashes'",
        "Missing docstring for ctiondef 'hash'",
        "Missing docstring for ctiondef 'hash_name'",
        "Missing docstring for ctiondef 'show_url'",
        "Missing docstring for ctiondef 'is_file'",
        "Missing docstring for ctiondef 'is_existing_dir'",
        "Missing docstring for ctiondef 'is_wheel'",
        "Missing docstring for ctiondef 'is_vcs'",
        "Missing docstring for ctiondef 'is_yanked'",
        "Missing docstring for ctiondef 'has_hash'",
        "Function 'is_hash_allowed' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'LinkHash' docstring should reference relevant architecture documents",
        "Class 'LinkHash' should include Architecture Context section linking to design documents",
        "Class 'MetadataFile' docstring should reference relevant architecture documents",
        "Class 'Link' docstring should reference relevant architecture documents",
        "Function 'find_hash_url_fragment' missing Returns documentation",
        "Function 'as_hashes' missing Returns documentation",
        "Function 'is_hash_allowed' missing Returns documentation",
        "Function 'from_json' missing Returns documentation",
        "Function 'from_element' missing Returns documentation",
        "Function 'netloc' missing Returns documentation",
        "Function 'metadata_link' missing Returns documentation",
        "Function 'is_hash_allowed' missing Returns documentation",
        "Class 'LinkHash' should have __init__ method",
        "Class 'MetadataFile' should have __init__ method",
        "Class '_CleanResult' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/models/scheme.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Scheme' docstring should reference relevant architecture documents",
        "Class 'Scheme' should include Architecture Context section linking to design documents",
        "Class 'Scheme' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/models/search_scope.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_formatted_locations'",
        "Function 'get_index_urls_locations' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'mkurl_pypi_url'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SearchScope' docstring should reference relevant architecture documents",
        "Function 'create' missing Returns documentation",
        "Function 'get_index_urls_locations' missing Returns documentation",
        "Function 'get_index_urls_locations' missing usage example",
        "Class 'SearchScope' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/models/selection_prefs.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SelectionPreferences' docstring should reference relevant architecture documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/models/target_python.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'TargetPython' docstring should reference relevant architecture documents",
        "Class 'TargetPython' should include Architecture Context section linking to design documents",
        "Function 'format_given' missing Returns documentation",
        "Function 'get_sorted_tags' missing Returns documentation",
        "Function 'get_sorted_tags' missing usage example",
        "Function 'get_unsorted_tags' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/models/wheel.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "ssdef 'Wheel' has very short docstring",
        "Class 'Wheel' docstring should reference relevant architecture documents",
        "Function 'get_formatted_file_tags' missing Returns documentation",
        "Function 'support_index_min' missing Returns documentation",
        "Function 'support_index_min' missing usage example",
        "Function 'find_most_preferred_tag' missing Returns documentation",
        "Function 'find_most_preferred_tag' missing usage example",
        "Function 'supported' missing Returns documentation",
        "Function 'supported' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/network/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/network/auth.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Credentials'",
        "Missing docstring for ctiondef 'get_keyring_provider'",
        "Missing docstring for ssdef 'MultiDomainBasicAuth'",
        "Missing docstring for ctiondef 'get_auth_info'",
        "Missing docstring for ctiondef 'save_auth_info'",
        "Missing docstring for ctiondef 'get_auth_info'",
        "Missing docstring for ctiondef 'save_auth_info'",
        "Missing docstring for ctiondef 'get_auth_info'",
        "Missing docstring for ctiondef 'save_auth_info'",
        "Missing docstring for ctiondef 'get_auth_info'",
        "Missing docstring for ctiondef 'save_auth_info'",
        "Missing docstring for ctiondef 'keyring_provider'",
        "Missing docstring for ctiondef 'keyring_provider'",
        "Missing docstring for ctiondef 'use_keyring'",
        "Missing docstring for ctiondef 'handle_401'",
        "Function 'warn_on_401' has parameters but no Args/Parameters documentation",
        "Function 'save_credentials' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'PATH_as_shutil_which_determines_it'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'KeyRingBaseProvider' docstring should reference relevant architecture documents",
        "Class 'KeyRingNullProvider' docstring should reference relevant architecture documents",
        "Class 'KeyRingPythonProvider' docstring should reference relevant architecture documents",
        "Class 'KeyRingCliProvider' docstring should reference relevant architecture documents",
        "Class 'KeyRingCliProvider' should include Architecture Context section linking to design documents",
        "Function 'warn_on_401' missing Returns documentation",
        "Function 'save_credentials' missing Returns documentation",
        "Class 'Credentials' should have __init__ method",
        "Class 'KeyRingBaseProvider' should have __init__ method",
        "Class 'KeyRingNullProvider' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/network/cache.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'is_from_cache'",
        "Missing docstring for ctiondef 'get'",
        "Missing docstring for ctiondef 'set'",
        "Missing docstring for ctiondef 'delete'",
        "Missing docstring for ctiondef 'get_body'",
        "Missing docstring for ctiondef 'set_body'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'suppressed_cache_errors' missing Returns documentation",
        "Function 'suppressed_cache_errors' missing usage example",
        "Class 'SafeFileCache' docstring should reference relevant architecture documents",
        "Class 'SafeFileCache' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/network/download.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'parse_content_disposition' has parameters but no Args/Parameters documentation",
        "Missing docstring for ssdef 'Downloader'",
        "Missing docstring for ssdef 'BatchDownloader'",
        "Function '__call__' has parameters but no Args/Parameters documentation",
        "Function '__call__' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'sanitize_content_filename' missing Returns documentation",
        "Function 'parse_content_disposition' missing Returns documentation",
        "Function 'parse_content_disposition' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/network/lazy_wheel.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'HTTPRangeRequestUnsupported'",
        "Function 'dist_from_wheel_url' has parameters but no Args/Parameters documentation",
        "Function 'read' has parameters but no Args/Parameters documentation",
        "Function 'seek' has parameters but no Args/Parameters documentation",
        "Function 'truncate' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'dist_from_wheel_url' missing Returns documentation",
        "Function 'dist_from_wheel_url' missing usage example",
        "Class 'LazyZipOverHTTP' docstring should reference relevant architecture documents",
        "Class 'LazyZipOverHTTP' should include Architecture Context section linking to design documents",
        "Function 'mode' missing Returns documentation",
        "Function 'name' missing Returns documentation",
        "Function 'seekable' missing Returns documentation",
        "ctiondef 'close' has very short docstring",
        "Function 'close' missing Returns documentation",
        "Function 'closed' missing Returns documentation",
        "Function 'read' missing Returns documentation",
        "Function 'read' missing usage example",
        "Function 'readable' missing Returns documentation",
        "Function 'seek' missing Returns documentation",
        "Function 'seek' missing usage example",
        "Function 'tell' missing Returns documentation",
        "Function 'truncate' missing Returns documentation",
        "Function 'truncate' missing usage example",
        "ctiondef 'writable' has very short docstring",
        "Function 'writable' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/network/session.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'LocalFSAdapter'",
        "Missing docstring for ssdef 'HTTPAdapter'",
        "Missing docstring for ssdef 'CacheControlAdapter'",
        "Missing docstring for ssdef 'InsecureHTTPAdapter'",
        "Missing docstring for ssdef 'InsecureCacheControlAdapter'",
        "Missing docstring for ssdef 'PipSession'",
        "Missing docstring for ctiondef 'send'",
        "Missing docstring for ctiondef 'close'",
        "Missing docstring for ctiondef 'init_poolmanager'",
        "Missing docstring for ctiondef 'cert_verify'",
        "Missing docstring for ctiondef 'cert_verify'",
        "Missing docstring for ctiondef 'iter_secure_origins'",
        "Missing docstring for ctiondef 'is_secure_origin'",
        "Missing docstring for ctiondef 'request'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'looks_like_ci' missing Returns documentation",
        "Function 'user_agent' missing Returns documentation",
        "Function 'update_index_urls' missing Returns documentation",
        "Function 'add_trusted_host' missing Returns documentation",
        "Function 'add_trusted_host' missing usage example",
        "Class 'LocalFSAdapter' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/network/utils.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'raise_for_status'",
        "Function 'response_chunks' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'response_chunks' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/network/xmlrpc.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'request'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PipXmlrpcTransport' docstring should reference relevant architecture documents",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/build/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/build/build_tracker.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'update_env_context_manager'",
        "Missing docstring for ctiondef 'get_build_tracker'",
        "Function 'add' has parameters but no Args/Parameters documentation",
        "Function 'remove' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'cleanup'",
        "Function 'track' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'TrackerId' docstring should reference relevant architecture documents",
        "Class 'BuildTracker' docstring should reference relevant architecture documents",
        "Class 'BuildTracker' should include Architecture Context section linking to design documents",
        "Function 'add' missing Returns documentation",
        "Function 'remove' missing Returns documentation",
        "Function 'track' missing Returns documentation",
        "Function 'track' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/build/metadata.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'generate_metadata' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'generate_metadata' missing Returns documentation",
        "Using type hints but missing typing imports"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/build/metadata_editable.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'generate_editable_metadata' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'generate_editable_metadata' missing Returns documentation",
        "Using type hints but missing typing imports"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/build/metadata_legacy.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'generate_metadata' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'generate_metadata' missing Returns documentation",
        "Function 'generate_metadata' missing usage example",
        "Using type hints but missing typing imports"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/build/wheel.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'build_wheel_pep517' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'build_wheel_pep517' missing Returns documentation",
        "Function 'build_wheel_pep517' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/build/wheel_editable.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'build_wheel_editable' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'build_wheel_editable' missing Returns documentation",
        "Function 'build_wheel_editable' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/build/wheel_legacy.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'format_command_result' has parameters but no Args/Parameters documentation",
        "Function 'get_legacy_build_wheel_path' has parameters but no Args/Parameters documentation",
        "Function 'build_wheel_legacy' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'format_command_result' missing Returns documentation",
        "Function 'get_legacy_build_wheel_path' missing Returns documentation",
        "Function 'build_wheel_legacy' missing Returns documentation",
        "Function 'build_wheel_legacy' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/check.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'PackageDetails'",
        "Function 'check_package_set' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'check_unsupported'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'create_package_set_from_installed' missing Returns documentation",
        "Function 'check_package_set' missing Returns documentation",
        "Function 'check_package_set' missing usage example",
        "Function 'check_install_conflicts' missing Returns documentation",
        "Function 'check_install_conflicts' missing usage example",
        "Class 'PackageDetails' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/freeze.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'freeze'",
        "Missing docstring for ssdef 'FrozenRequirement'",
        "Missing docstring for ctiondef 'canonical_name'",
        "Missing docstring for ctiondef 'from_dist'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class '_EditableInfo' should have __init__ method",
        "Class 'FrozenRequirement' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/install/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/install/editable_legacy.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'install_editable' missing Returns documentation"
      ],
      "score": 0.23428571428571426,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/install/wheel.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'rehash' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'wheel_root_is_purelib'",
        "Missing docstring for ctiondef 'get_entrypoints'",
        "Missing docstring for ssdef 'ZipBackedFile'",
        "Missing docstring for ssdef 'ScriptFile'",
        "Missing docstring for ssdef 'MissingCallableSuffix'",
        "Missing docstring for ssdef 'PipScriptMaker'",
        "Missing docstring for ctiondef 'req_error_context'",
        "Missing docstring for ctiondef 'install_wheel'",
        "Missing docstring for ssdef 'File'",
        "Missing docstring for ctiondef 'save'",
        "Missing docstring for ctiondef 'save'",
        "Missing docstring for ctiondef 'make'",
        "Function 'record_installed' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'is_dir_path'",
        "Missing docstring for ctiondef 'assert_no_path_traversal'",
        "Missing docstring for ctiondef 'root_scheme_file_maker'",
        "Missing docstring for ctiondef 'data_scheme_file_maker'",
        "Missing docstring for ctiondef 'is_data_scheme_path'",
        "Missing docstring for ctiondef 'is_script_scheme_path'",
        "Missing docstring for ctiondef 'is_entrypoint_wrapper'",
        "Missing docstring for ctiondef 'pyc_source_file_paths'",
        "Missing docstring for ctiondef 'save'",
        "Missing docstring for ctiondef 'make_root_scheme_file'",
        "Missing docstring for ctiondef 'make_data_scheme_file'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'rehash' missing Returns documentation",
        "Function 'csv_io_kwargs' missing Returns documentation",
        "Function 'fix_script' missing Returns documentation",
        "Function 'message_about_scripts_not_on_PATH' missing Returns documentation",
        "Function 'message_about_scripts_not_on_PATH' missing usage example",
        "Function 'get_csv_rows_for_installed' missing Returns documentation",
        "Function 'get_console_script_specs' missing Returns documentation",
        "Function 'record_installed' missing Returns documentation",
        "Function 'pyc_output_path' missing Returns documentation",
        "Class 'File' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/operations/prepare.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'unpack_vcs_link'",
        "Missing docstring for ssdef 'File'",
        "Missing docstring for ctiondef 'get_http_url'",
        "Function 'get_file_url' has parameters but no Args/Parameters documentation",
        "Function 'prepare_linked_requirement' has parameters but no Args/Parameters documentation",
        "Function 'prepare_linked_requirements_more' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'save_linked_requirement'",
        "Function 'prepare_editable_requirement' has parameters but no Args/Parameters documentation",
        "Function 'prepare_installed_requirement' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_file_url' missing Returns documentation",
        "Function 'unpack_url' missing Returns documentation",
        "Function 'unpack_url' missing usage example",
        "Class 'RequirementPreparer' docstring should reference relevant architecture documents",
        "Function 'prepare_linked_requirement' missing Returns documentation",
        "Function 'prepare_linked_requirements_more' missing Returns documentation",
        "Function 'prepare_editable_requirement' missing Returns documentation",
        "Function 'prepare_installed_requirement' missing Returns documentation",
        "Class 'File' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/pyproject.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'make_pyproject_path'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'load_pyproject_toml' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/req/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'InstallationResult'",
        "Function 'install_given_reqs' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'install_given_reqs' missing Returns documentation",
        "Function 'install_given_reqs' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/req/constructors.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'convert_extras'",
        "Missing docstring for ssdef 'RequirementParts'",
        "Missing docstring for ctiondef 'parse_req_from_editable'",
        "Missing docstring for ctiondef 'install_req_from_editable'",
        "Missing docstring for ctiondef 'parse_req_from_line'",
        "Missing docstring for ctiondef 'install_req_from_req_string'",
        "Missing docstring for ctiondef 'install_req_from_parsed_requirement'",
        "Missing docstring for ctiondef 'install_req_from_link_and_ireq'",
        "Function 'install_req_extend_extras' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'with_source'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'parse_editable' missing Returns documentation",
        "Function 'parse_editable' missing usage example",
        "Function 'check_first_requirement_in_file' missing Returns documentation",
        "Function 'check_first_requirement_in_file' missing usage example",
        "Function 'deduce_helpful_msg' missing Returns documentation",
        "Function 'deduce_helpful_msg' missing usage example",
        "Function 'install_req_from_line' missing Returns documentation",
        "Function 'install_req_from_line' missing usage example",
        "Function 'install_req_drop_extras' missing Returns documentation",
        "Function 'install_req_drop_extras' missing usage example",
        "Function 'install_req_extend_extras' missing Returns documentation",
        "Function 'install_req_extend_extras' missing usage example",
        "Class 'RequirementParts' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/req/req_file.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'ParsedRequirement'",
        "Missing docstring for ssdef 'ParsedLine'",
        "Missing docstring for ctiondef 'handle_requirement_line'",
        "Missing docstring for ctiondef 'handle_option_line'",
        "Missing docstring for ssdef 'RequirementsFileParser'",
        "Missing docstring for ctiondef 'get_line_parser'",
        "Missing docstring for ssdef 'OptionParsingError'",
        "Missing docstring for ctiondef 'is_editable'",
        "Missing docstring for ctiondef 'requirement'",
        "Function 'parse' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'parse_line'",
        "Missing docstring for ctiondef 'parser_exit'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'parse_requirements' missing Returns documentation",
        "Function 'parse_requirements' missing usage example",
        "Function 'preprocess' missing Returns documentation",
        "Function 'preprocess' missing usage example",
        "Function 'handle_line' missing Returns documentation",
        "Function 'handle_line' missing usage example",
        "Function 'break_args_options' missing Returns documentation",
        "Function 'break_args_options' missing usage example",
        "Function 'build_parser' missing Returns documentation",
        "Function 'join_lines' missing Returns documentation",
        "Function 'join_lines' missing usage example",
        "Function 'ignore_comments' missing Returns documentation",
        "Function 'expand_env_variables' missing Returns documentation",
        "Function 'expand_env_variables' missing usage example",
        "Function 'get_file_content' missing Returns documentation",
        "Function 'get_file_content' missing usage example",
        "Function 'parse' missing Returns documentation",
        "Class 'ParsedRequirement' should have __init__ method",
        "Class 'ParsedLine' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/req/req_install.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'check_invalid_constraint_type'",
        "Missing docstring for ctiondef 'check_legacy_setup_py_options'",
        "Missing docstring for ctiondef 'name'",
        "Missing docstring for ctiondef 'supports_pyproject_editable'",
        "Missing docstring for ctiondef 'specifier'",
        "Missing docstring for ctiondef 'match_markers'",
        "Missing docstring for ctiondef 'ensure_build_location'",
        "Missing docstring for ctiondef 'warn_on_mismatching_name'",
        "Function 'check_if_exists' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'is_wheel'",
        "Missing docstring for ctiondef 'is_wheel_from_cache'",
        "Missing docstring for ctiondef 'unpacked_source_directory'",
        "Missing docstring for ctiondef 'setup_py_path'",
        "Missing docstring for ctiondef 'setup_cfg_path'",
        "Missing docstring for ctiondef 'pyproject_toml_path'",
        "Missing docstring for ctiondef 'metadata'",
        "Missing docstring for ctiondef 'get_dist'",
        "Missing docstring for ctiondef 'assert_source_matches_version'",
        "Missing docstring for ctiondef 'needs_unpacked_archive'",
        "Missing docstring for ctiondef 'update_editable'",
        "Function 'uninstall' has parameters but no Args/Parameters documentation",
        "Function 'archive' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'install'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'InstallRequirement' docstring should reference relevant architecture documents",
        "Class 'InstallRequirement' should include Architecture Context section linking to design documents",
        "Function 'format_debug' missing Returns documentation",
        "Function 'is_direct' missing Returns documentation",
        "Function 'is_pinned' missing Returns documentation",
        "Function 'is_pinned' missing usage example",
        "Function 'has_hash_options' missing Returns documentation",
        "Function 'has_hash_options' missing usage example",
        "Function 'hashes' missing Returns documentation",
        "Function 'hashes' missing usage example",
        "Function 'from_path' missing Returns documentation",
        "Function 'check_if_exists' missing Returns documentation",
        "Function 'check_if_exists' missing usage example",
        "Function 'load_pyproject_toml' missing Returns documentation",
        "Function 'load_pyproject_toml' missing usage example",
        "Function 'isolated_editable_sanity_check' missing Returns documentation",
        "Function 'isolated_editable_sanity_check' missing usage example",
        "Function 'prepare_metadata' missing Returns documentation",
        "Function 'prepare_metadata' missing usage example",
        "Function 'ensure_has_source_dir' missing usage example",
        "Function 'ensure_pristine_source_checkout' missing Returns documentation",
        "Function 'uninstall' missing Returns documentation",
        "Function 'uninstall' missing usage example",
        "Function 'archive' missing Returns documentation",
        "Function 'archive' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/req/req_set.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'RequirementSet'",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'add_unnamed_requirement'",
        "Missing docstring for ctiondef 'add_named_requirement'",
        "Missing docstring for ctiondef 'has_requirement'",
        "Missing docstring for ctiondef 'get_requirement'",
        "Missing docstring for ctiondef 'all_requirements'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'requirements_to_install' missing Returns documentation",
        "Function 'requirements_to_install' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/req/req_uninstall.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'UninstallPthEntries'",
        "Missing docstring for ctiondef 'unique'",
        "Missing docstring for ctiondef 'norm_join'",
        "Function 'stash' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'can_rollback'",
        "Missing docstring for ctiondef 'add'",
        "Missing docstring for ctiondef 'add_pth'",
        "Function 'remove' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'from_dist'",
        "Missing docstring for ctiondef 'add'",
        "Missing docstring for ctiondef 'remove'",
        "Missing docstring for ctiondef 'rollback'",
        "Missing docstring for ctiondef 'iter_scripts_to_remove'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'uninstallation_paths' missing Returns documentation",
        "Function 'uninstallation_paths' missing usage example",
        "Function 'compact' missing Returns documentation",
        "Function 'compact' missing usage example",
        "Function 'compress_for_rename' missing Returns documentation",
        "Function 'compress_for_rename' missing usage example",
        "Function 'compress_for_output_listing' missing Returns documentation",
        "Function 'compress_for_output_listing' missing usage example",
        "Class 'StashedUninstallPathSet' docstring should reference relevant architecture documents",
        "Class 'UninstallPathSet' docstring should reference relevant architecture documents",
        "Function 'stash' missing Returns documentation",
        "Function 'stash' missing usage example",
        "Function 'commit' missing Returns documentation",
        "Function 'rollback' missing Returns documentation",
        "Function 'remove' missing Returns documentation",
        "Function 'rollback' missing Returns documentation",
        "Function 'commit' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/resolution/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/resolution/base.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ssdef 'BaseResolver'",
        "Missing docstring for ctiondef 'resolve'",
        "Missing docstring for ctiondef 'get_installation_order'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Class 'BaseResolver' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/resolution/legacy/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/resolution/legacy/resolver.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'resolve' has parameters but no Args/Parameters documentation",
        "Function 'get_installation_order' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'add_req'",
        "Missing docstring for ctiondef 'schedule'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Resolver' docstring should reference relevant architecture documents",
        "Class 'Resolver' should include Architecture Context section linking to design documents",
        "Function 'resolve' missing Returns documentation",
        "Function 'resolve' missing usage example",
        "Function 'get_installation_order' missing Returns documentation",
        "Function 'get_installation_order' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/base.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'format_name'",
        "Missing docstring for ssdef 'Constraint'",
        "Missing docstring for ssdef 'Requirement'",
        "Missing docstring for ssdef 'Candidate'",
        "Missing docstring for ctiondef 'empty'",
        "Missing docstring for ctiondef 'from_ireq'",
        "Missing docstring for ctiondef 'is_satisfied_by'",
        "Missing docstring for ctiondef 'is_satisfied_by'",
        "Missing docstring for ctiondef 'get_candidate_lookup'",
        "Missing docstring for ctiondef 'format_for_error'",
        "Missing docstring for ctiondef 'version'",
        "Missing docstring for ctiondef 'is_installed'",
        "Missing docstring for ctiondef 'is_editable'",
        "Missing docstring for ctiondef 'source_link'",
        "Missing docstring for ctiondef 'iter_dependencies'",
        "Missing docstring for ctiondef 'get_install_requirement'",
        "Missing docstring for ctiondef 'format_for_error'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'project_name' missing Returns documentation",
        "Function 'project_name' missing usage example",
        "Function 'name' missing Returns documentation",
        "Function 'name' missing usage example",
        "Function 'project_name' missing Returns documentation",
        "Function 'project_name' missing usage example",
        "Function 'name' missing Returns documentation",
        "Function 'name' missing usage example",
        "Class 'Constraint' should have __init__ method",
        "Class 'Requirement' should have __init__ method",
        "Class 'Candidate' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/candidates.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'make_install_req_from_link'",
        "Missing docstring for ctiondef 'make_install_req_from_editable'",
        "Missing docstring for ssdef 'LinkCandidate'",
        "Missing docstring for ssdef 'EditableCandidate'",
        "Missing docstring for ssdef 'AlreadyInstalledCandidate'",
        "Missing docstring for ssdef 'RequiresPythonCandidate'",
        "Missing docstring for ctiondef 'source_link'",
        "Missing docstring for ctiondef 'name'",
        "Missing docstring for ctiondef 'version'",
        "Missing docstring for ctiondef 'format_for_error'",
        "Missing docstring for ctiondef 'iter_dependencies'",
        "Missing docstring for ctiondef 'get_install_requirement'",
        "Missing docstring for ctiondef 'project_name'",
        "Missing docstring for ctiondef 'name'",
        "Missing docstring for ctiondef 'version'",
        "Missing docstring for ctiondef 'is_editable'",
        "Missing docstring for ctiondef 'format_for_error'",
        "Missing docstring for ctiondef 'iter_dependencies'",
        "Missing docstring for ctiondef 'get_install_requirement'",
        "Missing docstring for ctiondef 'project_name'",
        "Missing docstring for ctiondef 'version'",
        "Missing docstring for ctiondef 'format_for_error'",
        "Missing docstring for ctiondef 'is_installed'",
        "Missing docstring for ctiondef 'is_editable'",
        "Missing docstring for ctiondef 'source_link'",
        "Missing docstring for ctiondef 'iter_dependencies'",
        "Missing docstring for ctiondef 'get_install_requirement'",
        "Missing docstring for ctiondef 'project_name'",
        "Missing docstring for ctiondef 'name'",
        "Missing docstring for ctiondef 'version'",
        "Missing docstring for ctiondef 'format_for_error'",
        "Missing docstring for ctiondef 'iter_dependencies'",
        "Missing docstring for ctiondef 'get_install_requirement'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'as_base_candidate' missing Returns documentation",
        "Class 'ExtrasCandidate' docstring should reference relevant architecture documents",
        "Class 'ExtrasCandidate' should include Architecture Context section linking to design documents",
        "Function 'project_name' missing Returns documentation",
        "Function 'name' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/factory.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'CollectedRootRequirements'",
        "Missing docstring for ssdef 'Factory'",
        "Missing docstring for ssdef 'ConflictCause'",
        "Missing docstring for ctiondef 'force_reinstall'",
        "Missing docstring for ctiondef 'find_candidates'",
        "Missing docstring for ctiondef 'collect_root_requirements'",
        "Missing docstring for ctiondef 'make_requirement_from_candidate'",
        "Function 'make_requirements_from_spec' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'make_requires_python_requirement'",
        "Function 'get_wheel_cache_entry' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_dist_to_uninstall'",
        "Missing docstring for ctiondef 'get_installation_error'",
        "Missing docstring for ctiondef 'iter_index_candidate_infos'",
        "Missing docstring for ctiondef 'text_join'",
        "Missing docstring for ctiondef 'describe_trigger'",
        "Missing docstring for ctiondef 'is_pinned'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'make_requirements_from_spec' missing Returns documentation",
        "Function 'make_requirements_from_spec' missing usage example",
        "Function 'get_wheel_cache_entry' missing Returns documentation",
        "Function 'get_wheel_cache_entry' missing usage example",
        "Class 'CollectedRootRequirements' should have __init__ method",
        "Class 'ConflictCause' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/found_candidates.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'FoundCandidates' docstring should reference relevant architecture documents",
        "Class 'FoundCandidates' should include Architecture Context section linking to design documents",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.19428571428571428,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/provider.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'identify'",
        "Function 'get_preference' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'find_matches'",
        "Missing docstring for ctiondef 'is_satisfied_by'",
        "Missing docstring for ctiondef 'get_dependencies'",
        "Missing docstring for ctiondef 'is_backtrack_cause'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PipProvider' docstring should reference relevant architecture documents",
        "Class 'PipProvider' should include Architecture Context section linking to design documents",
        "Function 'get_preference' missing Returns documentation",
        "Function 'get_preference' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/reporter.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'PipReporter'",
        "Missing docstring for ctiondef 'rejecting_candidate'",
        "Missing docstring for ctiondef 'starting'",
        "Missing docstring for ctiondef 'starting_round'",
        "Missing docstring for ctiondef 'ending_round'",
        "Missing docstring for ctiondef 'ending'",
        "Missing docstring for ctiondef 'adding_requirement'",
        "Missing docstring for ctiondef 'rejecting_candidate'",
        "Missing docstring for ctiondef 'pinning'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PipDebuggingReporter' docstring should reference relevant architecture documents",
        "Class 'PipDebuggingReporter' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/requirements.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'ExplicitRequirement'",
        "Missing docstring for ssdef 'SpecifierRequirement'",
        "Missing docstring for ctiondef 'project_name'",
        "Missing docstring for ctiondef 'name'",
        "Missing docstring for ctiondef 'format_for_error'",
        "Missing docstring for ctiondef 'get_candidate_lookup'",
        "Missing docstring for ctiondef 'is_satisfied_by'",
        "Missing docstring for ctiondef 'project_name'",
        "Missing docstring for ctiondef 'name'",
        "Missing docstring for ctiondef 'format_for_error'",
        "Missing docstring for ctiondef 'get_candidate_lookup'",
        "Missing docstring for ctiondef 'is_satisfied_by'",
        "Missing docstring for ctiondef 'project_name'",
        "Missing docstring for ctiondef 'name'",
        "Missing docstring for ctiondef 'format_for_error'",
        "Missing docstring for ctiondef 'get_candidate_lookup'",
        "Missing docstring for ctiondef 'is_satisfied_by'",
        "Missing docstring for ctiondef 'project_name'",
        "Missing docstring for ctiondef 'name'",
        "Missing docstring for ctiondef 'format_for_error'",
        "Missing docstring for ctiondef 'get_candidate_lookup'",
        "Missing docstring for ctiondef 'is_satisfied_by'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SpecifierWithoutExtrasRequirement' docstring should reference relevant architecture documents",
        "Class 'SpecifierWithoutExtrasRequirement' should include Architecture Context section linking to design documents",
        "Class 'RequiresPythonRequirement' docstring should reference relevant architecture documents",
        "Class 'UnsatisfiableRequirement' docstring should reference relevant architecture documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/resolver.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Resolver'",
        "Function 'get_topological_weights' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'resolve'",
        "Function 'get_installation_order' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'visit'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_topological_weights' missing Returns documentation",
        "Function 'get_topological_weights' missing usage example",
        "Function 'get_installation_order' missing Returns documentation",
        "Function 'get_installation_order' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/self_outdated_check.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'SelfCheckState'",
        "Missing docstring for ssdef 'UpgradePrompt'",
        "Function 'pip_self_version_check' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'key'",
        "Function 'get' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'set'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'was_installed_by_pip' missing Returns documentation",
        "Function 'was_installed_by_pip' missing usage example",
        "Function 'pip_self_version_check' missing Returns documentation",
        "Function 'pip_self_version_check' missing usage example",
        "Function 'get' missing Returns documentation",
        "Class 'UpgradePrompt' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/_jaraco_text.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'yield_lines' missing Returns documentation",
        "Function 'drop_comment' missing Returns documentation",
        "Function 'join_continuation' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/_log.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'verbose'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'VerboseLogger' docstring should reference relevant architecture documents",
        "Function 'getLogger' missing Returns documentation",
        "Function 'init_logging' missing Returns documentation",
        "Function 'init_logging' missing usage example",
        "Class 'VerboseLogger' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/appdirs.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'user_cache_dir'",
        "Missing docstring for ctiondef 'user_config_dir'",
        "Missing docstring for ctiondef 'site_config_dirs'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/compat.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'has_tls'",
        "Missing docstring for ctiondef 'open_text_resource'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_path_uid' missing Returns documentation",
        "Function 'get_path_uid' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/compatibility_tags.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'version_info_to_nodot'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_supported' missing Returns documentation",
        "Function 'get_supported' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/datetime.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'today_is_later_than'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Using type hints but missing typing imports"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/deprecation.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'PipDeprecationWarning'",
        "Missing docstring for ctiondef 'install_warning_logger'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'deprecated' missing Returns documentation",
        "Function 'deprecated' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/direct_url_helpers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'direct_url_as_pep440_direct_reference' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'direct_url_for_editable'",
        "Missing docstring for ctiondef 'direct_url_from_link'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'direct_url_as_pep440_direct_reference' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/egg_link.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'egg_link_path_from_sys_path' missing Returns documentation",
        "Function 'egg_link_path_from_location' missing Returns documentation",
        "Function 'egg_link_path_from_location' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/entrypoints.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_best_invocation_for_this_pip' missing Returns documentation",
        "Function 'get_best_invocation_for_this_python' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/filesystem.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'check_path_owner'",
        "Function 'find_files' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'file_size'",
        "Missing docstring for ctiondef 'format_file_size'",
        "Missing docstring for ctiondef 'directory_size'",
        "Missing docstring for ctiondef 'format_directory_size'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'adjacent_tmp_file' missing Returns documentation",
        "Function 'adjacent_tmp_file' missing usage example",
        "Function 'test_writable_dir' missing Returns documentation",
        "Function 'find_files' missing Returns documentation",
        "Function 'find_files' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/filetypes.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'is_archive_file' missing Returns documentation"
      ],
      "score": 0.23428571428571426,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/glibc.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'glibc_version_string' missing Returns documentation",
        "Function 'glibc_version_string_confstr' missing Returns documentation",
        "Function 'glibc_version_string_ctypes' missing Returns documentation",
        "Function 'libc_ver' missing Returns documentation",
        "Function 'libc_ver' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/hashes.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'digest_count'",
        "Function 'is_hash_allowed' has parameters but no Args/Parameters documentation",
        "Function 'check_against_chunks' has parameters but no Args/Parameters documentation",
        "Function 'check_against_file' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'check_against_path'",
        "Function 'has_one_of' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Hashes' docstring should reference relevant architecture documents",
        "Class 'MissingHashes' docstring should reference relevant architecture documents",
        "Class 'MissingHashes' should include Architecture Context section linking to design documents",
        "Function 'is_hash_allowed' missing Returns documentation",
        "Function 'check_against_chunks' missing Returns documentation",
        "Function 'check_against_chunks' missing usage example",
        "Function 'check_against_file' missing Returns documentation",
        "Function 'has_one_of' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/logging.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_indentation'",
        "Missing docstring for ssdef 'IndentingFormatter'",
        "Missing docstring for ssdef 'IndentedRenderable'",
        "Missing docstring for ssdef 'PipConsole'",
        "Missing docstring for ssdef 'RichPipStreamHandler'",
        "Missing docstring for ssdef 'BetterRotatingFileHandler'",
        "Missing docstring for ssdef 'MaxLevelFilter'",
        "Function 'setup_logging' has parameters but no Args/Parameters documentation",
        "Function 'get_message_start' has parameters but no Args/Parameters documentation",
        "Function 'format' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'on_broken_pipe'",
        "Missing docstring for ctiondef 'emit'",
        "Function 'handleError' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'filter'",
        "Missing docstring for ctiondef 'filter'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BrokenStdoutLoggingError' docstring should reference relevant architecture documents",
        "Function 'indent_log' missing Returns documentation",
        "Function 'indent_log' missing usage example",
        "Class 'ExcludeLoggerFilter' docstring should reference relevant architecture documents",
        "Function 'setup_logging' missing Returns documentation",
        "Function 'setup_logging' missing usage example",
        "Function 'get_message_start' missing Returns documentation",
        "Function 'format' missing Returns documentation",
        "Function 'format' missing usage example",
        "Function 'handleError' missing Returns documentation",
        "Class 'IndentedRenderable' should have __init__ method",
        "Class 'ExcludeLoggerFilter' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/misc.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_pip_version'",
        "Missing docstring for ctiondef 'get_prog'",
        "Missing docstring for ctiondef 'rmtree'",
        "Function 'rmtree_errorhandler' has parameters but no Args/Parameters documentation",
        "Function 'backup_dir' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'ask_path_exists'",
        "Function 'ask' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'format_size'",
        "Function 'read_chunks' has parameters but no Args/Parameters documentation",
        "Function 'normalize_path' has parameters but no Args/Parameters documentation",
        "Function 'renames' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'write_output'",
        "Missing docstring for ssdef 'StreamWrapper'",
        "Missing docstring for ctiondef 'enum'",
        "Function 'build_netloc' has parameters but no Args/Parameters documentation",
        "Function 'build_url_from_netloc' has parameters but no Args/Parameters documentation",
        "Missing docstring for ssdef 'HiddenText'",
        "Missing docstring for ctiondef 'hide_value'",
        "Missing docstring for ctiondef 'hide_url'",
        "Function 'hash_file' has parameters but no Args/Parameters documentation",
        "Function 'partition' has parameters but no Args/Parameters documentation",
        "Missing docstring for ssdef 'ConfiguredBuildBackendHookCaller'",
        "Missing docstring for ctiondef 'from_stream'",
        "Missing docstring for ctiondef 'encoding'",
        "Missing docstring for ctiondef 'build_wheel'",
        "Missing docstring for ctiondef 'build_sdist'",
        "Missing docstring for ctiondef 'build_editable'",
        "Missing docstring for ctiondef 'get_requires_for_build_wheel'",
        "Missing docstring for ctiondef 'get_requires_for_build_sdist'",
        "Missing docstring for ctiondef 'get_requires_for_build_editable'",
        "Missing docstring for ctiondef 'prepare_metadata_for_build_wheel'",
        "Missing docstring for ctiondef 'prepare_metadata_for_build_editable'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'normalize_version_info' missing usage example",
        "Function 'ensure_dir' missing Returns documentation",
        "Function 'rmtree_errorhandler' missing Returns documentation",
        "Function 'rmtree_errorhandler' missing usage example",
        "Function 'display_path' missing Returns documentation",
        "Function 'backup_dir' missing Returns documentation",
        "Function 'ask' missing Returns documentation",
        "Function 'ask_input' missing Returns documentation",
        "Function 'ask_password' missing Returns documentation",
        "Function 'strtobool' missing Returns documentation",
        "Function 'strtobool' missing usage example",
        "Function 'tabulate' missing Returns documentation",
        "Function 'is_installable_dir' missing Returns documentation",
        "Function 'is_installable_dir' missing usage example",
        "Function 'read_chunks' missing Returns documentation",
        "Function 'normalize_path' missing Returns documentation",
        "Function 'splitext' missing Returns documentation",
        "Function 'renames' missing Returns documentation",
        "Function 'is_local' missing Returns documentation",
        "Function 'is_local' missing usage example",
        "Function 'build_netloc' missing Returns documentation",
        "Function 'build_url_from_netloc' missing Returns documentation",
        "Function 'parse_netloc' missing Returns documentation",
        "Function 'redact_netloc' missing Returns documentation",
        "Function 'redact_netloc' missing usage example",
        "Function 'split_auth_netloc_from_url' missing usage example",
        "Function 'remove_auth_from_url' missing Returns documentation",
        "Function 'redact_auth_from_url' missing Returns documentation",
        "Function 'redact_auth_from_requirement' missing Returns documentation",
        "Function 'protect_pip_from_modification_on_windows' missing Returns documentation",
        "Function 'protect_pip_from_modification_on_windows' missing usage example",
        "Function 'check_externally_managed' missing Returns documentation",
        "Function 'check_externally_managed' missing usage example",
        "Function 'is_console_interactive' missing Returns documentation",
        "Function 'hash_file' missing Returns documentation",
        "Function 'pairwise' missing Returns documentation",
        "Function 'partition' missing Returns documentation",
        "Function 'partition' missing usage example",
        "Function 'warn_if_run_as_root' missing Returns documentation",
        "Function 'warn_if_run_as_root' missing usage example",
        "Class 'StreamWrapper' should have __init__ method",
        "Class 'HiddenText' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/packaging.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'check_requires_python' missing usage example",
        "Function 'get_requirement' missing Returns documentation",
        "Function 'safe_extra' missing Returns documentation",
        "Function 'safe_extra' missing usage example"
      ],
      "score": 0.17428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/retry.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'wrapper'",
        "Missing docstring for ctiondef 'retry_wrapped'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'retry' missing Returns documentation",
        "Function 'retry' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/setuptools_build.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'make_setuptools_bdist_wheel_args'",
        "Missing docstring for ctiondef 'make_setuptools_clean_args'",
        "Missing docstring for ctiondef 'make_setuptools_develop_args'",
        "Missing docstring for ctiondef 'make_setuptools_egg_info_args'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'make_setuptools_shim_args' missing Returns documentation",
        "Function 'make_setuptools_shim_args' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/subprocess.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'runner'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'make_command' missing Returns documentation",
        "Function 'format_command_args' missing Returns documentation",
        "Function 'reveal_command_args' missing Returns documentation",
        "Function 'call_subprocess' missing Returns documentation",
        "Function 'call_subprocess' missing usage example",
        "Function 'runner_with_spinner_message' missing Returns documentation",
        "Function 'runner_with_spinner_message' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/temp_dir.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'global_tempdir_manager'",
        "Function 'set_delete' has parameters but no Args/Parameters documentation",
        "Function 'get_delete' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'path'",
        "Function 'onerror' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'TempDirectoryTypeRegistry' docstring should reference relevant architecture documents",
        "Function 'tempdir_registry' missing Returns documentation",
        "Function 'tempdir_registry' missing usage example",
        "Class 'TempDirectory' docstring should reference relevant architecture documents",
        "Class 'TempDirectory' should include Architecture Context section linking to design documents",
        "Class 'AdjacentTempDirectory' docstring should reference relevant architecture documents",
        "Class 'AdjacentTempDirectory' should include Architecture Context section linking to design documents",
        "Function 'set_delete' missing Returns documentation",
        "Function 'get_delete' missing Returns documentation",
        "Function 'cleanup' missing Returns documentation",
        "Function 'onerror' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/unpacking.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'split_leading_dir'",
        "Function 'is_within_directory' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'zip_item_is_executable'",
        "Function 'unzip_file' has parameters but no Args/Parameters documentation",
        "Function 'untar_file' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'unpack_file'",
        "Missing docstring for ctiondef 'pip_filter'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'current_umask' missing Returns documentation",
        "Function 'has_leading_dir' missing Returns documentation",
        "Function 'has_leading_dir' missing usage example",
        "Function 'is_within_directory' missing Returns documentation",
        "Function 'set_extracted_file_to_default_mode_plus_executable' missing Returns documentation",
        "Function 'set_extracted_file_to_default_mode_plus_executable' missing usage example",
        "Function 'unzip_file' missing Returns documentation",
        "Function 'unzip_file' missing usage example",
        "Function 'untar_file' missing Returns documentation",
        "Function 'untar_file' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/urls.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'path_to_url' missing Returns documentation",
        "Function 'url_to_path' missing Returns documentation",
        "Using type hints but missing typing imports"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/virtualenv.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'running_under_virtualenv' missing Returns documentation",
        "Function 'virtualenv_no_global' missing Returns documentation"
      ],
      "score": 0.21428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/utils/wheel.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'parse_wheel' has parameters but no Args/Parameters documentation",
        "Function 'wheel_dist_info_dir' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'read_wheel_metadata_file'",
        "Function 'wheel_metadata' has parameters but no Args/Parameters documentation",
        "Function 'check_compatibility' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'parse_wheel' missing Returns documentation",
        "Function 'parse_wheel' missing usage example",
        "Function 'wheel_dist_info_dir' missing Returns documentation",
        "Function 'wheel_dist_info_dir' missing usage example",
        "Function 'wheel_metadata' missing Returns documentation",
        "Function 'wheel_version' missing Returns documentation",
        "Function 'check_compatibility' missing Returns documentation",
        "Function 'check_compatibility' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/vcs/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/vcs/bazaar.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Bazaar'",
        "Missing docstring for ctiondef 'get_base_rev_args'",
        "Missing docstring for ctiondef 'fetch_new'",
        "Missing docstring for ctiondef 'switch'",
        "Missing docstring for ctiondef 'update'",
        "Missing docstring for ctiondef 'get_url_rev_and_auth'",
        "Missing docstring for ctiondef 'get_remote_url'",
        "Missing docstring for ctiondef 'get_revision'",
        "Function 'is_commit_id_equal' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'is_commit_id_equal' missing Returns documentation",
        "Class 'Bazaar' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/vcs/git.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'looks_like_hash'",
        "Missing docstring for ssdef 'Git'",
        "Missing docstring for ctiondef 'get_base_rev_args'",
        "Missing docstring for ctiondef 'is_immutable_rev_checkout'",
        "Missing docstring for ctiondef 'get_git_version'",
        "Function 'get_current_branch' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'fetch_new'",
        "Missing docstring for ctiondef 'switch'",
        "Missing docstring for ctiondef 'update'",
        "Function 'get_remote_url' has parameters but no Args/Parameters documentation",
        "Function 'has_commit' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_revision'",
        "Function 'get_subdirectory' has parameters but no Args/Parameters documentation",
        "Function 'get_url_rev_and_auth' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'update_submodules'",
        "Missing docstring for ctiondef 'get_repository_root'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_current_branch' missing Returns documentation",
        "Function 'get_revision_sha' missing Returns documentation",
        "Function 'get_revision_sha' missing usage example",
        "Function 'resolve_revision' missing Returns documentation",
        "Function 'resolve_revision' missing usage example",
        "Function 'is_commit_id_equal' missing Returns documentation",
        "Function 'is_commit_id_equal' missing usage example",
        "Function 'get_remote_url' missing Returns documentation",
        "Function 'get_remote_url' missing usage example",
        "Function 'has_commit' missing Returns documentation",
        "Function 'get_subdirectory' missing Returns documentation",
        "Function 'get_subdirectory' missing usage example",
        "Function 'get_url_rev_and_auth' missing Returns documentation",
        "Function 'get_url_rev_and_auth' missing usage example",
        "Function 'should_add_vcs_url_prefix' missing Returns documentation",
        "Class 'Git' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/vcs/mercurial.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Mercurial'",
        "Missing docstring for ctiondef 'get_base_rev_args'",
        "Missing docstring for ctiondef 'fetch_new'",
        "Missing docstring for ctiondef 'switch'",
        "Missing docstring for ctiondef 'update'",
        "Missing docstring for ctiondef 'get_remote_url'",
        "Function 'get_revision' has parameters but no Args/Parameters documentation",
        "Function 'get_requirement_revision' has parameters but no Args/Parameters documentation",
        "Function 'is_commit_id_equal' has parameters but no Args/Parameters documentation",
        "Function 'get_subdirectory' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_repository_root'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_revision' missing Returns documentation",
        "Function 'get_requirement_revision' missing Returns documentation",
        "Function 'is_commit_id_equal' missing Returns documentation",
        "Function 'get_subdirectory' missing Returns documentation",
        "Function 'get_subdirectory' missing usage example",
        "Class 'Mercurial' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/vcs/subversion.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Subversion'",
        "Missing docstring for ctiondef 'should_add_vcs_url_prefix'",
        "Missing docstring for ctiondef 'get_base_rev_args'",
        "Function 'get_revision' has parameters but no Args/Parameters documentation",
        "Function 'get_netloc_and_auth' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_url_rev_and_auth'",
        "Missing docstring for ctiondef 'make_rev_args'",
        "Missing docstring for ctiondef 'get_remote_url'",
        "Function 'is_commit_id_equal' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'fetch_new'",
        "Missing docstring for ctiondef 'switch'",
        "Missing docstring for ctiondef 'update'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_revision' missing Returns documentation",
        "Function 'get_netloc_and_auth' missing Returns documentation",
        "Function 'get_netloc_and_auth' missing usage example",
        "Function 'is_commit_id_equal' missing Returns documentation",
        "Function 'call_vcs_version' missing usage example",
        "Function 'get_vcs_version' missing usage example",
        "Function 'get_remote_call_options' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/vcs/versioncontrol.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'find_path_to_project_root_from_repo_root' has parameters but no Args/Parameters documentation",
        "Missing docstring for ssdef 'RemoteNotFoundError'",
        "Missing docstring for ssdef 'RemoteNotValidError'",
        "Missing docstring for ssdef 'VcsSupport'",
        "Missing docstring for ssdef 'VersionControl'",
        "Missing docstring for ctiondef 'arg_rev'",
        "Missing docstring for ctiondef 'to_display'",
        "Missing docstring for ctiondef 'backends'",
        "Missing docstring for ctiondef 'dirnames'",
        "Missing docstring for ctiondef 'all_schemes'",
        "Missing docstring for ctiondef 'register'",
        "Missing docstring for ctiondef 'unregister'",
        "Function 'get_backend_for_dir' has parameters but no Args/Parameters documentation",
        "Function 'get_backend_for_scheme' has parameters but no Args/Parameters documentation",
        "Function 'get_backend' has parameters but no Args/Parameters documentation",
        "Function 'should_add_vcs_url_prefix' has parameters but no Args/Parameters documentation",
        "Function 'get_subdirectory' has parameters but no Args/Parameters documentation",
        "Function 'get_requirement_revision' has parameters but no Args/Parameters documentation",
        "Function 'is_immutable_rev_checkout' has parameters but no Args/Parameters documentation",
        "Function 'get_url_rev_and_auth' has parameters but no Args/Parameters documentation",
        "Function 'make_rev_args' has parameters but no Args/Parameters documentation",
        "Function 'get_url_rev_options' has parameters but no Args/Parameters documentation",
        "Function 'compare_urls' has parameters but no Args/Parameters documentation",
        "Function 'get_remote_url' has parameters but no Args/Parameters documentation",
        "Function 'get_revision' has parameters but no Args/Parameters documentation",
        "Function 'run_command' has parameters but no Args/Parameters documentation",
        "Function 'is_repository_directory' has parameters but no Args/Parameters documentation",
        "Function 'get_repository_root' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'is_url' missing Returns documentation",
        "Function 'make_vcs_requirement_url' missing Returns documentation",
        "Function 'make_vcs_requirement_url' missing usage example",
        "Function 'find_path_to_project_root_from_repo_root' missing Returns documentation",
        "Function 'find_path_to_project_root_from_repo_root' missing usage example",
        "Class 'RevOptions' docstring should reference relevant architecture documents",
        "Class 'RevOptions' should include Architecture Context section linking to design documents",
        "Function 'to_args' missing Returns documentation",
        "Function 'make_new' missing Returns documentation",
        "Function 'make_new' missing usage example",
        "Function 'get_backend_for_dir' missing Returns documentation",
        "Function 'get_backend_for_scheme' missing Returns documentation",
        "Function 'get_backend' missing Returns documentation",
        "Function 'should_add_vcs_url_prefix' missing Returns documentation",
        "Function 'should_add_vcs_url_prefix' missing usage example",
        "Function 'get_subdirectory' missing Returns documentation",
        "Function 'get_subdirectory' missing usage example",
        "Function 'get_requirement_revision' missing Returns documentation",
        "Function 'get_src_requirement' missing Returns documentation",
        "Function 'get_src_requirement' missing usage example",
        "Function 'get_base_rev_args' missing Returns documentation",
        "Function 'get_base_rev_args' missing usage example",
        "Function 'is_immutable_rev_checkout' missing Returns documentation",
        "Function 'is_immutable_rev_checkout' missing usage example",
        "Function 'make_rev_options' missing Returns documentation",
        "Function 'make_rev_options' missing usage example",
        "Function 'get_netloc_and_auth' missing usage example",
        "Function 'get_url_rev_and_auth' missing usage example",
        "Function 'make_rev_args' missing Returns documentation",
        "Function 'get_url_rev_options' missing Returns documentation",
        "Function 'normalize_url' missing Returns documentation",
        "Function 'compare_urls' missing Returns documentation",
        "Function 'fetch_new' missing Returns documentation",
        "Function 'fetch_new' missing usage example",
        "Function 'switch' missing Returns documentation",
        "Function 'update' missing Returns documentation",
        "Function 'update' missing usage example",
        "Function 'is_commit_id_equal' missing Returns documentation",
        "Function 'is_commit_id_equal' missing usage example",
        "Function 'obtain' missing Returns documentation",
        "Function 'obtain' missing usage example",
        "Function 'unpack' missing Returns documentation",
        "Function 'unpack' missing usage example",
        "Function 'get_remote_url' missing Returns documentation",
        "Function 'get_remote_url' missing usage example",
        "Function 'get_revision' missing Returns documentation",
        "Function 'run_command' missing Returns documentation",
        "Function 'run_command' missing usage example",
        "Function 'is_repository_directory' missing Returns documentation",
        "Function 'get_repository_root' missing Returns documentation",
        "Function 'get_repository_root' missing usage example",
        "Class 'RevOptions' should have __init__ method",
        "Class 'VersionControl' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_internal/wheel_builder.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'should_build_for_wheel_command'",
        "Missing docstring for ctiondef 'should_build_for_install_command'",
        "Function 'build' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'build' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'vendored'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/cachecontrol/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/cachecontrol/_cmd.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ctiondef 'setup_logging'",
        "Missing docstring for ctiondef 'get_session'",
        "Missing docstring for ctiondef 'get_args'",
        "Missing docstring for ctiondef 'main'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/cachecontrol/adapter.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'CacheControlAdapter'",
        "Function 'send' has parameters but no Args/Parameters documentation",
        "Function 'build_response' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'close'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'send' missing Returns documentation",
        "Function 'send' missing usage example",
        "Function 'build_response' missing Returns documentation",
        "Function 'build_response' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/cachecontrol/cache.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'BaseCache'",
        "Missing docstring for ssdef 'DictCache'",
        "Missing docstring for ctiondef 'get'",
        "Missing docstring for ctiondef 'set'",
        "Missing docstring for ctiondef 'delete'",
        "Missing docstring for ctiondef 'close'",
        "Missing docstring for ctiondef 'get'",
        "Missing docstring for ctiondef 'set'",
        "Missing docstring for ctiondef 'delete'",
        "Missing docstring for ctiondef 'set_body'",
        "Function 'get_body' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SeparateBodyBaseCache' docstring should reference relevant architecture documents",
        "Class 'SeparateBodyBaseCache' should include Architecture Context section linking to design documents",
        "Function 'get_body' missing Returns documentation",
        "Class 'BaseCache' should have __init__ method",
        "Class 'SeparateBodyBaseCache' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/cachecontrol/caches/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/cachecontrol/caches/file_cache.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'url_to_file_path' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'encode'",
        "Missing docstring for ctiondef 'get'",
        "Missing docstring for ctiondef 'set'",
        "Missing docstring for ctiondef 'delete'",
        "Missing docstring for ctiondef 'get_body'",
        "Missing docstring for ctiondef 'set_body'",
        "Missing docstring for ctiondef 'delete'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'FileCache' docstring should reference relevant architecture documents",
        "Class 'SeparateBodyFileCache' docstring should reference relevant architecture documents",
        "Function 'url_to_file_path' missing Returns documentation",
        "Class 'FileCache' should have __init__ method",
        "Class 'SeparateBodyFileCache' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/cachecontrol/caches/redis_cache.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'RedisCache'",
        "Missing docstring for ctiondef 'get'",
        "Missing docstring for ctiondef 'set'",
        "Missing docstring for ctiondef 'delete'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'clear' missing Returns documentation",
        "Function 'close' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/cachecontrol/controller.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'cache_url'",
        "Missing docstring for ctiondef 'parse_cache_control'",
        "Function 'cached_request' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'conditional_headers'",
        "Function 'cache_response' has parameters but no Args/Parameters documentation",
        "Function 'update_cached_response' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'parse_uri' missing Returns documentation",
        "Function 'parse_uri' missing usage example",
        "Class 'CacheController' docstring should reference relevant architecture documents",
        "Function 'cached_request' missing Returns documentation",
        "Function 'cache_response' missing Returns documentation",
        "Function 'update_cached_response' missing Returns documentation",
        "Function 'update_cached_response' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/cachecontrol/filewrapper.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'read'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'CallbackFileWrapper' docstring should reference relevant architecture documents",
        "Class 'CallbackFileWrapper' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/cachecontrol/heuristics.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'expire_after'",
        "Missing docstring for ctiondef 'datetime_to_header'",
        "Missing docstring for ssdef 'BaseHeuristic'",
        "Function 'warning' has parameters but no Args/Parameters documentation",
        "Function 'update_headers' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'apply'",
        "Missing docstring for ctiondef 'update_headers'",
        "Missing docstring for ctiondef 'update_headers'",
        "Missing docstring for ctiondef 'warning'",
        "Missing docstring for ctiondef 'update_headers'",
        "Missing docstring for ctiondef 'warning'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'OneDayCache' docstring should reference relevant architecture documents",
        "Class 'ExpiresAfter' docstring should reference relevant architecture documents",
        "Class 'LastModified' docstring should reference relevant architecture documents",
        "Class 'LastModified' should include Architecture Context section linking to design documents",
        "Function 'warning' missing Returns documentation",
        "Function 'warning' missing usage example",
        "Function 'update_headers' missing Returns documentation",
        "Function 'update_headers' missing usage example",
        "Class 'BaseHeuristic' should have __init__ method",
        "Class 'OneDayCache' should have __init__ method",
        "Class 'LastModified' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/cachecontrol/serialize.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Serializer'",
        "Missing docstring for ctiondef 'dumps'",
        "Missing docstring for ctiondef 'serialize'",
        "Missing docstring for ctiondef 'loads'",
        "Function 'prepare_response' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'prepare_response' missing Returns documentation",
        "Class 'Serializer' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/cachecontrol/wrapper.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ctiondef 'CacheControl'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [],
      "score": 0.028571428571428525,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/certifi/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/certifi/__main__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/certifi/core.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'exit_cacert_ctx'",
        "Missing docstring for ctiondef 'where'",
        "Missing docstring for ctiondef 'contents'",
        "Missing docstring for ctiondef 'where'",
        "Missing docstring for ctiondef 'contents'",
        "Missing docstring for ctiondef 'read_text'",
        "Missing docstring for ctiondef 'where'",
        "Missing docstring for ctiondef 'contents'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distlib/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ssdef 'DistlibException'",
        "Missing docstring for ssdef 'NullHandler'",
        "Missing docstring for ctiondef 'handle'",
        "Missing docstring for ctiondef 'emit'",
        "Missing docstring for ctiondef 'createLock'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Class 'NullHandler' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distlib/compat.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'quote'",
        "Missing docstring for ssdef 'ZipExtFile'",
        "Missing docstring for ssdef 'ZipFile'",
        "Missing docstring for ssdef 'CertificateError'",
        "Function 'match_hostname' has parameters but no Args/Parameters documentation",
        "Function 'which' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'open'",
        "Missing docstring for ctiondef 'callable'",
        "Missing docstring for ctiondef 'fsencode'",
        "Missing docstring for ctiondef 'fsdecode'",
        "Missing docstring for ctiondef 'cache_from_source'",
        "Missing docstring for ctiondef 'valid_ident'",
        "Missing docstring for ctiondef 'pop'",
        "Missing docstring for ctiondef 'read_or_stop'",
        "Missing docstring for ctiondef 'find_cookie'",
        "Missing docstring for ctiondef 'get'",
        "Function 'fromkeys' has parameters but no Args/Parameters documentation",
        "Function 'pop' has parameters but no Args/Parameters documentation",
        "Function '__setitem__' has parameters but no Args/Parameters documentation",
        "Function '__delitem__' has parameters but no Args/Parameters documentation",
        "Function 'popitem' has parameters but no Args/Parameters documentation",
        "Function 'pop' has parameters but no Args/Parameters documentation",
        "Function 'setdefault' has parameters but no Args/Parameters documentation",
        "Function '__repr__' has parameters but no Args/Parameters documentation",
        "Function 'fromkeys' has parameters but no Args/Parameters documentation",
        "Function '__eq__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get'",
        "Missing docstring for ctiondef 'pop'",
        "Function 'resolve' has parameters but no Args/Parameters documentation",
        "Function 'ext_convert' has parameters but no Args/Parameters documentation",
        "Function 'cfg_convert' has parameters but no Args/Parameters documentation",
        "Function 'convert' has parameters but no Args/Parameters documentation",
        "Function 'configure_custom' has parameters but no Args/Parameters documentation",
        "Function 'as_tuple' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'decorating_function'",
        "Missing docstring for ctiondef 'wrapper'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'match_hostname' missing Returns documentation",
        "Function 'match_hostname' missing usage example",
        "Class 'Container' docstring should reference relevant architecture documents",
        "Function 'which' missing Returns documentation",
        "Function 'which' missing usage example",
        "Function 'python_implementation' missing Returns documentation",
        "Function 'detect_encoding' missing Returns documentation",
        "Function 'detect_encoding' missing usage example",
        "Class 'ChainMap' docstring should reference relevant architecture documents",
        "Class 'ChainMap' should include Architecture Context section linking to design documents",
        "Class 'OrderedDict' docstring should reference relevant architecture documents",
        "Class 'ConvertingDict' docstring should reference relevant architecture documents",
        "Class 'ConvertingList' docstring should reference relevant architecture documents",
        "Class 'ConvertingTuple' docstring should reference relevant architecture documents",
        "Class 'BaseConfigurator' docstring should reference relevant architecture documents",
        "Function 'fromkeys' missing Returns documentation",
        "Function 'copy' missing Returns documentation",
        "Function 'new_child' missing Returns documentation",
        "Function 'parents' missing Returns documentation",
        "Function 'popitem' missing Returns documentation",
        "Function 'pop' missing Returns documentation",
        "Function 'clear' missing Returns documentation",
        "Function 'clear' missing Returns documentation",
        "Function 'popitem' missing Returns documentation",
        "Function 'popitem' missing usage example",
        "Function 'keys' missing Returns documentation",
        "Function 'values' missing Returns documentation",
        "Function 'items' missing Returns documentation",
        "Function 'iterkeys' missing Returns documentation",
        "Function 'itervalues' missing Returns documentation",
        "Function 'iteritems' missing Returns documentation",
        "Function 'update' missing Returns documentation",
        "Function 'update' missing usage example",
        "Function 'pop' missing Returns documentation",
        "Function 'pop' missing usage example",
        "Function 'setdefault' missing Returns documentation",
        "Function 'copy' missing Returns documentation",
        "Function 'fromkeys' missing Returns documentation",
        "Function 'fromkeys' missing usage example",
        "Function 'viewkeys' missing Returns documentation",
        "Function 'viewvalues' missing Returns documentation",
        "Function 'viewitems' missing Returns documentation",
        "Function 'resolve' missing Returns documentation",
        "Function 'ext_convert' missing Returns documentation",
        "Function 'cfg_convert' missing Returns documentation",
        "Function 'convert' missing Returns documentation",
        "Function 'convert' missing usage example",
        "Function 'configure_custom' missing Returns documentation",
        "Function 'as_tuple' missing Returns documentation",
        "Class 'ZipFile' should have __init__ method",
        "Class 'ConvertingDict' should have __init__ method",
        "Class 'ConvertingList' should have __init__ method",
        "Class 'ConvertingTuple' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distlib/database.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'make_dist' has parameters but no Args/Parameters documentation",
        "Function 'get_distribution' has parameters but no Args/Parameters documentation",
        "Function 'get_file_path' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'run_requires'",
        "Missing docstring for ctiondef 'meta_requires'",
        "Missing docstring for ctiondef 'build_requires'",
        "Missing docstring for ctiondef 'test_requires'",
        "Missing docstring for ctiondef 'dev_requires'",
        "Function 'write_installed_files' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_distinfo_resource'",
        "Function 'add_distribution' has parameters but no Args/Parameters documentation",
        "Function 'add_edge' has parameters but no Args/Parameters documentation",
        "Function 'add_missing' has parameters but no Args/Parameters documentation",
        "Function 'repr_node' has parameters but no Args/Parameters documentation",
        "Function 'to_dot' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'set_name_and_version'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'DistributionPath' docstring should reference relevant architecture documents",
        "Class 'Distribution' docstring should reference relevant architecture documents",
        "Class 'Distribution' should include Architecture Context section linking to design documents",
        "Class 'BaseInstalledDistribution' docstring should reference relevant architecture documents",
        "Class 'InstalledDistribution' docstring should reference relevant architecture documents",
        "Class 'InstalledDistribution' should include Architecture Context section linking to design documents",
        "Class 'EggInfoDistribution' docstring should reference relevant architecture documents",
        "Class 'EggInfoDistribution' should include Architecture Context section linking to design documents",
        "Class 'DependencyGraph' docstring should reference relevant architecture documents",
        "Class 'DependencyGraph' should include Architecture Context section linking to design documents",
        "Function 'make_graph' missing Returns documentation",
        "Function 'make_graph' missing usage example",
        "Function 'get_dependent_dists' missing Returns documentation",
        "Function 'get_dependent_dists' missing usage example",
        "Function 'get_required_dists' missing Returns documentation",
        "Function 'get_required_dists' missing usage example",
        "Function 'make_dist' missing Returns documentation",
        "Function 'clear' missing Returns documentation",
        "Function 'add' missing Returns documentation",
        "Function 'clear_cache' missing Returns documentation",
        "Function 'distinfo_dirname' missing usage example",
        "Function 'get_distributions' missing Returns documentation",
        "Function 'get_distributions' missing usage example",
        "Function 'get_distribution' missing Returns documentation",
        "Function 'get_distribution' missing usage example",
        "Function 'provides_distribution' missing Returns documentation",
        "Function 'provides_distribution' missing usage example",
        "Function 'get_file_path' missing Returns documentation",
        "Function 'get_exported_entries' missing Returns documentation",
        "Function 'get_exported_entries' missing usage example",
        "Function 'source_url' missing Returns documentation",
        "Function 'name_and_version' missing Returns documentation",
        "Function 'provides' missing usage example",
        "Function 'matches_requirement' missing usage example",
        "Function 'get_hash' missing usage example",
        "Function 'exports' missing usage example",
        "Function 'read_exports' missing usage example",
        "Function 'write_exports' missing Returns documentation",
        "Function 'write_exports' missing usage example",
        "Function 'get_resource_path' missing usage example",
        "Function 'list_installed_files' missing usage example",
        "Function 'write_installed_files' missing Returns documentation",
        "Function 'write_installed_files' missing usage example",
        "Function 'check_installed_files' missing Returns documentation",
        "Function 'check_installed_files' missing usage example",
        "Function 'shared_locations' missing Returns documentation",
        "Function 'shared_locations' missing usage example",
        "Function 'write_shared_locations' missing usage example",
        "Function 'get_distinfo_file' missing Returns documentation",
        "Function 'get_distinfo_file' missing usage example",
        "Function 'list_distinfo_files' missing usage example",
        "Function 'check_installed_files' missing Returns documentation",
        "Function 'check_installed_files' missing usage example",
        "Function 'list_installed_files' missing usage example",
        "Function 'list_distinfo_files' missing usage example",
        "Function 'add_distribution' missing Returns documentation",
        "Function 'add_distribution' missing usage example",
        "Function 'add_edge' missing Returns documentation",
        "Function 'add_edge' missing usage example",
        "Function 'add_missing' missing Returns documentation",
        "Function 'add_missing' missing usage example",
        "Function 'repr_node' missing Returns documentation",
        "Function 'to_dot' missing Returns documentation",
        "Function 'to_dot' missing usage example",
        "Function 'topological_sort' missing usage example",
        "Function 'parse_requires_data' missing Returns documentation",
        "Function 'parse_requires_data' missing usage example",
        "Function 'parse_requires_path' missing Returns documentation",
        "Function 'parse_requires_path' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distlib/index.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'search'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PackageIndex' docstring should reference relevant architecture documents",
        "Function 'read_configuration' missing Returns documentation",
        "Function 'read_configuration' missing usage example",
        "Function 'save_configuration' missing Returns documentation",
        "Function 'save_configuration' missing usage example",
        "Function 'check_credentials' missing Returns documentation",
        "Function 'register' missing usage example",
        "Function 'get_sign_command' missing usage example",
        "Function 'run_command' missing usage example",
        "Function 'sign_file' missing usage example",
        "Function 'upload_file' missing usage example",
        "Function 'upload_documentation' missing usage example",
        "Function 'get_verify_command' missing usage example",
        "Function 'verify_signature' missing usage example",
        "Function 'download_file' missing Returns documentation",
        "Function 'download_file' missing usage example",
        "Function 'send_request' missing usage example",
        "Function 'encode_request' missing Returns documentation",
        "Function 'encode_request' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distlib/locators.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'http_error_302'",
        "Missing docstring for ctiondef 'clear_cache'",
        "Function 'get_project' has parameters but no Args/Parameters documentation",
        "Function 'score_url' has parameters but no Args/Parameters documentation",
        "Function 'prefer_url' has parameters but no Args/Parameters documentation",
        "Function 'split_filename' has parameters but no Args/Parameters documentation",
        "Function 'convert_url_to_download_info' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'get_page' has parameters but no Args/Parameters documentation",
        "Function 'should_include' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'clear_cache'",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'same_project'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_all_distribution_names' missing usage example",
        "Class 'RedirectHandler' docstring should reference relevant architecture documents",
        "Class 'Locator' docstring should reference relevant architecture documents",
        "Class 'PyPIRPCLocator' docstring should reference relevant architecture documents",
        "Class 'PyPIRPCLocator' should include Architecture Context section linking to design documents",
        "Class 'PyPIJSONLocator' docstring should reference relevant architecture documents",
        "Class 'PyPIJSONLocator' should include Architecture Context section linking to design documents",
        "Class 'Page' docstring should reference relevant architecture documents",
        "Class 'SimpleScrapingLocator' docstring should reference relevant architecture documents",
        "Class 'SimpleScrapingLocator' should include Architecture Context section linking to design documents",
        "Class 'DirectoryLocator' docstring should reference relevant architecture documents",
        "Class 'JSONLocator' docstring should reference relevant architecture documents",
        "Class 'JSONLocator' should include Architecture Context section linking to design documents",
        "Class 'DistPathLocator' docstring should reference relevant architecture documents",
        "Class 'DistPathLocator' should include Architecture Context section linking to design documents",
        "Class 'AggregatingLocator' docstring should reference relevant architecture documents",
        "Class 'DependencyFinder' docstring should reference relevant architecture documents",
        "Function 'get_errors' missing Returns documentation",
        "Function 'clear_errors' missing Returns documentation",
        "Function 'get_distribution_names' missing Returns documentation",
        "Function 'get_project' missing Returns documentation",
        "Function 'get_project' missing usage example",
        "Function 'score_url' missing Returns documentation",
        "Function 'prefer_url' missing Returns documentation",
        "Function 'prefer_url' missing usage example",
        "Function 'split_filename' missing Returns documentation",
        "Function 'convert_url_to_download_info' missing Returns documentation",
        "Function 'convert_url_to_download_info' missing usage example",
        "Function 'locate' missing usage example",
        "Function 'get_distribution_names' missing Returns documentation",
        "Function 'get_distribution_names' missing Returns documentation",
        "Function 'links' missing Returns documentation",
        "Function 'links' missing usage example",
        "Function 'get_page' missing Returns documentation",
        "Function 'get_page' missing usage example",
        "Function 'get_distribution_names' missing Returns documentation",
        "Function 'should_include' missing Returns documentation",
        "Function 'should_include' missing usage example",
        "Function 'get_distribution_names' missing Returns documentation",
        "Function 'get_distribution_names' missing Returns documentation",
        "Function 'get_distribution_names' missing Returns documentation",
        "Function 'add_distribution' missing Returns documentation",
        "Function 'add_distribution' missing usage example",
        "Function 'remove_distribution' missing Returns documentation",
        "Function 'remove_distribution' missing usage example",
        "Function 'get_matcher' missing usage example",
        "Function 'find_providers' missing usage example",
        "Function 'try_to_replace' missing usage example",
        "Function 'find' missing Returns documentation",
        "Function 'find' missing usage example",
        "ctiondef 'clean' has very short docstring",
        "Function 'clean' missing Returns documentation",
        "Class 'RedirectHandler' should have __init__ method",
        "Class 'JSONLocator' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distlib/manifest.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'sorted' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'add_dir'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Manifest' docstring should reference relevant architecture documents",
        "Class 'Manifest' should include Architecture Context section linking to design documents",
        "Function 'findall' missing Returns documentation",
        "Function 'add' missing Returns documentation",
        "Function 'add_many' missing Returns documentation",
        "Function 'add_many' missing usage example",
        "Function 'sorted' missing Returns documentation",
        "Function 'clear' missing Returns documentation",
        "Function 'process_directive' missing Returns documentation",
        "Function 'process_directive' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distlib/markers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'default_context'",
        "Function 'evaluate' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'format_full_version'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Evaluator' docstring should reference relevant architecture documents",
        "Function 'interpret' missing Returns documentation",
        "Function 'interpret' missing usage example",
        "Function 'evaluate' missing Returns documentation",
        "Function 'evaluate' missing usage example",
        "Class 'Evaluator' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distlib/metadata.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'set_metadata_version'",
        "Function 'get_fullname' has parameters but no Args/Parameters documentation",
        "Function 'is_field' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'is_multi_field'",
        "Function 'read' has parameters but no Args/Parameters documentation",
        "Function 'read_file' has parameters but no Args/Parameters documentation",
        "Function 'write' has parameters but no Args/Parameters documentation",
        "Function 'write_file' has parameters but no Args/Parameters documentation",
        "Function 'update' has parameters but no Args/Parameters documentation",
        "Function 'set' has parameters but no Args/Parameters documentation",
        "Function 'get' has parameters but no Args/Parameters documentation",
        "Function 'check' has parameters but no Args/Parameters documentation",
        "Function 'todict' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'add_requirements'",
        "Missing docstring for ctiondef 'keys'",
        "Missing docstring for ctiondef 'values'",
        "Missing docstring for ctiondef 'items'",
        "Missing docstring for ctiondef 'name_and_version'",
        "Missing docstring for ctiondef 'provides'",
        "Missing docstring for ctiondef 'provides'",
        "Missing docstring for ctiondef 'dictionary'",
        "Missing docstring for ctiondef 'dependencies'",
        "Missing docstring for ctiondef 'dependencies'",
        "Missing docstring for ctiondef 'validate'",
        "Missing docstring for ctiondef 'todict'",
        "Missing docstring for ctiondef 'write'",
        "Missing docstring for ctiondef 'add_requirements'",
        "Missing docstring for ctiondef 'are_valid_constraints'",
        "Missing docstring for ctiondef 'process_entries'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'MetadataMissingError' docstring should reference relevant architecture documents",
        "Class 'MetadataConflictError' docstring should reference relevant architecture documents",
        "Class 'MetadataUnrecognizedVersionError' docstring should reference relevant architecture documents",
        "Class 'MetadataInvalidError' docstring should reference relevant architecture documents",
        "Class 'LegacyMetadata' docstring should reference relevant architecture documents",
        "Class 'LegacyMetadata' should include Architecture Context section linking to design documents",
        "Class 'Metadata' docstring should reference relevant architecture documents",
        "Class 'Metadata' should include Architecture Context section linking to design documents",
        "Function 'get_fullname' missing Returns documentation",
        "Function 'is_field' missing Returns documentation",
        "Function 'read' missing Returns documentation",
        "Function 'read_file' missing Returns documentation",
        "Function 'write' missing Returns documentation",
        "Function 'write_file' missing Returns documentation",
        "Function 'update' missing Returns documentation",
        "Function 'update' missing usage example",
        "Function 'set' missing Returns documentation",
        "Function 'get' missing Returns documentation",
        "Function 'check' missing Returns documentation",
        "Function 'todict' missing Returns documentation",
        "Function 'todict' missing usage example",
        "Function 'get_requirements' missing Returns documentation",
        "Function 'get_requirements' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distlib/resources.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'ResourceCache'",
        "Missing docstring for ssdef 'ResourceBase'",
        "Missing docstring for ssdef 'ResourceContainer'",
        "Missing docstring for ctiondef 'register_finder'",
        "Missing docstring for ctiondef 'file_path'",
        "Missing docstring for ctiondef 'bytes'",
        "Missing docstring for ctiondef 'size'",
        "Missing docstring for ctiondef 'resources'",
        "Missing docstring for ctiondef 'get_cache_info'",
        "Missing docstring for ctiondef 'find'",
        "Missing docstring for ctiondef 'get_stream'",
        "Missing docstring for ctiondef 'get_bytes'",
        "Missing docstring for ctiondef 'get_size'",
        "Missing docstring for ctiondef 'get_resources'",
        "Missing docstring for ctiondef 'is_container'",
        "Missing docstring for ctiondef 'iterator'",
        "Missing docstring for ctiondef 'get_cache_info'",
        "Missing docstring for ctiondef 'get_bytes'",
        "Missing docstring for ctiondef 'get_stream'",
        "Missing docstring for ctiondef 'get_size'",
        "Missing docstring for ctiondef 'get_resources'",
        "Missing docstring for ctiondef 'allowed'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Resource' docstring should reference relevant architecture documents",
        "Class 'Resource' should include Architecture Context section linking to design documents",
        "Class 'ResourceFinder' docstring should reference relevant architecture documents",
        "Class 'ZipResourceFinder' docstring should reference relevant architecture documents",
        "Function 'finder' missing usage example",
        "Function 'finder_for_path' missing usage example",
        "Function 'is_stale' missing usage example",
        "Function 'get' missing usage example",
        "Function 'as_stream' missing Returns documentation",
        "Function 'as_stream' missing usage example",
        "Class 'Resource' should have __init__ method",
        "Class 'ResourceContainer' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distlib/scripts.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'enquote_executable'",
        "Missing docstring for ctiondef 'get_manifest'",
        "Missing docstring for ctiondef 'get_script_filenames'",
        "Missing docstring for ctiondef 'dry_run'",
        "Missing docstring for ctiondef 'dry_run'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ScriptMaker' docstring should reference relevant architecture documents",
        "Function 'make' missing usage example",
        "Function 'make_multiple' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distlib/util.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get_resources_dests' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'in_venv'",
        "Missing docstring for ctiondef 'get_executable'",
        "Missing docstring for ctiondef 'proceed'",
        "Missing docstring for ctiondef 'extract_by_key'",
        "Missing docstring for ctiondef 'read_exports'",
        "Missing docstring for ctiondef 'write_exports'",
        "Missing docstring for ctiondef 'tempdir'",
        "Missing docstring for ctiondef 'chdir'",
        "Missing docstring for ctiondef 'socket_timeout'",
        "Missing docstring for ssdef 'cached_property'",
        "Missing docstring for ssdef 'FileOperator'",
        "Missing docstring for ctiondef 'resolve'",
        "Missing docstring for ssdef 'ExportEntry'",
        "Missing docstring for ctiondef 'get_export_entry'",
        "Function 'path_to_cache_dir' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'ensure_slash'",
        "Missing docstring for ctiondef 'parse_credentials'",
        "Missing docstring for ctiondef 'get_process_umask'",
        "Missing docstring for ctiondef 'is_string_sequence'",
        "Function 'split_filename' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_extras'",
        "Missing docstring for ctiondef 'get_project_data'",
        "Missing docstring for ctiondef 'get_package_data'",
        "Missing docstring for ssdef 'Sequencer'",
        "Missing docstring for ctiondef 'unarchive'",
        "Missing docstring for ssdef 'Progress'",
        "Missing docstring for ssdef 'Transport'",
        "Missing docstring for ssdef 'ServerProxy'",
        "Missing docstring for ssdef 'CSVBase'",
        "Missing docstring for ssdef 'CSVReader'",
        "Missing docstring for ssdef 'CSVWriter'",
        "Missing docstring for ssdef 'Configurator'",
        "Missing docstring for ssdef 'PyPIRCFile'",
        "Missing docstring for ctiondef 'get_platform'",
        "Missing docstring for ctiondef 'marker_var'",
        "Missing docstring for ctiondef 'marker_expr'",
        "Missing docstring for ctiondef 'marker_and'",
        "Missing docstring for ctiondef 'marker'",
        "Missing docstring for ctiondef 'get_rel_path'",
        "Missing docstring for ctiondef 'read_stream'",
        "Missing docstring for ctiondef 'record_as_written'",
        "Function 'newer' has parameters but no Args/Parameters documentation",
        "Function 'copy_file' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'copy_stream'",
        "Missing docstring for ctiondef 'write_binary_file'",
        "Missing docstring for ctiondef 'write_text_file'",
        "Missing docstring for ctiondef 'set_mode'",
        "Missing docstring for ctiondef 'ensure_dir'",
        "Missing docstring for ctiondef 'byte_compile'",
        "Missing docstring for ctiondef 'ensure_removed'",
        "Missing docstring for ctiondef 'is_writable'",
        "Missing docstring for ctiondef 'rollback'",
        "Missing docstring for ctiondef 'value'",
        "Function 'prefix_to_dir' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'add_node'",
        "Missing docstring for ctiondef 'remove_node'",
        "Missing docstring for ctiondef 'add'",
        "Missing docstring for ctiondef 'remove'",
        "Missing docstring for ctiondef 'is_step'",
        "Missing docstring for ctiondef 'get_steps'",
        "Missing docstring for ctiondef 'strong_connections'",
        "Missing docstring for ctiondef 'dot'",
        "Missing docstring for ctiondef 'check_path'",
        "Missing docstring for ctiondef 'update'",
        "Missing docstring for ctiondef 'increment'",
        "Missing docstring for ctiondef 'start'",
        "Missing docstring for ctiondef 'stop'",
        "Missing docstring for ctiondef 'maximum'",
        "Missing docstring for ctiondef 'percentage'",
        "Missing docstring for ctiondef 'format_duration'",
        "Missing docstring for ctiondef 'ETA'",
        "Missing docstring for ctiondef 'speed'",
        "Missing docstring for ssdef 'HTTPSConnection'",
        "Missing docstring for ssdef 'HTTPSHandler'",
        "Missing docstring for ssdef 'HTTPSOnlyHandler'",
        "Missing docstring for ctiondef 'make_connection'",
        "Missing docstring for ssdef 'SafeTransport'",
        "Missing docstring for ctiondef 'next'",
        "Missing docstring for ctiondef 'writerow'",
        "Missing docstring for ctiondef 'configure_custom'",
        "Function 'inc_convert' has parameters but no Args/Parameters documentation",
        "Function 'reader' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'run_command'",
        "Missing docstring for ctiondef 'read'",
        "Missing docstring for ctiondef 'update'",
        "Missing docstring for ctiondef 'strongconnect'",
        "Function 'extraction_filter' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'connect'",
        "Missing docstring for ctiondef 'https_open'",
        "Missing docstring for ctiondef 'http_open'",
        "Missing docstring for ctiondef 'make_connection'",
        "Missing docstring for ctiondef 'convert'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'parse_marker' missing Returns documentation",
        "Function 'parse_marker' missing usage example",
        "Function 'parse_requirement' missing Returns documentation",
        "Function 'parse_requirement' missing usage example",
        "Function 'get_resources_dests' missing Returns documentation",
        "Function 'convert_path' missing Returns documentation",
        "Function 'convert_path' missing usage example",
        "Function 'get_cache_base' missing Returns documentation",
        "Function 'get_cache_base' missing usage example",
        "Function 'path_to_cache_dir' missing Returns documentation",
        "Function 'path_to_cache_dir' missing usage example",
        "Function 'split_filename' missing Returns documentation",
        "Function 'split_filename' missing usage example",
        "Function 'parse_name_and_version' missing usage example",
        "Class 'Cache' docstring should reference relevant architecture documents",
        "Class 'Cache' should include Architecture Context section linking to design documents",
        "Class 'EventMixin' docstring should reference relevant architecture documents",
        "Function 'zip_dir' missing Returns documentation",
        "Function 'iglob' missing Returns documentation",
        "Class 'SubprocessMixin' docstring should reference relevant architecture documents",
        "Function 'normalize_name' missing Returns documentation",
        "Function 'get_host_platform' missing Returns documentation",
        "Function 'get_host_platform' missing usage example",
        "Function 'newer' missing Returns documentation",
        "Function 'newer' missing usage example",
        "Function 'copy_file' missing Returns documentation",
        "Function 'commit' missing Returns documentation",
        "Function 'prefix_to_dir' missing Returns documentation",
        "ctiondef 'clear' has very short docstring",
        "Function 'clear' missing Returns documentation",
        "Function 'add' missing Returns documentation",
        "Function 'add' missing usage example",
        "Function 'remove' missing Returns documentation",
        "Function 'remove' missing usage example",
        "Function 'get_subscribers' missing Returns documentation",
        "Function 'get_subscribers' missing usage example",
        "Function 'publish' missing Returns documentation",
        "Function 'publish' missing usage example",
        "Function 'inc_convert' missing Returns documentation",
        "Function 'reader' missing Returns documentation",
        "Function 'reader' missing usage example",
        "Function 'extraction_filter' missing Returns documentation",
        "Function 'get_versions' missing Returns documentation",
        "Class 'CSVBase' should have __init__ method",
        "Class 'HTTPSConnection' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distlib/version.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Version'",
        "Missing docstring for ssdef 'Matcher'",
        "Missing docstring for ssdef 'NormalizedMatcher'",
        "Missing docstring for ssdef 'LegacyVersion'",
        "Missing docstring for ssdef 'LegacyMatcher'",
        "Missing docstring for ctiondef 'is_semver'",
        "Missing docstring for ssdef 'SemanticVersion'",
        "Missing docstring for ssdef 'SemanticMatcher'",
        "Missing docstring for ssdef 'VersionScheme'",
        "Missing docstring for ctiondef 'get_scheme'",
        "Missing docstring for ctiondef 'parse'",
        "Missing docstring for ctiondef 'is_prerelease'",
        "Missing docstring for ctiondef 'parse_requirement'",
        "Missing docstring for ctiondef 'exact_version'",
        "Missing docstring for ctiondef 'parse'",
        "Missing docstring for ctiondef 'is_prerelease'",
        "Missing docstring for ctiondef 'get_parts'",
        "Missing docstring for ctiondef 'parse'",
        "Missing docstring for ctiondef 'is_prerelease'",
        "Missing docstring for ctiondef 'make_tuple'",
        "Missing docstring for ctiondef 'parse'",
        "Missing docstring for ctiondef 'is_prerelease'",
        "Missing docstring for ctiondef 'is_valid_version'",
        "Missing docstring for ctiondef 'is_valid_matcher'",
        "Function 'is_valid_constraint_list' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'suggest'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'UnsupportedVersionError' docstring should reference relevant architecture documents",
        "Class 'NormalizedVersion' docstring should reference relevant architecture documents",
        "Class 'NormalizedVersion' should include Architecture Context section linking to design documents",
        "Function 'match' missing Returns documentation",
        "Function 'match' missing usage example",
        "Function 'is_valid_constraint_list' missing Returns documentation",
        "Class 'UnsupportedVersionError' should have __init__ method",
        "Class 'NormalizedVersion' should have __init__ method",
        "Class 'NormalizedMatcher' should have __init__ method",
        "Class 'LegacyVersion' should have __init__ method",
        "Class 'LegacyMatcher' should have __init__ method",
        "Class 'SemanticVersion' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distlib/wheel.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Mounter'",
        "Missing docstring for ctiondef 'is_compatible'",
        "Missing docstring for ctiondef 'add'",
        "Missing docstring for ctiondef 'remove'",
        "Missing docstring for ctiondef 'find_module'",
        "Missing docstring for ctiondef 'load_module'",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'exists'",
        "Missing docstring for ctiondef 'tags'",
        "Missing docstring for ctiondef 'metadata'",
        "Missing docstring for ctiondef 'get_wheel_metadata'",
        "Missing docstring for ctiondef 'info'",
        "Missing docstring for ctiondef 'process_shebang'",
        "Missing docstring for ctiondef 'get_hash'",
        "Missing docstring for ctiondef 'write_record'",
        "Missing docstring for ctiondef 'write_records'",
        "Missing docstring for ctiondef 'build_zip'",
        "Function 'build' has parameters but no Args/Parameters documentation",
        "Function 'skip_entry' has parameters but no Args/Parameters documentation",
        "Function 'install' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'mount'",
        "Missing docstring for ctiondef 'unmount'",
        "Missing docstring for ctiondef 'verify'",
        "Function 'update' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'sorter'",
        "Missing docstring for ctiondef 'get_version'",
        "Missing docstring for ctiondef 'update_version'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Wheel' docstring should reference relevant architecture documents",
        "Function 'compatible_tags' missing Returns documentation",
        "Function 'filename' missing Returns documentation",
        "Function 'build' missing Returns documentation",
        "Function 'build' missing usage example",
        "Function 'skip_entry' missing Returns documentation",
        "Function 'install' missing Returns documentation",
        "Function 'install' missing usage example",
        "Function 'is_compatible' missing Returns documentation",
        "Function 'is_mountable' missing Returns documentation",
        "Function 'update' missing Returns documentation",
        "Function 'update' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distro/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distro/__main__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/distro/distro.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'VersionDict'",
        "Missing docstring for ssdef 'InfoDict'",
        "Function 'version' has parameters but no Args/Parameters documentation",
        "Function 'info' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'main'",
        "Function 'linux_distribution' has parameters but no Args/Parameters documentation",
        "Function 'name' has parameters but no Args/Parameters documentation",
        "Function 'version' has parameters but no Args/Parameters documentation",
        "Function 'version_parts' has parameters but no Args/Parameters documentation",
        "Function 'major_version' has parameters but no Args/Parameters documentation",
        "Function 'minor_version' has parameters but no Args/Parameters documentation",
        "Function 'build_number' has parameters but no Args/Parameters documentation",
        "Function 'info' has parameters but no Args/Parameters documentation",
        "Function 'os_release_attr' has parameters but no Args/Parameters documentation",
        "Function 'lsb_release_attr' has parameters but no Args/Parameters documentation",
        "Function 'distro_release_attr' has parameters but no Args/Parameters documentation",
        "Function 'uname_attr' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'normalize'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'linux_distribution' missing Returns documentation",
        "Function 'linux_distribution' missing usage example",
        "Function 'id' missing Returns documentation",
        "Function 'id' missing usage example",
        "Function 'name' missing Returns documentation",
        "Function 'name' missing usage example",
        "Function 'version' missing Returns documentation",
        "Function 'version' missing usage example",
        "Function 'version_parts' missing Returns documentation",
        "Function 'version_parts' missing usage example",
        "Function 'major_version' missing Returns documentation",
        "Function 'major_version' missing usage example",
        "Function 'minor_version' missing Returns documentation",
        "Function 'minor_version' missing usage example",
        "Function 'build_number' missing Returns documentation",
        "Function 'build_number' missing usage example",
        "Function 'like' missing Returns documentation",
        "Function 'like' missing usage example",
        "Function 'codename' missing Returns documentation",
        "Function 'codename' missing usage example",
        "Function 'info' missing Returns documentation",
        "Function 'info' missing usage example",
        "Function 'os_release_info' missing Returns documentation",
        "Function 'os_release_info' missing usage example",
        "Function 'lsb_release_info' missing Returns documentation",
        "Function 'lsb_release_info' missing usage example",
        "Function 'distro_release_info' missing Returns documentation",
        "Function 'distro_release_info' missing usage example",
        "Function 'uname_info' missing Returns documentation",
        "Function 'uname_info' missing usage example",
        "Function 'os_release_attr' missing usage example",
        "Function 'lsb_release_attr' missing usage example",
        "Function 'distro_release_attr' missing usage example",
        "Function 'uname_attr' missing usage example",
        "Class 'LinuxDistribution' docstring should reference relevant architecture documents",
        "Class 'LinuxDistribution' should include Architecture Context section linking to design documents",
        "Function 'linux_distribution' missing Returns documentation",
        "Function 'linux_distribution' missing usage example",
        "Function 'id' missing Returns documentation",
        "Function 'name' missing Returns documentation",
        "Function 'version' missing Returns documentation",
        "Function 'version_parts' missing Returns documentation",
        "Function 'version_parts' missing usage example",
        "Function 'major_version' missing Returns documentation",
        "Function 'major_version' missing usage example",
        "Function 'minor_version' missing Returns documentation",
        "Function 'minor_version' missing usage example",
        "Function 'build_number' missing Returns documentation",
        "Function 'like' missing Returns documentation",
        "Function 'like' missing usage example",
        "Function 'codename' missing Returns documentation",
        "Function 'info' missing Returns documentation",
        "Function 'info' missing usage example",
        "Function 'os_release_info' missing Returns documentation",
        "Function 'os_release_info' missing usage example",
        "Function 'lsb_release_info' missing Returns documentation",
        "Function 'lsb_release_info' missing usage example",
        "Function 'distro_release_info' missing Returns documentation",
        "Function 'distro_release_info' missing usage example",
        "Function 'uname_info' missing Returns documentation",
        "Function 'uname_info' missing usage example",
        "Function 'oslevel_info' missing Returns documentation",
        "Function 'os_release_attr' missing Returns documentation",
        "Function 'os_release_attr' missing usage example",
        "Function 'lsb_release_attr' missing Returns documentation",
        "Function 'lsb_release_attr' missing usage example",
        "Function 'distro_release_attr' missing Returns documentation",
        "Function 'distro_release_attr' missing usage example",
        "Function 'uname_attr' missing Returns documentation",
        "Function 'uname_attr' missing usage example",
        "Class 'cached_property' docstring should reference relevant architecture documents",
        "Class 'cached_property' should include Architecture Context section linking to design documents",
        "Class 'VersionDict' should have __init__ method",
        "Class 'InfoDict' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/idna/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/idna/codec.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ssdef 'Codec'",
        "Missing docstring for ssdef 'IncrementalEncoder'",
        "Missing docstring for ssdef 'IncrementalDecoder'",
        "Missing docstring for ssdef 'StreamWriter'",
        "Missing docstring for ssdef 'StreamReader'",
        "Missing docstring for ctiondef 'search_function'",
        "Missing docstring for ctiondef 'encode'",
        "Missing docstring for ctiondef 'decode'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Class 'Codec' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/idna/compat.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ctiondef 'ToASCII'",
        "Missing docstring for ctiondef 'ToUnicode'",
        "Missing docstring for ctiondef 'nameprep'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/idna/core.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'valid_label_length'",
        "Missing docstring for ctiondef 'valid_string_length'",
        "Missing docstring for ctiondef 'check_bidi'",
        "Missing docstring for ctiondef 'check_initial_combiner'",
        "Missing docstring for ctiondef 'check_hyphen_ok'",
        "Missing docstring for ctiondef 'check_nfc'",
        "Missing docstring for ctiondef 'valid_contextj'",
        "Missing docstring for ctiondef 'valid_contexto'",
        "Missing docstring for ctiondef 'check_label'",
        "Missing docstring for ctiondef 'alabel'",
        "Missing docstring for ctiondef 'ulabel'",
        "Function 'uts46_remap' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'encode'",
        "Missing docstring for ctiondef 'decode'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'IDNAError' docstring should reference relevant architecture documents",
        "Class 'IDNABidiError' docstring should reference relevant architecture documents",
        "Class 'InvalidCodepoint' docstring should reference relevant architecture documents",
        "Class 'InvalidCodepointContext' docstring should reference relevant architecture documents",
        "Function 'uts46_remap' missing Returns documentation",
        "Class 'IDNAError' should have __init__ method",
        "Class 'IDNABidiError' should have __init__ method",
        "Class 'InvalidCodepoint' should have __init__ method",
        "Class 'InvalidCodepointContext' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/idna/idnadata.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/idna/intranges.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'intranges_contain' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'intranges_from_list' missing Returns documentation",
        "Function 'intranges_from_list' missing usage example",
        "Function 'intranges_contain' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/idna/package_data.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/idna/uts46data.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.011428571428571399,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/msgpack/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'pack' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'pack' missing Returns documentation",
        "Function 'packb' missing Returns documentation",
        "Function 'unpack' missing Returns documentation",
        "Function 'unpack' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/msgpack/exceptions.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'BufferFull'",
        "Missing docstring for ssdef 'OutOfData'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'UnpackException' docstring should reference relevant architecture documents",
        "Class 'UnpackException' should include Architecture Context section linking to design documents",
        "Class 'FormatError' docstring should reference relevant architecture documents",
        "ssdef 'StackError' has very short docstring",
        "Class 'StackError' docstring should reference relevant architecture documents",
        "Class 'ExtraData' docstring should reference relevant architecture documents",
        "Class 'ExtraData' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/msgpack/ext.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__eq__' has parameters but no Args/Parameters documentation",
        "Function '__ne__' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ExtType' docstring should reference relevant architecture documents",
        "Class 'Timestamp' docstring should reference relevant architecture documents",
        "Class 'Timestamp' should include Architecture Context section linking to design documents",
        "Function 'from_bytes' missing usage example",
        "Function 'to_bytes' missing Returns documentation",
        "Function 'to_bytes' missing usage example",
        "Function 'from_unix' missing Returns documentation",
        "Function 'from_unix' missing usage example",
        "Function 'from_unix_nano' missing Returns documentation",
        "Function 'from_unix_nano' missing usage example",
        "Function 'to_unix_nano' missing usage example",
        "Function 'to_datetime' missing Returns documentation",
        "Function 'from_datetime' missing Returns documentation",
        "Class 'ExtType' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/msgpack/fallback.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'BytesIO'",
        "Missing docstring for ctiondef 'newlist_hint'",
        "Missing docstring for ctiondef 'feed'",
        "Missing docstring for ctiondef 'read_bytes'",
        "Missing docstring for ctiondef 'skip'",
        "Missing docstring for ctiondef 'unpack'",
        "Missing docstring for ctiondef 'read_array_header'",
        "Missing docstring for ctiondef 'read_map_header'",
        "Missing docstring for ctiondef 'tell'",
        "Missing docstring for ctiondef 'pack'",
        "Missing docstring for ctiondef 'pack_map_pairs'",
        "Missing docstring for ctiondef 'pack_array_header'",
        "Missing docstring for ctiondef 'pack_map_header'",
        "Missing docstring for ctiondef 'pack_ext_type'",
        "Missing docstring for ctiondef 'write'",
        "Missing docstring for ctiondef 'getvalue'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'unpackb' missing Returns documentation",
        "Function 'unpackb' missing usage example",
        "Class 'Unpacker' docstring should reference relevant architecture documents",
        "Class 'Unpacker' should include Architecture Context section linking to design documents",
        "Class 'Packer' docstring should reference relevant architecture documents",
        "Class 'Packer' should include Architecture Context section linking to design documents",
        "Function 'bytes' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'getbuffer' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/_elffile.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'ELFInvalid'",
        "Missing docstring for ssdef 'EIClass'",
        "Missing docstring for ssdef 'EIData'",
        "Missing docstring for ssdef 'EMachine'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ELFFile' docstring should reference relevant architecture documents",
        "Function 'interpreter' missing Returns documentation",
        "Class 'EIClass' should have __init__ method",
        "Class 'EIData' should have __init__ method",
        "Class 'EMachine' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/_manylinux.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'platform_tags' missing usage example",
        "Class '_GLibCVersion' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/_musllinux.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'platform_tags' missing usage example",
        "Class '_MuslVersion' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/_parser.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Node'",
        "Missing docstring for ssdef 'Variable'",
        "Missing docstring for ssdef 'Value'",
        "Missing docstring for ssdef 'Op'",
        "Missing docstring for ssdef 'ParsedRequirement'",
        "Missing docstring for ctiondef 'parse_requirement'",
        "Missing docstring for ctiondef 'parse_marker'",
        "Missing docstring for ctiondef 'process_env_var'",
        "Missing docstring for ctiondef 'process_python_str'",
        "Missing docstring for ctiondef 'serialize'",
        "Missing docstring for ctiondef 'serialize'",
        "Missing docstring for ctiondef 'serialize'",
        "Missing docstring for ctiondef 'serialize'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ParsedRequirement' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/_structures.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ssdef 'InfinityType'",
        "Missing docstring for ssdef 'NegativeInfinityType'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Using type hints but missing typing imports",
        "Class 'InfinityType' should have __init__ method",
        "Class 'NegativeInfinityType' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/_tokenizer.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Token'",
        "Function 'consume' has parameters but no Args/Parameters documentation",
        "Function 'check' has parameters but no Args/Parameters documentation",
        "Function 'expect' has parameters but no Args/Parameters documentation",
        "Function 'raise_syntax_error' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'enclosing_tokens'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ParserSyntaxError' docstring should reference relevant architecture documents",
        "Class 'Tokenizer' docstring should reference relevant architecture documents",
        "Class 'Tokenizer' should include Architecture Context section linking to design documents",
        "Function 'consume' missing Returns documentation",
        "Function 'check' missing Returns documentation",
        "Function 'check' missing usage example",
        "Function 'expect' missing Returns documentation",
        "Function 'read' missing Returns documentation",
        "Function 'raise_syntax_error' missing Returns documentation",
        "Class 'Token' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/licenses/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'canonicalize_license_expression'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'InvalidLicenseExpression' docstring should reference relevant architecture documents",
        "Class 'InvalidLicenseExpression' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/licenses/_spdx.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ssdef 'SPDXLicense'",
        "Missing docstring for ssdef 'SPDXException'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Class 'SPDXLicense' should have __init__ method",
        "Class 'SPDXException' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/markers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Environment'",
        "Missing docstring for ctiondef 'format_full_version'",
        "Missing docstring for ctiondef 'default_environment'",
        "Missing docstring for ssdef 'Marker'",
        "Function 'evaluate' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'InvalidMarker' docstring should reference relevant architecture documents",
        "Class 'UndefinedComparison' docstring should reference relevant architecture documents",
        "Class 'UndefinedEnvironmentName' docstring should reference relevant architecture documents",
        "Function 'evaluate' missing Returns documentation",
        "Function 'evaluate' missing usage example",
        "Class 'Environment' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/metadata.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'from_raw' has parameters but no Args/Parameters documentation",
        "Function 'from_email' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'InvalidMetadata' docstring should reference relevant architecture documents",
        "Class 'RawMetadata' docstring should reference relevant architecture documents",
        "Class 'RawMetadata' should include Architecture Context section linking to design documents",
        "Function 'parse_email' missing Returns documentation",
        "Function 'parse_email' missing usage example",
        "Class 'Metadata' docstring should reference relevant architecture documents",
        "Class 'Metadata' should include Architecture Context section linking to design documents",
        "Class 'ExceptionGroup' docstring should reference relevant architecture documents",
        "Class 'ExceptionGroup' should include Architecture Context section linking to design documents",
        "Function 'from_raw' missing Returns documentation",
        "Function 'from_raw' missing usage example",
        "Function 'from_email' missing Returns documentation",
        "Function 'from_email' missing usage example",
        "Class 'RawMetadata' should have __init__ method",
        "Class 'Metadata' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/requirements.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'InvalidRequirement' docstring should reference relevant architecture documents",
        "Class 'Requirement' docstring should reference relevant architecture documents",
        "Class 'Requirement' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/specifiers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'BaseSpecifier'",
        "Function 'contains' has parameters but no Args/Parameters documentation",
        "Function 'filter' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'prereleases'",
        "Missing docstring for ctiondef 'prereleases'",
        "Missing docstring for ctiondef 'prereleases'",
        "Missing docstring for ctiondef 'prereleases'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'InvalidSpecifier' docstring should reference relevant architecture documents",
        "Class 'InvalidSpecifier' should include Architecture Context section linking to design documents",
        "Class 'Specifier' docstring should reference relevant architecture documents",
        "Class 'Specifier' should include Architecture Context section linking to design documents",
        "Class 'SpecifierSet' docstring should reference relevant architecture documents",
        "Class 'SpecifierSet' should include Architecture Context section linking to design documents",
        "Function 'prereleases' missing Returns documentation",
        "Function 'prereleases' missing usage example",
        "Function 'prereleases' missing Returns documentation",
        "Function 'contains' missing Returns documentation",
        "Function 'filter' missing Returns documentation",
        "Function 'filter' missing usage example",
        "Function 'operator' missing Returns documentation",
        "Function 'version' missing Returns documentation",
        "Function 'contains' missing Returns documentation",
        "Function 'filter' missing Returns documentation",
        "Function 'contains' missing Returns documentation",
        "Function 'filter' missing Returns documentation",
        "Class 'BaseSpecifier' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/tags.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'cpython_tags' has parameters but no Args/Parameters documentation",
        "Function 'generic_tags' has parameters but no Args/Parameters documentation",
        "Function 'compatible_tags' has parameters but no Args/Parameters documentation",
        "Function 'mac_platforms' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'interpreter'",
        "Missing docstring for ctiondef 'abi'",
        "Missing docstring for ctiondef 'platform'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Tag' docstring should reference relevant architecture documents",
        "Class 'Tag' should include Architecture Context section linking to design documents",
        "Function 'parse_tag' missing Returns documentation",
        "Function 'parse_tag' missing usage example",
        "Function 'cpython_tags' missing Returns documentation",
        "Function 'cpython_tags' missing usage example",
        "Function 'generic_tags' missing Returns documentation",
        "Function 'generic_tags' missing usage example",
        "Function 'compatible_tags' missing Returns documentation",
        "Function 'compatible_tags' missing usage example",
        "Function 'mac_platforms' missing Returns documentation",
        "Function 'mac_platforms' missing usage example",
        "Function 'ios_platforms' missing Returns documentation",
        "Function 'ios_platforms' missing usage example",
        "Function 'platform_tags' missing Returns documentation",
        "Function 'interpreter_name' missing Returns documentation",
        "Function 'interpreter_name' missing usage example",
        "Function 'interpreter_version' missing Returns documentation",
        "Function 'sys_tags' missing Returns documentation",
        "Function 'sys_tags' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/utils.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'canonicalize_name'",
        "Missing docstring for ctiondef 'is_normalized_name'",
        "Missing docstring for ctiondef 'parse_wheel_filename'",
        "Missing docstring for ctiondef 'parse_sdist_filename'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'InvalidName' docstring should reference relevant architecture documents",
        "Class 'InvalidWheelFilename' docstring should reference relevant architecture documents",
        "Class 'InvalidSdistFilename' docstring should reference relevant architecture documents",
        "Function 'canonicalize_version' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/packaging/version.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'parse' missing Returns documentation",
        "Class 'InvalidVersion' docstring should reference relevant architecture documents",
        "Class 'InvalidVersion' should include Architecture Context section linking to design documents",
        "Class 'Version' docstring should reference relevant architecture documents",
        "Class 'Version' should include Architecture Context section linking to design documents",
        "Function 'epoch' missing Returns documentation",
        "Function 'release' missing Returns documentation",
        "Function 'pre' missing Returns documentation",
        "Function 'post' missing Returns documentation",
        "Function 'dev' missing Returns documentation",
        "Function 'local' missing Returns documentation",
        "Function 'public' missing Returns documentation",
        "Function 'base_version' missing Returns documentation",
        "Function 'is_prerelease' missing Returns documentation",
        "Function 'is_postrelease' missing Returns documentation",
        "Function 'is_devrelease' missing Returns documentation",
        "Function 'major' missing Returns documentation",
        "Function 'minor' missing Returns documentation",
        "Function 'micro' missing Returns documentation",
        "Function 'release' missing Returns documentation",
        "Class '_Version' should have __init__ method",
        "Class '_BaseVersion' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pkg_resources/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'register_loader_type' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_provider'",
        "Missing docstring for ctiondef 'get_provider'",
        "Function 'compatible_platforms' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_distribution'",
        "Missing docstring for ctiondef 'get_distribution'",
        "Function 'load_entry_point' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_entry_map'",
        "Missing docstring for ctiondef 'get_entry_map'",
        "Function 'get_entry_map' has parameters but no Args/Parameters documentation",
        "Function 'get_entry_info' has parameters but no Args/Parameters documentation",
        "Missing docstring for ssdef 'IMetadataProvider'",
        "Function 'evaluate_marker' has parameters but no Args/Parameters documentation",
        "Function 'register_finder' has parameters but no Args/Parameters documentation",
        "Function 'find_distributions' has parameters but no Args/Parameters documentation",
        "Function 'find_eggs_in_zip' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'find_nothing'",
        "Function 'find_on_path' has parameters but no Args/Parameters documentation",
        "Function 'dist_factory' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'distributions_from_metadata'",
        "Function 'register_namespace_handler' has parameters but no Args/Parameters documentation",
        "Function 'fixup_namespace_packages' has parameters but no Args/Parameters documentation",
        "Function 'file_ns_handler' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'null_ns_handler'",
        "Missing docstring for ctiondef 'normalize_path'",
        "Missing docstring for ctiondef 'normalize_path'",
        "Missing docstring for ssdef 'EggInfoDistribution'",
        "Missing docstring for ctiondef 'issue_warning'",
        "Missing docstring for ssdef 'Requirement'",
        "Missing docstring for ctiondef 'load_module'",
        "Missing docstring for ctiondef 'dist'",
        "Missing docstring for ctiondef 'req'",
        "Missing docstring for ctiondef 'report'",
        "Function 'with_context' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'required_by'",
        "Missing docstring for ctiondef 'req'",
        "Missing docstring for ctiondef 'requirers'",
        "Missing docstring for ctiondef 'requirers_str'",
        "Missing docstring for ctiondef 'report'",
        "Function 'has_metadata' has parameters but no Args/Parameters documentation",
        "Function 'get_metadata' has parameters but no Args/Parameters documentation",
        "Function 'get_metadata_lines' has parameters but no Args/Parameters documentation",
        "Function 'metadata_isdir' has parameters but no Args/Parameters documentation",
        "Function 'metadata_listdir' has parameters but no Args/Parameters documentation",
        "Function 'run_script' has parameters but no Args/Parameters documentation",
        "Function 'get_resource_filename' has parameters but no Args/Parameters documentation",
        "Function 'get_resource_stream' has parameters but no Args/Parameters documentation",
        "Function 'get_resource_string' has parameters but no Args/Parameters documentation",
        "Function 'has_resource' has parameters but no Args/Parameters documentation",
        "Function 'resource_isdir' has parameters but no Args/Parameters documentation",
        "Function 'resource_listdir' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'add_entry' has parameters but no Args/Parameters documentation",
        "Function '__contains__' has parameters but no Args/Parameters documentation",
        "Function 'find' has parameters but no Args/Parameters documentation",
        "Function 'iter_entry_points' has parameters but no Args/Parameters documentation",
        "Function 'run_script' has parameters but no Args/Parameters documentation",
        "Function 'add' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'resolve'",
        "Missing docstring for ctiondef 'resolve'",
        "Missing docstring for ctiondef 'resolve'",
        "Function 'resolve' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'find_plugins'",
        "Missing docstring for ctiondef 'find_plugins'",
        "Missing docstring for ctiondef 'find_plugins'",
        "Function 'find_plugins' has parameters but no Args/Parameters documentation",
        "Function 'subscribe' has parameters but no Args/Parameters documentation",
        "Function 'markers_pass' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'can_add' has parameters but no Args/Parameters documentation",
        "Function 'remove' has parameters but no Args/Parameters documentation",
        "Function 'scan' has parameters but no Args/Parameters documentation",
        "Function '__getitem__' has parameters but no Args/Parameters documentation",
        "Function 'add' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'best_match'",
        "Missing docstring for ctiondef 'best_match'",
        "Function 'best_match' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'obtain'",
        "Missing docstring for ctiondef 'obtain'",
        "Missing docstring for ctiondef 'obtain'",
        "Function 'obtain' has parameters but no Args/Parameters documentation",
        "Function '__iadd__' has parameters but no Args/Parameters documentation",
        "Function '__add__' has parameters but no Args/Parameters documentation",
        "Function 'resource_exists' has parameters but no Args/Parameters documentation",
        "Function 'resource_isdir' has parameters but no Args/Parameters documentation",
        "Function 'resource_filename' has parameters but no Args/Parameters documentation",
        "Function 'resource_stream' has parameters but no Args/Parameters documentation",
        "Function 'resource_string' has parameters but no Args/Parameters documentation",
        "Function 'resource_listdir' has parameters but no Args/Parameters documentation",
        "Function 'get_cache_path' has parameters but no Args/Parameters documentation",
        "Function 'postprocess' has parameters but no Args/Parameters documentation",
        "Function 'set_extraction_path' has parameters but no Args/Parameters documentation",
        "Function 'cleanup_resources' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_resource_filename'",
        "Missing docstring for ctiondef 'get_resource_stream'",
        "Missing docstring for ctiondef 'get_resource_string'",
        "Missing docstring for ctiondef 'has_resource'",
        "Missing docstring for ctiondef 'has_metadata'",
        "Missing docstring for ctiondef 'get_metadata'",
        "Missing docstring for ctiondef 'get_metadata_lines'",
        "Missing docstring for ctiondef 'resource_isdir'",
        "Missing docstring for ctiondef 'metadata_isdir'",
        "Missing docstring for ctiondef 'resource_listdir'",
        "Missing docstring for ctiondef 'metadata_listdir'",
        "Missing docstring for ctiondef 'run_script'",
        "Missing docstring for ctiondef 'get_resource_stream'",
        "Function 'build' has parameters but no Args/Parameters documentation",
        "Missing docstring for ssdef 'manifest_mod'",
        "Function 'load' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'zipinfo'",
        "Missing docstring for ctiondef 'get_resource_filename'",
        "Missing docstring for ctiondef 'has_metadata'",
        "Missing docstring for ctiondef 'get_metadata'",
        "Missing docstring for ctiondef 'get_metadata_lines'",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'load'",
        "Missing docstring for ctiondef 'load'",
        "Function 'load' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'require'",
        "Function 'parse' has parameters but no Args/Parameters documentation",
        "Function 'parse_group' has parameters but no Args/Parameters documentation",
        "Function 'parse_map' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'is_version_line'",
        "Missing docstring for ctiondef 'from_location'",
        "Missing docstring for ctiondef 'hashcmp'",
        "Missing docstring for ctiondef 'key'",
        "Missing docstring for ctiondef 'parsed_version'",
        "Missing docstring for ctiondef 'version'",
        "Function 'requires' has parameters but no Args/Parameters documentation",
        "Function 'activate' has parameters but no Args/Parameters documentation",
        "Function '__getattr__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'from_filename'",
        "Function 'load_entry_point' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_entry_map'",
        "Missing docstring for ctiondef 'get_entry_map'",
        "Function 'get_entry_map' has parameters but no Args/Parameters documentation",
        "Function 'get_entry_info' has parameters but no Args/Parameters documentation",
        "Function 'insert_on' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'check_version_conflict'",
        "Missing docstring for ctiondef 'has_version'",
        "Missing docstring for ctiondef 'extras'",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'parse'",
        "Missing docstring for ctiondef 'reqs_for_extra'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PEP440Warning' docstring should reference relevant architecture documents",
        "Function 'get_supported_platform' missing Returns documentation",
        "Function 'get_supported_platform' missing usage example",
        "Class 'ResolutionError' docstring should reference relevant architecture documents",
        "Class 'VersionConflict' docstring should reference relevant architecture documents",
        "Class 'VersionConflict' should include Architecture Context section linking to design documents",
        "Class 'ContextualVersionConflict' docstring should reference relevant architecture documents",
        "Class 'ContextualVersionConflict' should include Architecture Context section linking to design documents",
        "Class 'DistributionNotFound' docstring should reference relevant architecture documents",
        "Class 'UnknownExtra' docstring should reference relevant architecture documents",
        "Function 'register_loader_type' missing Returns documentation",
        "Function 'register_loader_type' missing usage example",
        "Function 'get_provider' missing Returns documentation",
        "Function 'get_build_platform' missing Returns documentation",
        "Function 'get_build_platform' missing usage example",
        "Function 'compatible_platforms' missing Returns documentation",
        "Function 'compatible_platforms' missing usage example",
        "Function 'get_distribution' missing Returns documentation",
        "Function 'load_entry_point' missing Returns documentation",
        "Function 'get_entry_map' missing Returns documentation",
        "Function 'get_entry_info' missing Returns documentation",
        "Class 'IResourceProvider' docstring should reference relevant architecture documents",
        "Class 'WorkingSet' docstring should reference relevant architecture documents",
        "Class 'Environment' docstring should reference relevant architecture documents",
        "Class 'ExtractionError' docstring should reference relevant architecture documents",
        "Class 'ExtractionError' should include Architecture Context section linking to design documents",
        "Class 'ResourceManager' docstring should reference relevant architecture documents",
        "Function 'get_default_cache' missing Returns documentation",
        "Function 'get_default_cache' missing usage example",
        "Function 'safe_name' missing Returns documentation",
        "Function 'safe_name' missing usage example",
        "Function 'safe_version' missing Returns documentation",
        "Function 'safe_extra' missing Returns documentation",
        "Function 'safe_extra' missing usage example",
        "Function 'to_filename' missing Returns documentation",
        "Function 'to_filename' missing usage example",
        "Function 'invalid_marker' missing Returns documentation",
        "Function 'evaluate_marker' missing Returns documentation",
        "Function 'evaluate_marker' missing usage example",
        "Class 'NullProvider' docstring should reference relevant architecture documents",
        "Class 'EggProvider' docstring should reference relevant architecture documents",
        "Class 'DefaultProvider' docstring should reference relevant architecture documents",
        "Class 'EmptyProvider' docstring should reference relevant architecture documents",
        "Class 'ZipManifests' docstring should reference relevant architecture documents",
        "Class 'MemoizedZipManifests' docstring should reference relevant architecture documents",
        "Class 'ZipProvider' docstring should reference relevant architecture documents",
        "Class 'FileMetadata' docstring should reference relevant architecture documents",
        "Class 'FileMetadata' should include Architecture Context section linking to design documents",
        "Class 'PathMetadata' docstring should reference relevant architecture documents",
        "Class 'PathMetadata' should include Architecture Context section linking to design documents",
        "Class 'EggMetadata' docstring should reference relevant architecture documents",
        "Function 'register_finder' missing Returns documentation",
        "Function 'register_finder' missing usage example",
        "Function 'find_distributions' missing Returns documentation",
        "Function 'find_eggs_in_zip' missing Returns documentation",
        "Function 'find_on_path' missing Returns documentation",
        "Function 'dist_factory' missing Returns documentation",
        "Class 'NoDists' docstring should reference relevant architecture documents",
        "Function 'safe_listdir' missing Returns documentation",
        "Function 'non_empty_lines' missing Returns documentation",
        "Function 'resolve_egg_link' missing Returns documentation",
        "Function 'register_namespace_handler' missing Returns documentation",
        "Function 'register_namespace_handler' missing usage example",
        "Function 'declare_namespace' missing Returns documentation",
        "Function 'fixup_namespace_packages' missing Returns documentation",
        "Function 'file_ns_handler' missing Returns documentation",
        "Function 'normalize_path' missing Returns documentation",
        "Class 'EntryPoint' docstring should reference relevant architecture documents",
        "Class 'Distribution' docstring should reference relevant architecture documents",
        "Class 'DistInfoDistribution' docstring should reference relevant architecture documents",
        "Function 'parse_requirements' missing Returns documentation",
        "Function 'parse_requirements' missing usage example",
        "Class 'RequirementParseError' docstring should reference relevant architecture documents",
        "Function 'ensure_directory' missing Returns documentation",
        "Function 'split_sections' missing Returns documentation",
        "Function 'split_sections' missing usage example",
        "Class 'PkgResourcesDeprecationWarning' docstring should reference relevant architecture documents",
        "Class 'PkgResourcesDeprecationWarning' should include Architecture Context section linking to design documents",
        "Function 'with_context' missing Returns documentation",
        "Function 'has_metadata' missing Returns documentation",
        "Function 'get_metadata' missing Returns documentation",
        "Function 'get_metadata_lines' missing Returns documentation",
        "Function 'get_metadata_lines' missing usage example",
        "Function 'metadata_isdir' missing Returns documentation",
        "Function 'metadata_listdir' missing Returns documentation",
        "Function 'run_script' missing Returns documentation",
        "Function 'get_resource_filename' missing Returns documentation",
        "Function 'get_resource_stream' missing Returns documentation",
        "Function 'get_resource_string' missing Returns documentation",
        "Function 'has_resource' missing Returns documentation",
        "Function 'resource_isdir' missing Returns documentation",
        "Function 'resource_listdir' missing Returns documentation",
        "Function 'add_entry' missing Returns documentation",
        "Function 'add_entry' missing usage example",
        "Function 'find' missing Returns documentation",
        "Function 'find' missing usage example",
        "Function 'iter_entry_points' missing Returns documentation",
        "Function 'iter_entry_points' missing usage example",
        "Function 'run_script' missing Returns documentation",
        "Function 'add' missing Returns documentation",
        "Function 'add' missing usage example",
        "Function 'resolve' missing Returns documentation",
        "Function 'resolve' missing usage example",
        "Function 'find_plugins' missing Returns documentation",
        "Function 'find_plugins' missing usage example",
        "Function 'require' missing Returns documentation",
        "Function 'require' missing usage example",
        "Function 'subscribe' missing Returns documentation",
        "Function 'subscribe' missing usage example",
        "Function 'markers_pass' missing Returns documentation",
        "Function 'markers_pass' missing usage example",
        "Function 'can_add' missing Returns documentation",
        "Function 'can_add' missing usage example",
        "Function 'remove' missing Returns documentation",
        "Function 'scan' missing Returns documentation",
        "Function 'scan' missing usage example",
        "Function 'add' missing Returns documentation",
        "Function 'best_match' missing Returns documentation",
        "Function 'best_match' missing usage example",
        "Function 'obtain' missing Returns documentation",
        "Function 'obtain' missing usage example",
        "Function 'resource_exists' missing Returns documentation",
        "Function 'resource_isdir' missing Returns documentation",
        "Function 'resource_filename' missing Returns documentation",
        "Function 'resource_stream' missing Returns documentation",
        "Function 'resource_string' missing Returns documentation",
        "Function 'resource_listdir' missing Returns documentation",
        "Function 'extraction_error' missing Returns documentation",
        "Function 'get_cache_path' missing Returns documentation",
        "Function 'get_cache_path' missing usage example",
        "Function 'postprocess' missing Returns documentation",
        "Function 'postprocess' missing usage example",
        "Function 'set_extraction_path' missing Returns documentation",
        "Function 'set_extraction_path' missing usage example",
        "Function 'cleanup_resources' missing Returns documentation",
        "Function 'cleanup_resources' missing usage example",
        "Function 'build' missing Returns documentation",
        "Function 'build' missing usage example",
        "Function 'load' missing Returns documentation",
        "Function 'safe_sys_path_index' missing Returns documentation",
        "Function 'position_in_sys_path' missing Returns documentation",
        "Function 'load' missing Returns documentation",
        "Function 'resolve' missing Returns documentation",
        "Function 'parse' missing Returns documentation",
        "Function 'parse' missing usage example",
        "Function 'parse_group' missing Returns documentation",
        "Function 'parse_map' missing Returns documentation",
        "Function 'requires' missing Returns documentation",
        "Function 'activate' missing Returns documentation",
        "Function 'egg_name' missing Returns documentation",
        "Function 'as_requirement' missing Returns documentation",
        "Function 'load_entry_point' missing Returns documentation",
        "Function 'get_entry_map' missing Returns documentation",
        "Function 'get_entry_info' missing Returns documentation",
        "Function 'insert_on' missing Returns documentation",
        "Function 'insert_on' missing usage example",
        "Function 'clone' missing Returns documentation",
        "Class 'ResolutionError' should have __init__ method",
        "Class 'VersionConflict' should have __init__ method",
        "Class 'ContextualVersionConflict' should have __init__ method",
        "Class 'DistributionNotFound' should have __init__ method",
        "Class 'IMetadataProvider' should have __init__ method",
        "Class 'IResourceProvider' should have __init__ method",
        "Class '_ReqExtras' should have __init__ method",
        "Class 'ExtractionError' should have __init__ method",
        "Class 'DefaultProvider' should have __init__ method",
        "Class 'ZipManifests' should have __init__ method",
        "Class 'MemoizedZipManifests' should have __init__ method",
        "Class 'NoDists' should have __init__ method",
        "Class 'DistInfoDistribution' should have __init__ method",
        "Class 'manifest_mod' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/platformdirs/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'user_data_dir' missing usage example",
        "Function 'site_data_dir' missing usage example",
        "Function 'user_config_dir' missing usage example",
        "Function 'site_config_dir' missing usage example",
        "Function 'user_cache_dir' missing usage example",
        "Function 'site_cache_dir' missing usage example",
        "Function 'user_state_dir' missing usage example",
        "Function 'user_log_dir' missing usage example",
        "Function 'user_runtime_dir' missing usage example",
        "Function 'site_runtime_dir' missing usage example",
        "Function 'user_data_path' missing usage example",
        "Function 'site_data_path' missing usage example",
        "Function 'user_config_path' missing usage example",
        "Function 'site_config_path' missing usage example",
        "Function 'site_cache_path' missing usage example",
        "Function 'user_cache_path' missing usage example",
        "Function 'user_state_path' missing usage example",
        "Function 'user_log_path' missing usage example",
        "Function 'user_runtime_path' missing usage example",
        "Function 'site_runtime_path' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/platformdirs/__main__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'main' missing Returns documentation",
        "Using type hints but missing typing imports"
      ],
      "score": 0.21428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/platformdirs/android.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Android' docstring should reference relevant architecture documents",
        "Class 'Android' should include Architecture Context section linking to design documents",
        "Function 'user_config_dir' missing usage example",
        "Function 'user_cache_dir' missing usage example",
        "Function 'user_log_dir' missing usage example",
        "Function 'user_runtime_dir' missing usage example",
        "Class 'Android' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/platformdirs/api.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PlatformDirsABC' docstring should reference relevant architecture documents",
        "Function 'iter_config_dirs' missing Returns documentation",
        "Function 'iter_data_dirs' missing Returns documentation",
        "Function 'iter_cache_dirs' missing Returns documentation",
        "Function 'iter_runtime_dirs' missing Returns documentation",
        "Function 'iter_config_paths' missing Returns documentation",
        "Function 'iter_data_paths' missing Returns documentation",
        "Function 'iter_cache_paths' missing Returns documentation",
        "Function 'iter_runtime_paths' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/platformdirs/macos.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'MacOS' docstring should reference relevant architecture documents",
        "Class 'MacOS' should include Architecture Context section linking to design documents",
        "Function 'site_data_dir' missing usage example",
        "Function 'site_data_path' missing usage example",
        "Function 'site_cache_dir' missing usage example",
        "Function 'site_cache_path' missing usage example",
        "Function 'user_runtime_dir' missing usage example",
        "Class 'MacOS' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/platformdirs/unix.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'getuid'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Unix' docstring should reference relevant architecture documents",
        "Class 'Unix' should include Architecture Context section linking to design documents",
        "Function 'user_data_dir' missing usage example",
        "Function 'site_data_dir' missing usage example",
        "Function 'user_config_dir' missing usage example",
        "Function 'site_config_dir' missing usage example",
        "Function 'user_cache_dir' missing usage example",
        "Function 'user_state_dir' missing usage example",
        "Function 'user_log_dir' missing usage example",
        "Function 'user_runtime_dir' missing usage example",
        "Function 'site_runtime_dir' missing usage example",
        "Function 'site_data_path' missing usage example",
        "Function 'site_config_path' missing usage example",
        "Function 'site_cache_path' missing usage example",
        "Function 'iter_config_dirs' missing Returns documentation",
        "Function 'iter_data_dirs' missing Returns documentation",
        "Class 'Unix' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/platformdirs/version.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/platformdirs/windows.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Windows' docstring should reference relevant architecture documents",
        "Class 'Windows' should include Architecture Context section linking to design documents",
        "Function 'get_win_folder_from_env_vars' missing Returns documentation",
        "Function 'get_win_folder_if_csidl_name_not_env_var' missing Returns documentation",
        "Function 'get_win_folder_from_registry' missing Returns documentation",
        "Function 'get_win_folder_from_registry' missing usage example",
        "Function 'get_win_folder_via_ctypes' missing Returns documentation",
        "Function 'user_data_dir' missing usage example",
        "Function 'user_cache_dir' missing usage example",
        "Function 'user_log_dir' missing usage example",
        "Function 'user_runtime_dir' missing usage example",
        "Class 'Windows' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'lex' has parameters but no Args/Parameters documentation",
        "Function 'format' has parameters but no Args/Parameters documentation",
        "Function 'highlight' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'lex' missing Returns documentation",
        "Function 'lex' missing usage example",
        "Function 'format' missing Returns documentation",
        "Function 'format' missing usage example",
        "Function 'highlight' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/__main__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/cmdline.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'main_inner'",
        "Missing docstring for ssdef 'HelpFormatter'",
        "Missing docstring for ctiondef 'is_only_option'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'main' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/console.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'reset_color'",
        "Missing docstring for ctiondef 'colorize'",
        "Function 'ansiformat' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'ansiformat' missing Returns documentation",
        "Function 'ansiformat' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/filter.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'apply_filters' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'filter'",
        "Missing docstring for ctiondef 'filter'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'apply_filters' missing Returns documentation",
        "Function 'apply_filters' missing usage example",
        "Function 'simplefilter' missing Returns documentation",
        "Function 'simplefilter' missing usage example",
        "Class 'Filter' docstring should reference relevant architecture documents",
        "Class 'FunctionFilter' docstring should reference relevant architecture documents",
        "Class 'FunctionFilter' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/filters/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'ErrorToken'",
        "Missing docstring for ctiondef 'filter'",
        "Missing docstring for ctiondef 'filter'",
        "Missing docstring for ctiondef 'filter'",
        "Missing docstring for ctiondef 'filter'",
        "Missing docstring for ctiondef 'filter'",
        "Missing docstring for ctiondef 'filter'",
        "Missing docstring for ctiondef 'gobble'",
        "Missing docstring for ctiondef 'filter'",
        "Missing docstring for ctiondef 'filter'",
        "Missing docstring for ctiondef 'replacefunc'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'find_filter_class' missing Returns documentation",
        "Function 'get_filter_by_name' missing Returns documentation",
        "Function 'get_filter_by_name' missing usage example",
        "Function 'get_all_filters' missing Returns documentation",
        "Class 'CodeTagFilter' docstring should reference relevant architecture documents",
        "Class 'CodeTagFilter' should include Architecture Context section linking to design documents",
        "Class 'SymbolFilter' docstring should reference relevant architecture documents",
        "Class 'SymbolFilter' should include Architecture Context section linking to design documents",
        "Class 'KeywordCaseFilter' docstring should reference relevant architecture documents",
        "Class 'KeywordCaseFilter' should include Architecture Context section linking to design documents",
        "Class 'NameHighlightFilter' docstring should reference relevant architecture documents",
        "Class 'NameHighlightFilter' should include Architecture Context section linking to design documents",
        "Class 'RaiseOnErrorTokenFilter' docstring should reference relevant architecture documents",
        "Class 'RaiseOnErrorTokenFilter' should include Architecture Context section linking to design documents",
        "Class 'VisibleWhitespaceFilter' docstring should reference relevant architecture documents",
        "Class 'VisibleWhitespaceFilter' should include Architecture Context section linking to design documents",
        "Class 'GobbleFilter' docstring should reference relevant architecture documents",
        "Class 'GobbleFilter' should include Architecture Context section linking to design documents",
        "Class 'TokenMergeFilter' docstring should reference relevant architecture documents",
        "Class 'TokenMergeFilter' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatter.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get_style_defs' has parameters but no Args/Parameters documentation",
        "Function 'format' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Formatter' docstring should reference relevant architecture documents",
        "Class 'Formatter' should include Architecture Context section linking to design documents",
        "Function 'get_style_defs' missing Returns documentation",
        "Function 'get_style_defs' missing usage example",
        "Function 'format' missing Returns documentation",
        "Function 'format' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatters/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'load_formatter_from_file' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_all_formatters' missing Returns documentation",
        "Function 'find_formatter_class' missing Returns documentation",
        "Function 'get_formatter_by_name' missing Returns documentation",
        "Function 'get_formatter_by_name' missing usage example",
        "Function 'load_formatter_from_file' missing Returns documentation",
        "Function 'load_formatter_from_file' missing usage example",
        "Function 'get_formatter_for_filename' missing Returns documentation",
        "Function 'get_formatter_for_filename' missing usage example",
        "Class '_automodule' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatters/_mapping.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [],
      "score": 0.1285714285714285,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatters/bbcode.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'format_unencoded'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BBCodeFormatter' docstring should reference relevant architecture documents",
        "Class 'BBCodeFormatter' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatters/groff.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'format_unencoded'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'GroffFormatter' docstring should reference relevant architecture documents",
        "Class 'GroffFormatter' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatters/html.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'escape_html' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'webify'",
        "Function 'get_style_defs' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_token_style_defs'",
        "Missing docstring for ctiondef 'get_background_style_defs'",
        "Missing docstring for ctiondef 'get_linenos_style_defs'",
        "Missing docstring for ctiondef 'get_css_prefix'",
        "Function 'wrap' has parameters but no Args/Parameters documentation",
        "Function 'format_unencoded' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'prefix'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'escape_html' missing Returns documentation",
        "Class 'HtmlFormatter' docstring should reference relevant architecture documents",
        "Class 'HtmlFormatter' should include Architecture Context section linking to design documents",
        "Function 'get_style_defs' missing Returns documentation",
        "Function 'get_style_defs' missing usage example",
        "Function 'wrap' missing Returns documentation",
        "Function 'wrap' missing usage example",
        "Function 'format_unencoded' missing Returns documentation",
        "Function 'format_unencoded' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatters/img.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get_text_size' has parameters but no Args/Parameters documentation",
        "Function 'get_font' has parameters but no Args/Parameters documentation",
        "Function 'get_style' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_style_defs'",
        "Function 'format' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PilNotAvailable' docstring should reference relevant architecture documents",
        "Class 'FontNotFound' docstring should reference relevant architecture documents",
        "Class 'FontManager' docstring should reference relevant architecture documents",
        "Class 'ImageFormatter' docstring should reference relevant architecture documents",
        "Class 'ImageFormatter' should include Architecture Context section linking to design documents",
        "Class 'GifImageFormatter' docstring should reference relevant architecture documents",
        "Class 'GifImageFormatter' should include Architecture Context section linking to design documents",
        "Class 'JpgImageFormatter' docstring should reference relevant architecture documents",
        "Class 'JpgImageFormatter' should include Architecture Context section linking to design documents",
        "Class 'BmpImageFormatter' docstring should reference relevant architecture documents",
        "Class 'BmpImageFormatter' should include Architecture Context section linking to design documents",
        "Function 'get_char_size' missing Returns documentation",
        "Function 'get_text_size' missing Returns documentation",
        "Function 'get_font' missing Returns documentation",
        "Function 'get_style' missing Returns documentation",
        "Function 'format' missing Returns documentation",
        "Function 'format' missing usage example",
        "Class 'GifImageFormatter' should have __init__ method",
        "Class 'JpgImageFormatter' should have __init__ method",
        "Class 'BmpImageFormatter' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatters/irc.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'ircformat'",
        "Missing docstring for ctiondef 'format_unencoded'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'IRCFormatter' docstring should reference relevant architecture documents",
        "Class 'IRCFormatter' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatters/latex.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'escape_tex'",
        "Function 'get_style_defs' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'format_unencoded'",
        "Missing docstring for ctiondef 'get_tokens_unprocessed'",
        "Missing docstring for ctiondef 'rgbcolor'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'LatexFormatter' docstring should reference relevant architecture documents",
        "Class 'LatexFormatter' should include Architecture Context section linking to design documents",
        "Class 'LatexEmbeddedLexer' docstring should reference relevant architecture documents",
        "Class 'LatexEmbeddedLexer' should include Architecture Context section linking to design documents",
        "Function 'get_style_defs' missing Returns documentation",
        "Function 'get_style_defs' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatters/other.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'format'",
        "Missing docstring for ctiondef 'format'",
        "Missing docstring for ctiondef 'format'",
        "Missing docstring for ctiondef 'write'",
        "Missing docstring for ctiondef 'flush'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'NullFormatter' docstring should reference relevant architecture documents",
        "Class 'RawTokenFormatter' docstring should reference relevant architecture documents",
        "Class 'RawTokenFormatter' should include Architecture Context section linking to design documents",
        "Class 'TestcaseFormatter' docstring should reference relevant architecture documents",
        "Class 'NullFormatter' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatters/pangomarkup.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'escape_special_chars' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'format_unencoded'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'escape_special_chars' missing Returns documentation",
        "Class 'PangoMarkupFormatter' docstring should reference relevant architecture documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatters/rtf.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'hex_to_rtf_color'",
        "Missing docstring for ctiondef 'format_unencoded'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'RtfFormatter' docstring should reference relevant architecture documents",
        "Class 'RtfFormatter' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatters/svg.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'format_unencoded' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'escape_html' missing Returns documentation",
        "Class 'SvgFormatter' docstring should reference relevant architecture documents",
        "Class 'SvgFormatter' should include Architecture Context section linking to design documents",
        "Function 'format_unencoded' missing Returns documentation",
        "Function 'format_unencoded' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatters/terminal.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'format'",
        "Missing docstring for ctiondef 'format_unencoded'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'TerminalFormatter' docstring should reference relevant architecture documents",
        "Class 'TerminalFormatter' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/formatters/terminal256.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'EscapeSequence'",
        "Missing docstring for ctiondef 'escape'",
        "Missing docstring for ctiondef 'color_string'",
        "Missing docstring for ctiondef 'true_color_string'",
        "Missing docstring for ctiondef 'reset_string'",
        "Missing docstring for ctiondef 'format'",
        "Missing docstring for ctiondef 'format_unencoded'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Terminal256Formatter' docstring should reference relevant architecture documents",
        "Class 'Terminal256Formatter' should include Architecture Context section linking to design documents",
        "Class 'TerminalTrueColorFormatter' docstring should reference relevant architecture documents",
        "Class 'TerminalTrueColorFormatter' should include Architecture Context section linking to design documents",
        "Class 'TerminalTrueColorFormatter' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/lexer.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'do_insertions' has parameters but no Args/Parameters documentation",
        "Function 'add_filter' has parameters but no Args/Parameters documentation",
        "Function 'get_tokens' has parameters but no Args/Parameters documentation",
        "Function 'get_tokens_unprocessed' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_tokens_unprocessed'",
        "Missing docstring for ctiondef 'start'",
        "Missing docstring for ctiondef 'end'",
        "Missing docstring for ctiondef 'group'",
        "Missing docstring for ctiondef 'groups'",
        "Missing docstring for ctiondef 'groupdict'",
        "Missing docstring for ctiondef 'callback'",
        "Missing docstring for ctiondef 'get'",
        "Function 'process_tokendef' has parameters but no Args/Parameters documentation",
        "Function 'get_tokens_unprocessed' has parameters but no Args/Parameters documentation",
        "Function 'get_tokens_unprocessed' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_tokens_unprocessed'",
        "Missing docstring for ctiondef 'streamer'",
        "Missing docstring for ctiondef 'callback'",
        "Missing docstring for ctiondef 'callback'",
        "Missing docstring for ctiondef 'match_func'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'LexerMeta' docstring should reference relevant architecture documents",
        "Class 'LexerMeta' should include Architecture Context section linking to design documents",
        "Class 'Lexer' docstring should reference relevant architecture documents",
        "Class 'Lexer' should include Architecture Context section linking to design documents",
        "Class 'DelegatingLexer' docstring should reference relevant architecture documents",
        "Class 'DelegatingLexer' should include Architecture Context section linking to design documents",
        "Class 'include' docstring should reference relevant architecture documents",
        "Class 'combined' docstring should reference relevant architecture documents",
        "Function 'bygroups' missing Returns documentation",
        "Function 'using' missing Returns documentation",
        "Function 'using' missing usage example",
        "Class 'default' docstring should reference relevant architecture documents",
        "Class 'default' should include Architecture Context section linking to design documents",
        "Class 'words' docstring should reference relevant architecture documents",
        "Class 'words' should include Architecture Context section linking to design documents",
        "Class 'RegexLexerMeta' docstring should reference relevant architecture documents",
        "Class 'RegexLexerMeta' should include Architecture Context section linking to design documents",
        "Class 'RegexLexer' docstring should reference relevant architecture documents",
        "Class 'RegexLexer' should include Architecture Context section linking to design documents",
        "Class 'LexerContext' docstring should reference relevant architecture documents",
        "Class 'ExtendedRegexLexer' docstring should reference relevant architecture documents",
        "Function 'do_insertions' missing Returns documentation",
        "Function 'do_insertions' missing usage example",
        "Class 'ProfilingRegexLexerMeta' docstring should reference relevant architecture documents",
        "Class 'ProfilingRegexLexer' docstring should reference relevant architecture documents",
        "Function 'add_filter' missing Returns documentation",
        "Function 'analyse_text' missing Returns documentation",
        "Function 'analyse_text' missing usage example",
        "Function 'get_tokens' missing Returns documentation",
        "Function 'get_tokens' missing usage example",
        "Function 'get_tokens_unprocessed' missing Returns documentation",
        "Function 'get_tokens_unprocessed' missing usage example",
        "Function 'process_tokendef' missing Returns documentation",
        "Function 'get_tokendefs' missing Returns documentation",
        "Function 'get_tokendefs' missing usage example",
        "Function 'get_tokens_unprocessed' missing Returns documentation",
        "Function 'get_tokens_unprocessed' missing Returns documentation",
        "Function 'get_tokens_unprocessed' missing usage example",
        "Class 'LexerMeta' should have __init__ method",
        "Class 'include' should have __init__ method",
        "Class '_inherit' should have __init__ method",
        "Class 'RegexLexerMeta' should have __init__ method",
        "Class 'RegexLexer' should have __init__ method",
        "Class 'ExtendedRegexLexer' should have __init__ method",
        "Class 'ProfilingRegexLexerMeta' should have __init__ method",
        "Class 'ProfilingRegexLexer' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/lexers/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'load_lexer_from_file' has parameters but no Args/Parameters documentation",
        "Function 'find_lexer_class_for_filename' has parameters but no Args/Parameters documentation",
        "Function 'get_lexer_for_filename' has parameters but no Args/Parameters documentation",
        "Function 'guess_lexer_for_filename' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_rating'",
        "Missing docstring for ctiondef 'type_sort'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_all_lexers' missing Returns documentation",
        "Function 'get_all_lexers' missing usage example",
        "Function 'find_lexer_class' missing Returns documentation",
        "Function 'find_lexer_class_by_name' missing Returns documentation",
        "Function 'find_lexer_class_by_name' missing usage example",
        "Function 'get_lexer_by_name' missing Returns documentation",
        "Function 'get_lexer_by_name' missing usage example",
        "Function 'load_lexer_from_file' missing Returns documentation",
        "Function 'load_lexer_from_file' missing usage example",
        "Function 'find_lexer_class_for_filename' missing Returns documentation",
        "Function 'find_lexer_class_for_filename' missing usage example",
        "Function 'get_lexer_for_filename' missing Returns documentation",
        "Function 'get_lexer_for_filename' missing usage example",
        "Function 'get_lexer_for_mimetype' missing Returns documentation",
        "Function 'get_lexer_for_mimetype' missing usage example",
        "Function 'guess_lexer_for_filename' missing Returns documentation",
        "Function 'guess_lexer_for_filename' missing usage example",
        "Function 'guess_lexer' missing Returns documentation",
        "Function 'guess_lexer' missing usage example",
        "Class '_automodule' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/lexers/_mapping.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/lexers/python.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'innerstring_rules'",
        "Missing docstring for ctiondef 'fstring_rules'",
        "Missing docstring for ctiondef 'analyse_text'",
        "Missing docstring for ctiondef 'innerstring_rules'",
        "Missing docstring for ctiondef 'analyse_text'",
        "Missing docstring for ctiondef 'get_tokens_unprocessed'",
        "Missing docstring for ctiondef 'analyse_text'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PythonLexer' docstring should reference relevant architecture documents",
        "Class 'PythonLexer' should include Architecture Context section linking to design documents",
        "Class 'Python2Lexer' docstring should reference relevant architecture documents",
        "Class 'Python2Lexer' should include Architecture Context section linking to design documents",
        "Class 'PythonConsoleLexer' docstring should reference relevant architecture documents",
        "Class 'PythonConsoleLexer' should include Architecture Context section linking to design documents",
        "Class 'PythonTracebackLexer' docstring should reference relevant architecture documents",
        "Class 'PythonTracebackLexer' should include Architecture Context section linking to design documents",
        "Class 'Python2TracebackLexer' docstring should reference relevant architecture documents",
        "Class 'Python2TracebackLexer' should include Architecture Context section linking to design documents",
        "Class 'CythonLexer' docstring should reference relevant architecture documents",
        "Class 'DgLexer' docstring should reference relevant architecture documents",
        "Class 'NumPyLexer' docstring should reference relevant architecture documents",
        "Class 'PythonLexer' should have __init__ method",
        "Class 'Python2Lexer' should have __init__ method",
        "Class '_PythonConsoleLexerBase' should have __init__ method",
        "Class 'PythonTracebackLexer' should have __init__ method",
        "Class 'Python2TracebackLexer' should have __init__ method",
        "Class 'CythonLexer' should have __init__ method",
        "Class 'DgLexer' should have __init__ method",
        "Class 'NumPyLexer' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/modeline.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_filetype_from_line'",
        "Function 'get_filetype_from_buffer' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_filetype_from_buffer' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/plugin.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'iter_entry_points'",
        "Missing docstring for ctiondef 'find_plugin_lexers'",
        "Missing docstring for ctiondef 'find_plugin_formatters'",
        "Missing docstring for ctiondef 'find_plugin_styles'",
        "Missing docstring for ctiondef 'find_plugin_filters'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/regexopt.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'make_charset'",
        "Function 'regex_opt_inner' has parameters but no Args/Parameters documentation",
        "Function 'regex_opt' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'regex_opt_inner' missing Returns documentation",
        "Function 'regex_opt' missing Returns documentation",
        "Function 'regex_opt' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/scanner.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'check' has parameters but no Args/Parameters documentation",
        "Function 'test' has parameters but no Args/Parameters documentation",
        "Function 'scan' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'EndOfText' docstring should reference relevant architecture documents",
        "Class 'Scanner' docstring should reference relevant architecture documents",
        "Function 'eos' missing Returns documentation",
        "Function 'check' missing Returns documentation",
        "Function 'check' missing usage example",
        "Function 'test' missing Returns documentation",
        "Function 'scan' missing Returns documentation",
        "Function 'scan' missing usage example",
        "Function 'get_char' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/sphinxext.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'setup'",
        "Missing docstring for ctiondef 'run'",
        "Missing docstring for ctiondef 'document_lexers'",
        "Missing docstring for ctiondef 'document_formatters'",
        "Missing docstring for ctiondef 'document_filters'",
        "Missing docstring for ctiondef 'format_link'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PygmentsDoc' docstring should reference relevant architecture documents",
        "Function 'document_lexers_overview' missing Returns documentation",
        "Function 'document_lexers_overview' missing usage example",
        "ctiondef 'write_row' has very short docstring",
        "Function 'write_row' missing Returns documentation",
        "Function 'write_seperator' missing Returns documentation",
        "Class 'PygmentsDoc' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/style.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'StyleMeta'",
        "Missing docstring for ssdef 'Style'",
        "Missing docstring for ctiondef 'style_for_token'",
        "Missing docstring for ctiondef 'list_styles'",
        "Missing docstring for ctiondef 'styles_token'",
        "Missing docstring for ctiondef 'colorformat'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'StyleMeta' should have __init__ method",
        "Class 'Style' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/styles/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_style_by_name' missing Returns documentation",
        "Function 'get_style_by_name' missing usage example",
        "Function 'get_all_styles' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/styles/_mapping.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/token.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'is_token_subtype' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'split'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'is_token_subtype' missing Returns documentation",
        "Function 'is_token_subtype' missing usage example",
        "Function 'string_to_tokentype' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/unistring.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'combine'",
        "Missing docstring for ctiondef 'allexcept'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pygments/util.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get_choice_opt' has parameters but no Args/Parameters documentation",
        "Function 'get_bool_opt' has parameters but no Args/Parameters documentation",
        "Function 'get_int_opt' has parameters but no Args/Parameters documentation",
        "Function 'get_list_opt' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'docstring_headline'",
        "Function 'shebang_matches' has parameters but no Args/Parameters documentation",
        "Function 'doctype_matches' has parameters but no Args/Parameters documentation",
        "Function 'format_lines' has parameters but no Args/Parameters documentation",
        "Function 'duplicates_removed' has parameters but no Args/Parameters documentation",
        "Function 'guess_decode_from_terminal' has parameters but no Args/Parameters documentation",
        "Missing docstring for ssdef 'UnclosingTextIOWrapper'",
        "Missing docstring for ctiondef 'text_analyse'",
        "Missing docstring for ctiondef 'get'",
        "Missing docstring for ctiondef 'close'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ClassNotFound' docstring should reference relevant architecture documents",
        "Class 'OptionError' docstring should reference relevant architecture documents",
        "Class 'OptionError' should include Architecture Context section linking to design documents",
        "Function 'get_choice_opt' missing Returns documentation",
        "Function 'get_choice_opt' missing usage example",
        "Function 'get_bool_opt' missing Returns documentation",
        "Function 'get_bool_opt' missing usage example",
        "Function 'get_int_opt' missing Returns documentation",
        "Function 'get_list_opt' missing Returns documentation",
        "Function 'get_list_opt' missing usage example",
        "Function 'make_analysator' missing Returns documentation",
        "Function 'shebang_matches' missing Returns documentation",
        "Function 'doctype_matches' missing Returns documentation",
        "Function 'doctype_matches' missing usage example",
        "Function 'html_doctype_matches' missing Returns documentation",
        "Function 'looks_like_xml' missing Returns documentation",
        "Function 'surrogatepair' missing Returns documentation",
        "Function 'surrogatepair' missing usage example",
        "Function 'format_lines' missing Returns documentation",
        "Function 'duplicates_removed' missing Returns documentation",
        "Class 'Future' docstring should reference relevant architecture documents",
        "Class 'Future' should include Architecture Context section linking to design documents",
        "Function 'guess_decode' missing Returns documentation",
        "Function 'guess_decode' missing usage example",
        "Function 'guess_decode_from_terminal' missing Returns documentation",
        "Function 'guess_decode_from_terminal' missing usage example",
        "Function 'terminal_encoding' missing Returns documentation",
        "Class 'Future' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pyproject_hooks/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pyproject_hooks/_impl.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'write_json'",
        "Missing docstring for ctiondef 'read_json'",
        "Function 'default_subprocess_runner' has parameters but no Args/Parameters documentation",
        "Function 'quiet_subprocess_runner' has parameters but no Args/Parameters documentation",
        "Function 'norm_and_check' has parameters but no Args/Parameters documentation",
        "Function 'get_requires_for_build_sdist' has parameters but no Args/Parameters documentation",
        "Function 'build_sdist' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BackendUnavailable' docstring should reference relevant architecture documents",
        "Class 'HookMissing' docstring should reference relevant architecture documents",
        "Class 'UnsupportedOperation' docstring should reference relevant architecture documents",
        "Function 'default_subprocess_runner' missing Returns documentation",
        "Function 'default_subprocess_runner' missing usage example",
        "Function 'quiet_subprocess_runner' missing Returns documentation",
        "Function 'quiet_subprocess_runner' missing usage example",
        "Function 'norm_and_check' missing Returns documentation",
        "Function 'norm_and_check' missing usage example",
        "Class 'BuildBackendHookCaller' docstring should reference relevant architecture documents",
        "Class 'SubprocessRunner' docstring should reference relevant architecture documents",
        "Function 'subprocess_runner' missing Returns documentation",
        "Function 'subprocess_runner' missing usage example",
        "Function 'get_requires_for_build_wheel' missing usage example",
        "Function 'prepare_metadata_for_build_wheel' missing usage example",
        "Function 'build_wheel' missing usage example",
        "Function 'get_requires_for_build_editable' missing usage example",
        "Function 'prepare_metadata_for_build_editable' missing usage example",
        "Function 'build_editable' missing usage example",
        "Function 'get_requires_for_build_sdist' missing usage example",
        "Function 'build_sdist' missing usage example",
        "Class 'SubprocessRunner' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pyproject_hooks/_in_process/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'write_json'",
        "Missing docstring for ctiondef 'read_json'",
        "Function 'prepare_metadata_for_build_wheel' has parameters but no Args/Parameters documentation",
        "Function 'prepare_metadata_for_build_editable' has parameters but no Args/Parameters documentation",
        "Function 'build_wheel' has parameters but no Args/Parameters documentation",
        "Function 'build_editable' has parameters but no Args/Parameters documentation",
        "Function 'build_sdist' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'main'",
        "Missing docstring for ctiondef 'find_spec'",
        "Missing docstring for ctiondef 'find_distributions'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BackendUnavailable' docstring should reference relevant architecture documents",
        "Class 'HookMissing' docstring should reference relevant architecture documents",
        "Function 'get_requires_for_build_wheel' missing Returns documentation",
        "Function 'get_requires_for_build_editable' missing Returns documentation",
        "Function 'prepare_metadata_for_build_wheel' missing Returns documentation",
        "Function 'prepare_metadata_for_build_wheel' missing usage example",
        "Function 'prepare_metadata_for_build_editable' missing Returns documentation",
        "Function 'prepare_metadata_for_build_editable' missing usage example",
        "Function 'build_wheel' missing Returns documentation",
        "Function 'build_wheel' missing usage example",
        "Function 'build_editable' missing Returns documentation",
        "Function 'build_editable' missing usage example",
        "Function 'get_requires_for_build_sdist' missing Returns documentation",
        "Class 'GotUnsupportedOperation' docstring should reference relevant architecture documents",
        "Function 'build_sdist' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'check_compatibility'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/__version__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/_internal_utils.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'to_native_string' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'to_native_string' missing Returns documentation",
        "Function 'to_native_string' missing usage example",
        "Function 'unicode_is_ascii' missing Returns documentation",
        "Function 'unicode_is_ascii' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/adapters.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'SOCKSProxyManager'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BaseAdapter' docstring should reference relevant architecture documents",
        "Class 'HTTPAdapter' docstring should reference relevant architecture documents",
        "Class 'HTTPAdapter' should include Architecture Context section linking to design documents",
        "Function 'send' missing Returns documentation",
        "Function 'send' missing usage example",
        "Function 'close' missing Returns documentation",
        "Function 'init_poolmanager' missing Returns documentation",
        "Function 'init_poolmanager' missing usage example",
        "Function 'proxy_manager_for' missing usage example",
        "Function 'cert_verify' missing Returns documentation",
        "Function 'cert_verify' missing usage example",
        "Function 'build_response' missing Returns documentation",
        "Function 'build_response' missing usage example",
        "Function 'build_connection_pool_key_attributes' missing usage example",
        "Function 'get_connection_with_tls_context' missing Returns documentation",
        "Function 'get_connection_with_tls_context' missing usage example",
        "Function 'get_connection' missing Returns documentation",
        "Function 'get_connection' missing usage example",
        "Function 'close' missing Returns documentation",
        "Function 'close' missing usage example",
        "Function 'request_url' missing Returns documentation",
        "Function 'request_url' missing usage example",
        "Function 'add_headers' missing Returns documentation",
        "Function 'add_headers' missing usage example",
        "Function 'proxy_headers' missing Returns documentation",
        "Function 'proxy_headers' missing usage example",
        "Function 'send' missing Returns documentation",
        "Function 'send' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/api.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get' missing usage example",
        "Function 'options' missing usage example",
        "Function 'head' missing usage example",
        "Function 'post' missing usage example",
        "Function 'put' missing usage example",
        "Function 'patch' missing usage example",
        "Function 'delete' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/auth.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'init_per_thread_state'",
        "Function 'build_digest_header' has parameters but no Args/Parameters documentation",
        "Function 'handle_redirect' has parameters but no Args/Parameters documentation",
        "Function 'handle_401' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'md5_utf8'",
        "Missing docstring for ctiondef 'sha_utf8'",
        "Missing docstring for ctiondef 'sha256_utf8'",
        "Missing docstring for ctiondef 'sha512_utf8'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'AuthBase' docstring should reference relevant architecture documents",
        "Class 'HTTPBasicAuth' docstring should reference relevant architecture documents",
        "Class 'HTTPProxyAuth' docstring should reference relevant architecture documents",
        "Class 'HTTPDigestAuth' docstring should reference relevant architecture documents",
        "ctiondef 'build_digest_header' has very short docstring",
        "Function 'build_digest_header' missing Returns documentation",
        "Function 'handle_redirect' missing Returns documentation",
        "Function 'handle_401' missing Returns documentation",
        "Class 'AuthBase' should have __init__ method",
        "Class 'HTTPProxyAuth' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/certs.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/compat.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/cookies.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get_cookie_header' has parameters but no Args/Parameters documentation",
        "Function 'remove_cookie_by_name' has parameters but no Args/Parameters documentation",
        "Function 'create_cookie' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_type'",
        "Missing docstring for ctiondef 'get_host'",
        "Missing docstring for ctiondef 'get_origin_req_host'",
        "Missing docstring for ctiondef 'get_full_url'",
        "Missing docstring for ctiondef 'is_unverifiable'",
        "Missing docstring for ctiondef 'has_header'",
        "Missing docstring for ctiondef 'get_header'",
        "Function 'add_header' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'add_unredirected_header'",
        "Missing docstring for ctiondef 'get_new_headers'",
        "Missing docstring for ctiondef 'unverifiable'",
        "Missing docstring for ctiondef 'origin_req_host'",
        "Missing docstring for ctiondef 'host'",
        "Missing docstring for ctiondef 'info'",
        "Missing docstring for ctiondef 'getheaders'",
        "Function 'get' has parameters but no Args/Parameters documentation",
        "Function 'set' has parameters but no Args/Parameters documentation",
        "Function 'get_dict' has parameters but no Args/Parameters documentation",
        "Function '__getitem__' has parameters but no Args/Parameters documentation",
        "Function '__setitem__' has parameters but no Args/Parameters documentation",
        "Function '__delitem__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'set_cookie'",
        "Function 'update' has parameters but no Args/Parameters documentation",
        "Function '__setstate__' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'MockRequest' docstring should reference relevant architecture documents",
        "Class 'MockRequest' should include Architecture Context section linking to design documents",
        "Class 'MockResponse' docstring should reference relevant architecture documents",
        "Class 'MockResponse' should include Architecture Context section linking to design documents",
        "Function 'extract_cookies_to_jar' missing Returns documentation",
        "Function 'extract_cookies_to_jar' missing usage example",
        "Function 'get_cookie_header' missing Returns documentation",
        "Function 'remove_cookie_by_name' missing Returns documentation",
        "Class 'CookieConflictError' docstring should reference relevant architecture documents",
        "Class 'CookieConflictError' should include Architecture Context section linking to design documents",
        "Class 'RequestsCookieJar' docstring should reference relevant architecture documents",
        "Class 'RequestsCookieJar' should include Architecture Context section linking to design documents",
        "Function 'create_cookie' missing Returns documentation",
        "Function 'create_cookie' missing usage example",
        "Function 'morsel_to_cookie' missing Returns documentation",
        "Function 'cookiejar_from_dict' missing Returns documentation",
        "Function 'cookiejar_from_dict' missing usage example",
        "Function 'merge_cookies' missing Returns documentation",
        "Function 'merge_cookies' missing usage example",
        "Function 'add_header' missing Returns documentation",
        "Function 'get' missing Returns documentation",
        "Function 'get' missing usage example",
        "Function 'set' missing Returns documentation",
        "Function 'set' missing usage example",
        "Function 'iterkeys' missing Returns documentation",
        "Function 'iterkeys' missing usage example",
        "Function 'keys' missing Returns documentation",
        "Function 'keys' missing usage example",
        "Function 'itervalues' missing Returns documentation",
        "Function 'itervalues' missing usage example",
        "Function 'values' missing Returns documentation",
        "Function 'values' missing usage example",
        "Function 'iteritems' missing Returns documentation",
        "Function 'iteritems' missing usage example",
        "Function 'items' missing Returns documentation",
        "Function 'items' missing usage example",
        "Function 'list_domains' missing Returns documentation",
        "Function 'list_paths' missing Returns documentation",
        "Function 'multiple_domains' missing Returns documentation",
        "Function 'get_dict' missing Returns documentation",
        "Function 'get_dict' missing usage example",
        "Function 'update' missing Returns documentation",
        "Function 'copy' missing Returns documentation",
        "Function 'get_policy' missing Returns documentation",
        "Class 'RequestsCookieJar' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/exceptions.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'RequestException' docstring should reference relevant architecture documents",
        "Class 'InvalidJSONError' docstring should reference relevant architecture documents",
        "Class 'JSONDecodeError' docstring should reference relevant architecture documents",
        "Class 'HTTPError' docstring should reference relevant architecture documents",
        "Class 'ConnectionError' docstring should reference relevant architecture documents",
        "Class 'ProxyError' docstring should reference relevant architecture documents",
        "Class 'SSLError' docstring should reference relevant architecture documents",
        "Class 'Timeout' docstring should reference relevant architecture documents",
        "Class 'Timeout' should include Architecture Context section linking to design documents",
        "Class 'ConnectTimeout' docstring should reference relevant architecture documents",
        "Class 'ConnectTimeout' should include Architecture Context section linking to design documents",
        "Class 'ReadTimeout' docstring should reference relevant architecture documents",
        "Class 'URLRequired' docstring should reference relevant architecture documents",
        "ssdef 'TooManyRedirects' has very short docstring",
        "Class 'TooManyRedirects' docstring should reference relevant architecture documents",
        "Class 'MissingSchema' docstring should reference relevant architecture documents",
        "Class 'InvalidSchema' docstring should reference relevant architecture documents",
        "Class 'InvalidURL' docstring should reference relevant architecture documents",
        "Class 'InvalidHeader' docstring should reference relevant architecture documents",
        "Class 'InvalidProxyURL' docstring should reference relevant architecture documents",
        "Class 'ChunkedEncodingError' docstring should reference relevant architecture documents",
        "Class 'ContentDecodingError' docstring should reference relevant architecture documents",
        "Class 'StreamConsumedError' docstring should reference relevant architecture documents",
        "Class 'RetryError' docstring should reference relevant architecture documents",
        "Class 'UnrewindableBodyError' docstring should reference relevant architecture documents",
        "Class 'RequestsWarning' docstring should reference relevant architecture documents",
        "Class 'FileModeWarning' docstring should reference relevant architecture documents",
        "Class 'RequestsDependencyWarning' docstring should reference relevant architecture documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/help.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'info' missing Returns documentation",
        "Function 'main' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/hooks.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'default_hooks'",
        "Function 'dispatch_hook' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'dispatch_hook' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/models.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'RequestEncodingMixin'",
        "Missing docstring for ssdef 'RequestHooksMixin'",
        "Function 'register_hook' has parameters but no Args/Parameters documentation",
        "Function 'deregister_hook' has parameters but no Args/Parameters documentation",
        "Function 'prepare' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'copy'",
        "Function 'prepare_method' has parameters but no Args/Parameters documentation",
        "Function 'prepare_url' has parameters but no Args/Parameters documentation",
        "Function 'prepare_headers' has parameters but no Args/Parameters documentation",
        "Function 'prepare_body' has parameters but no Args/Parameters documentation",
        "Function 'prepare_content_length' has parameters but no Args/Parameters documentation",
        "Function 'prepare_auth' has parameters but no Args/Parameters documentation",
        "Function 'prepare_cookies' has parameters but no Args/Parameters documentation",
        "Function 'prepare_hooks' has parameters but no Args/Parameters documentation",
        "Function 'iter_content' has parameters but no Args/Parameters documentation",
        "Function 'iter_lines' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'generate'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Request' docstring should reference relevant architecture documents",
        "Class 'Request' should include Architecture Context section linking to design documents",
        "Class 'PreparedRequest' docstring should reference relevant architecture documents",
        "Class 'PreparedRequest' should include Architecture Context section linking to design documents",
        "Class 'Response' docstring should reference relevant architecture documents",
        "Function 'path_url' missing Returns documentation",
        "Function 'register_hook' missing Returns documentation",
        "Function 'deregister_hook' missing Returns documentation",
        "Function 'prepare' missing Returns documentation",
        "Function 'prepare' missing Returns documentation",
        "Function 'prepare_method' missing Returns documentation",
        "Function 'prepare_url' missing Returns documentation",
        "Function 'prepare_headers' missing Returns documentation",
        "Function 'prepare_body' missing Returns documentation",
        "Function 'prepare_content_length' missing Returns documentation",
        "Function 'prepare_auth' missing Returns documentation",
        "Function 'prepare_cookies' missing Returns documentation",
        "Function 'prepare_cookies' missing usage example",
        "Function 'prepare_hooks' missing Returns documentation",
        "Function 'ok' missing Returns documentation",
        "Function 'ok' missing usage example",
        "Function 'is_redirect' missing Returns documentation",
        "Function 'is_redirect' missing usage example",
        "Function 'is_permanent_redirect' missing Returns documentation",
        "Function 'next' missing Returns documentation",
        "Function 'apparent_encoding' missing Returns documentation",
        "Function 'iter_content' missing Returns documentation",
        "Function 'iter_content' missing usage example",
        "Function 'iter_lines' missing Returns documentation",
        "Function 'iter_lines' missing usage example",
        "Function 'content' missing Returns documentation",
        "Function 'text' missing Returns documentation",
        "Function 'text' missing usage example",
        "Function 'json' missing Returns documentation",
        "Function 'json' missing usage example",
        "Function 'links' missing Returns documentation",
        "Function 'raise_for_status' missing Returns documentation",
        "Function 'close' missing Returns documentation",
        "Function 'close' missing usage example",
        "Class 'RequestEncodingMixin' should have __init__ method",
        "Class 'RequestHooksMixin' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/packages.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/sessions.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'merge_setting' has parameters but no Args/Parameters documentation",
        "Function 'merge_hooks' has parameters but no Args/Parameters documentation",
        "Missing docstring for ssdef 'SessionRedirectMixin'",
        "Function 'get_redirect_target' has parameters but no Args/Parameters documentation",
        "Function 'should_strip_auth' has parameters but no Args/Parameters documentation",
        "Function 'resolve_redirects' has parameters but no Args/Parameters documentation",
        "Function 'rebuild_auth' has parameters but no Args/Parameters documentation",
        "Function 'rebuild_proxies' has parameters but no Args/Parameters documentation",
        "Function 'rebuild_method' has parameters but no Args/Parameters documentation",
        "Function 'send' has parameters but no Args/Parameters documentation",
        "Function 'merge_environment_settings' has parameters but no Args/Parameters documentation",
        "Function 'get_adapter' has parameters but no Args/Parameters documentation",
        "Function 'mount' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'merge_setting' missing Returns documentation",
        "Function 'merge_setting' missing usage example",
        "Function 'merge_hooks' missing Returns documentation",
        "Function 'merge_hooks' missing usage example",
        "Class 'Session' docstring should reference relevant architecture documents",
        "Class 'Session' should include Architecture Context section linking to design documents",
        "Function 'session' missing Returns documentation",
        "Function 'session' missing usage example",
        "Function 'get_redirect_target' missing Returns documentation",
        "Function 'should_strip_auth' missing Returns documentation",
        "Function 'resolve_redirects' missing Returns documentation",
        "Function 'rebuild_auth' missing Returns documentation",
        "Function 'rebuild_auth' missing usage example",
        "Function 'rebuild_proxies' missing Returns documentation",
        "Function 'rebuild_proxies' missing usage example",
        "Function 'rebuild_method' missing Returns documentation",
        "Function 'rebuild_method' missing usage example",
        "Function 'prepare_request' missing Returns documentation",
        "Function 'prepare_request' missing usage example",
        "Function 'request' missing Returns documentation",
        "Function 'request' missing usage example",
        "Function 'get' missing Returns documentation",
        "Function 'get' missing usage example",
        "Function 'options' missing Returns documentation",
        "Function 'options' missing usage example",
        "Function 'head' missing Returns documentation",
        "Function 'head' missing usage example",
        "Function 'post' missing Returns documentation",
        "Function 'post' missing usage example",
        "Function 'put' missing Returns documentation",
        "Function 'put' missing usage example",
        "Function 'patch' missing Returns documentation",
        "Function 'patch' missing usage example",
        "Function 'delete' missing Returns documentation",
        "Function 'delete' missing usage example",
        "Function 'send' missing Returns documentation",
        "Function 'merge_environment_settings' missing Returns documentation",
        "Function 'get_adapter' missing Returns documentation",
        "Function 'close' missing Returns documentation",
        "Function 'mount' missing Returns documentation",
        "Function 'mount' missing usage example",
        "Class 'SessionRedirectMixin' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/status_codes.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'doc'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/structures.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'copy'",
        "Missing docstring for ctiondef 'get'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'CaseInsensitiveDict' docstring should reference relevant architecture documents",
        "Class 'CaseInsensitiveDict' should include Architecture Context section linking to design documents",
        "Class 'LookupDict' docstring should reference relevant architecture documents",
        "Function 'lower_items' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/requests/utils.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'super_len'",
        "Function 'get_netrc_auth' has parameters but no Args/Parameters documentation",
        "Function 'stream_decode_response_unicode' has parameters but no Args/Parameters documentation",
        "Function 'iter_slices' has parameters but no Args/Parameters documentation",
        "Function 'address_in_network' has parameters but no Args/Parameters documentation",
        "Function 'set_environ' has parameters but no Args/Parameters documentation",
        "Function 'should_bypass_proxies' has parameters but no Args/Parameters documentation",
        "Function 'get_environ_proxies' has parameters but no Args/Parameters documentation",
        "Function 'prepend_scheme_if_needed' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'proxy_bypass_registry'",
        "Missing docstring for ctiondef 'get_proxy'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'dict_to_sequence' missing Returns documentation",
        "Function 'get_netrc_auth' missing Returns documentation",
        "Function 'guess_filename' missing Returns documentation",
        "Function 'extract_zipped_paths' missing Returns documentation",
        "Function 'extract_zipped_paths' missing usage example",
        "Function 'atomic_open' missing Returns documentation",
        "Function 'from_key_val_list' missing Returns documentation",
        "Function 'to_key_val_list' missing Returns documentation",
        "Function 'unquote_header_value' missing Returns documentation",
        "Function 'unquote_header_value' missing usage example",
        "Function 'dict_from_cookiejar' missing Returns documentation",
        "Function 'dict_from_cookiejar' missing usage example",
        "Function 'add_dict_to_cookiejar' missing Returns documentation",
        "Function 'add_dict_to_cookiejar' missing usage example",
        "Function 'get_encodings_from_content' missing Returns documentation",
        "Function 'get_encoding_from_headers' missing Returns documentation",
        "Function 'get_encoding_from_headers' missing usage example",
        "Function 'stream_decode_response_unicode' missing Returns documentation",
        "Function 'iter_slices' missing Returns documentation",
        "Function 'get_unicode_from_response' missing Returns documentation",
        "Function 'get_unicode_from_response' missing usage example",
        "Function 'unquote_unreserved' missing Returns documentation",
        "Function 'unquote_unreserved' missing usage example",
        "Function 'requote_uri' missing Returns documentation",
        "Function 'requote_uri' missing usage example",
        "Function 'address_in_network' missing Returns documentation",
        "Function 'dotted_netmask' missing Returns documentation",
        "ctiondef 'is_ipv4_address' has very short docstring",
        "Function 'is_ipv4_address' missing Returns documentation",
        "Function 'is_valid_cidr' missing Returns documentation",
        "Function 'set_environ' missing Returns documentation",
        "Function 'set_environ' missing usage example",
        "Function 'should_bypass_proxies' missing Returns documentation",
        "Function 'get_environ_proxies' missing Returns documentation",
        "Function 'select_proxy' missing Returns documentation",
        "Function 'select_proxy' missing usage example",
        "Function 'resolve_proxies' missing Returns documentation",
        "Function 'resolve_proxies' missing usage example",
        "Function 'default_user_agent' missing Returns documentation",
        "Function 'default_headers' missing Returns documentation",
        "Function 'parse_header_links' missing Returns documentation",
        "Function 'parse_header_links' missing usage example",
        "ctiondef 'guess_json_utf' has very short docstring",
        "Function 'guess_json_utf' missing Returns documentation",
        "Function 'prepend_scheme_if_needed' missing Returns documentation",
        "Function 'prepend_scheme_if_needed' missing usage example",
        "Function 'get_auth_from_url' missing Returns documentation",
        "Function 'get_auth_from_url' missing usage example",
        "Function 'check_header_validity' missing Returns documentation",
        "Function 'check_header_validity' missing usage example",
        "Function 'urldefragauth' missing Returns documentation",
        "Function 'rewind_body' missing Returns documentation",
        "Function 'proxy_bypass' missing Returns documentation",
        "Function 'proxy_bypass' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/resolvelib/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/resolvelib/compat/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/resolvelib/compat/collections_abc.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/resolvelib/providers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'identify' has parameters but no Args/Parameters documentation",
        "Function 'is_satisfied_by' has parameters but no Args/Parameters documentation",
        "Function 'get_dependencies' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'AbstractProvider' docstring should reference relevant architecture documents",
        "Class 'AbstractResolver' docstring should reference relevant architecture documents",
        "Function 'identify' missing Returns documentation",
        "Function 'identify' missing usage example",
        "Function 'get_preference' missing Returns documentation",
        "Function 'get_preference' missing usage example",
        "Function 'find_matches' missing Returns documentation",
        "Function 'find_matches' missing usage example",
        "Function 'is_satisfied_by' missing Returns documentation",
        "Function 'is_satisfied_by' missing usage example",
        "Function 'get_dependencies' missing Returns documentation",
        "Function 'get_dependencies' missing usage example",
        "Function 'resolve' missing Returns documentation",
        "Function 'resolve' missing usage example",
        "Class 'AbstractProvider' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/resolvelib/reporters.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'starting_round' has parameters but no Args/Parameters documentation",
        "Function 'ending_round' has parameters but no Args/Parameters documentation",
        "Function 'ending' has parameters but no Args/Parameters documentation",
        "Function 'rejecting_candidate' has parameters but no Args/Parameters documentation",
        "Function 'pinning' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BaseReporter' docstring should reference relevant architecture documents",
        "Function 'starting' missing Returns documentation",
        "Function 'starting_round' missing Returns documentation",
        "Function 'ending_round' missing Returns documentation",
        "Function 'ending_round' missing usage example",
        "Function 'ending' missing Returns documentation",
        "Function 'adding_requirement' missing Returns documentation",
        "Function 'adding_requirement' missing usage example",
        "Function 'resolving_conflicts' missing Returns documentation",
        "Function 'resolving_conflicts' missing usage example",
        "Function 'rejecting_candidate' missing Returns documentation",
        "Function 'pinning' missing Returns documentation",
        "Class 'BaseReporter' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/resolvelib/resolvers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'RequirementsConflicted'",
        "Missing docstring for ssdef 'InconsistentCandidate'",
        "Missing docstring for ssdef 'ResolutionError'",
        "Missing docstring for ssdef 'ResolutionImpossible'",
        "Missing docstring for ssdef 'ResolutionTooDeep'",
        "Missing docstring for ctiondef 'iter_requirement'",
        "Missing docstring for ctiondef 'iter_parent'",
        "Missing docstring for ctiondef 'state'",
        "Missing docstring for ctiondef 'resolve'",
        "Function 'resolve' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ResolverException' docstring should reference relevant architecture documents",
        "Class 'ResolverException' should include Architecture Context section linking to design documents",
        "Class 'Criterion' docstring should reference relevant architecture documents",
        "Class 'Criterion' should include Architecture Context section linking to design documents",
        "Class 'Resolution' docstring should reference relevant architecture documents",
        "Class 'Resolution' should include Architecture Context section linking to design documents",
        "Class 'Resolver' docstring should reference relevant architecture documents",
        "Function 'resolve' missing Returns documentation",
        "Function 'resolve' missing usage example",
        "Class 'Resolver' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/resolvelib/structs.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'IteratorMapping'",
        "Function 'add' has parameters but no Args/Parameters documentation",
        "Function 'remove' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'connected'",
        "Function 'connect' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'iter_edges'",
        "Missing docstring for ctiondef 'iter_children'",
        "Missing docstring for ctiondef 'iter_parents'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'DirectedGraph' docstring should reference relevant architecture documents",
        "Function 'build_iter_view' missing Returns documentation",
        "Function 'copy' missing Returns documentation",
        "Function 'add' missing Returns documentation",
        "Function 'remove' missing Returns documentation",
        "Function 'connect' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_console' missing usage example",
        "Function 'reconfigure' missing Returns documentation",
        "Function 'reconfigure' missing usage example",
        "Function 'print' missing Returns documentation",
        "Function 'print' missing usage example",
        "Function 'print_json' missing Returns documentation",
        "Function 'print_json' missing usage example",
        "Function 'inspect' missing Returns documentation",
        "Function 'inspect' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/__main__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'ColorBox'",
        "Missing docstring for ctiondef 'comparison'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'make_test_card' missing Returns documentation",
        "Using type hints but missing typing imports",
        "Class 'ColorBox' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_cell_widths.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_emoji_codes.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_emoji_replace.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'do_replace'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_export_format.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_extension.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ctiondef 'load_ipython_extension'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.27142857142857135,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_fileno.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'get_fileno' missing usage example"
      ],
      "score": 0.23428571428571426,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_inspect.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'is_object_one_of_types' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'sort_items'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Inspect' docstring should reference relevant architecture documents",
        "Class 'Inspect' should include Architecture Context section linking to design documents",
        "Function 'get_object_types_mro' missing Returns documentation",
        "Function 'get_object_types_mro_as_strings' missing Returns documentation",
        "Function 'is_object_one_of_types' missing Returns documentation",
        "Function 'is_object_one_of_types' missing usage example",
        "Function 'safe_getattr' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_log_render.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ssdef 'LogRender'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [],
      "score": 0.028571428571428525,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_loop.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'loop_first' missing Returns documentation",
        "Function 'loop_last' missing Returns documentation",
        "Function 'loop_first_last' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_null_file.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ssdef 'NullFile'",
        "Missing docstring for ctiondef 'close'",
        "Missing docstring for ctiondef 'isatty'",
        "Missing docstring for ctiondef 'read'",
        "Missing docstring for ctiondef 'readable'",
        "Missing docstring for ctiondef 'readline'",
        "Missing docstring for ctiondef 'readlines'",
        "Missing docstring for ctiondef 'seek'",
        "Missing docstring for ctiondef 'seekable'",
        "Missing docstring for ctiondef 'tell'",
        "Missing docstring for ctiondef 'truncate'",
        "Missing docstring for ctiondef 'writable'",
        "Missing docstring for ctiondef 'writelines'",
        "Missing docstring for ctiondef 'write'",
        "Missing docstring for ctiondef 'flush'",
        "Missing docstring for ctiondef 'fileno'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Class 'NullFile' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_palettes.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_pick.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'pick_bool' missing usage example"
      ],
      "score": 0.23428571428571426,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_ratio.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'E'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Edge' docstring should reference relevant architecture documents",
        "Function 'ratio_resolve' missing usage example",
        "Function 'ratio_reduce' missing usage example",
        "Function 'ratio_distribute' missing usage example",
        "Class 'Edge' should have __init__ method",
        "Class 'E' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_spinners.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_stack.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'push' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Stack' docstring should reference relevant architecture documents",
        "ctiondef 'top' has very short docstring",
        "Function 'top' missing Returns documentation",
        "Function 'push' missing Returns documentation",
        "Class 'Stack' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_timer.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'timer' missing Returns documentation"
      ],
      "score": 0.23428571428571426,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_win32_console.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'LegacyWindowsError'",
        "Missing docstring for ssdef 'CONSOLE_SCREEN_BUFFER_INFO'",
        "Missing docstring for ssdef 'CONSOLE_CURSOR_INFO'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'WindowsCoordinates' docstring should reference relevant architecture documents",
        "Class 'WindowsCoordinates' should include Architecture Context section linking to design documents",
        "Function 'GetStdHandle' missing usage example",
        "Function 'GetConsoleMode' missing usage example",
        "Function 'FillConsoleOutputCharacter' missing usage example",
        "Function 'FillConsoleOutputAttribute' missing usage example",
        "Function 'SetConsoleTextAttribute' missing usage example",
        "Function 'GetConsoleScreenBufferInfo' missing usage example",
        "Function 'SetConsoleCursorPosition' missing usage example",
        "Function 'GetConsoleCursorInfo' missing usage example",
        "Function 'SetConsoleCursorInfo' missing usage example",
        "Function 'SetConsoleTitle' missing usage example",
        "Class 'LegacyWindowsTerm' docstring should reference relevant architecture documents",
        "Class 'LegacyWindowsTerm' should include Architecture Context section linking to design documents",
        "Function 'from_param' missing usage example",
        "Function 'cursor_position' missing usage example",
        "Function 'screen_size' missing usage example",
        "Function 'write_text' missing Returns documentation",
        "Function 'write_text' missing usage example",
        "Function 'write_styled' missing Returns documentation",
        "Function 'write_styled' missing usage example",
        "Function 'move_cursor_to' missing Returns documentation",
        "Function 'move_cursor_to' missing usage example",
        "Function 'erase_line' missing Returns documentation",
        "Function 'erase_end_of_line' missing Returns documentation",
        "Function 'erase_start_of_line' missing Returns documentation",
        "Function 'move_cursor_up' missing Returns documentation",
        "Function 'move_cursor_down' missing Returns documentation",
        "Function 'move_cursor_forward' missing Returns documentation",
        "Function 'move_cursor_to_column' missing Returns documentation",
        "Function 'move_cursor_to_column' missing usage example",
        "Function 'move_cursor_backward' missing Returns documentation",
        "ctiondef 'hide_cursor' has very short docstring",
        "Function 'hide_cursor' missing Returns documentation",
        "ctiondef 'show_cursor' has very short docstring",
        "Function 'show_cursor' missing Returns documentation",
        "Function 'set_title' missing Returns documentation",
        "Class 'WindowsCoordinates' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_windows.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_windows_console_features'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'WindowsConsoleFeatures' docstring should reference relevant architecture documents",
        "Function 'get_windows_console_features' missing usage example",
        "Using type hints but missing typing imports",
        "Class 'WindowsConsoleFeatures' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_windows_renderer.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'legacy_windows_render' missing Returns documentation",
        "Function 'legacy_windows_render' missing usage example"
      ],
      "score": 0.21428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/_wrap.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'words' missing Returns documentation",
        "Function 'words' missing usage example",
        "Function 'divide_line' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/abc.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__subclasshook__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ssdef 'Foo'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'RichRenderable' docstring should reference relevant architecture documents",
        "Class 'RichRenderable' should include Architecture Context section linking to design documents",
        "Using type hints but missing typing imports",
        "Class 'RichRenderable' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/align.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'left' has parameters but no Args/Parameters documentation",
        "Function 'center' has parameters but no Args/Parameters documentation",
        "Function 'right' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'generate_segments'",
        "Missing docstring for ctiondef 'blank_lines'",
        "Missing docstring for ctiondef 'blank_lines'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Align' docstring should reference relevant architecture documents",
        "Class 'Align' should include Architecture Context section linking to design documents",
        "Class 'VerticalCenter' docstring should reference relevant architecture documents",
        "Class 'VerticalCenter' should include Architecture Context section linking to design documents",
        "Function 'left' missing Returns documentation",
        "Function 'center' missing Returns documentation",
        "Function 'right' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/ansi.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'read'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'AnsiDecoder' docstring should reference relevant architecture documents",
        "Function 'decode' missing Returns documentation",
        "Function 'decode' missing usage example",
        "Function 'decode_line' missing usage example",
        "Class '_AnsiToken' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/bar.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Bar' docstring should reference relevant architecture documents",
        "Class 'Bar' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/box.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Box' docstring should reference relevant architecture documents",
        "Class 'Box' should include Architecture Context section linking to design documents",
        "Function 'substitute' missing usage example",
        "Function 'get_plain_headed_box' missing usage example",
        "Function 'get_top' missing usage example",
        "Function 'get_row' missing usage example",
        "Function 'get_bottom' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/cells.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'set_cell_size' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'cached_cell_len' missing usage example",
        "Function 'cell_len' missing usage example",
        "Function 'get_character_cell_size' missing usage example",
        "Function 'set_cell_size' missing Returns documentation",
        "Function 'chop_cells' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/color.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'blend_rgb' has parameters but no Args/Parameters documentation",
        "Function 'parse' has parameters but no Args/Parameters documentation",
        "Function 'get_ansi_codes' has parameters but no Args/Parameters documentation",
        "Function 'downgrade' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ColorSystem' docstring should reference relevant architecture documents",
        "Class 'ColorType' docstring should reference relevant architecture documents",
        "Class 'ColorParseError' docstring should reference relevant architecture documents",
        "Class 'Color' docstring should reference relevant architecture documents",
        "Function 'parse_rgb_hex' missing Returns documentation",
        "Function 'blend_rgb' missing Returns documentation",
        "Function 'system' missing Returns documentation",
        "Function 'is_system_defined' missing Returns documentation",
        "Function 'is_default' missing Returns documentation",
        "Function 'get_truecolor' missing usage example",
        "Function 'from_ansi' missing usage example",
        "Function 'from_triplet' missing usage example",
        "Function 'from_rgb' missing usage example",
        "Function 'parse' missing Returns documentation",
        "Function 'get_ansi_codes' missing Returns documentation",
        "Function 'downgrade' missing Returns documentation",
        "Class 'ColorSystem' should have __init__ method",
        "Class 'ColorType' should have __init__ method",
        "Class 'Color' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/color_triplet.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ColorTriplet' docstring should reference relevant architecture documents",
        "Function 'hex' missing Returns documentation",
        "Function 'normalized' missing usage example",
        "Class 'ColorTriplet' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/columns.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'iter_renderables'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Columns' docstring should reference relevant architecture documents",
        "Class 'Columns' should include Architecture Context section linking to design documents",
        "Function 'add_renderable' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/console.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'NoChange'",
        "Missing docstring for ctiondef 'get_windows_console_features'",
        "Missing docstring for ctiondef 'renderables'",
        "Function 'file' has parameters but no Args/Parameters documentation",
        "Function '__exit__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'check_text'",
        "Function 'make_tag' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'align_append'",
        "Missing docstring for ctiondef 'stringify'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ConsoleDimensions' docstring should reference relevant architecture documents",
        "Class 'ConsoleOptions' docstring should reference relevant architecture documents",
        "Class 'RichCast' docstring should reference relevant architecture documents",
        "Class 'ConsoleRenderable' docstring should reference relevant architecture documents",
        "Class 'CaptureError' docstring should reference relevant architecture documents",
        "Class 'NewLine' docstring should reference relevant architecture documents",
        "Class 'ScreenUpdate' docstring should reference relevant architecture documents",
        "Class 'Capture' docstring should reference relevant architecture documents",
        "Class 'Capture' should include Architecture Context section linking to design documents",
        "Class 'ThemeContext' docstring should reference relevant architecture documents",
        "Class 'PagerContext' docstring should reference relevant architecture documents",
        "Class 'ScreenContext' docstring should reference relevant architecture documents",
        "Class 'ScreenContext' should include Architecture Context section linking to design documents",
        "Class 'Group' docstring should reference relevant architecture documents",
        "Class 'Group' should include Architecture Context section linking to design documents",
        "Function 'group' missing Returns documentation",
        "Function 'group' missing usage example",
        "Class 'ConsoleThreadLocals' docstring should reference relevant architecture documents",
        "Class 'RenderHook' docstring should reference relevant architecture documents",
        "Function 'detect_legacy_windows' missing Returns documentation",
        "Class 'Console' docstring should reference relevant architecture documents",
        "Class 'Console' should include Architecture Context section linking to design documents",
        "Function 'ascii_only' missing Returns documentation",
        "Function 'update' missing Returns documentation",
        "Function 'update_width' missing usage example",
        "Function 'update_height' missing usage example",
        "Function 'reset_height' missing usage example",
        "Function 'update_dimensions' missing usage example",
        "Function 'get' missing Returns documentation",
        "Function 'update' missing Returns documentation",
        "Function 'update' missing usage example",
        "Function 'decorator' missing Returns documentation",
        "Function 'process_renderables' missing usage example",
        "Function 'file' missing Returns documentation",
        "Function 'file' missing Returns documentation",
        "Function 'set_live' missing Returns documentation",
        "Function 'set_live' missing usage example",
        "Function 'clear_live' missing Returns documentation",
        "Function 'push_render_hook' missing Returns documentation",
        "Function 'pop_render_hook' missing Returns documentation",
        "Function 'begin_capture' missing Returns documentation",
        "Function 'push_theme' missing Returns documentation",
        "Function 'push_theme' missing usage example",
        "Function 'pop_theme' missing Returns documentation",
        "Function 'use_theme' missing usage example",
        "Function 'encoding' missing usage example",
        "Function 'is_terminal' missing usage example",
        "Function 'options' missing Returns documentation",
        "Function 'size' missing usage example",
        "Function 'size' missing Returns documentation",
        "Function 'width' missing Returns documentation",
        "Function 'height' missing Returns documentation",
        "Function 'bell' missing Returns documentation",
        "Function 'line' missing Returns documentation",
        "Function 'clear' missing Returns documentation",
        "Function 'clear' missing usage example",
        "Function 'status' missing usage example",
        "Function 'show_cursor' missing Returns documentation",
        "Function 'set_alt_screen' missing usage example",
        "Function 'is_alt_screen' missing usage example",
        "Function 'set_window_title' missing usage example",
        "Function 'screen' missing usage example",
        "Function 'measure' missing usage example",
        "Function 'render' missing usage example",
        "Function 'render_lines' missing usage example",
        "Function 'render_str' missing usage example",
        "Function 'get_style' missing usage example",
        "Function 'rule' missing Returns documentation",
        "Function 'rule' missing usage example",
        "Function 'control' missing Returns documentation",
        "Function 'control' missing usage example",
        "Function 'out' missing Returns documentation",
        "Function 'out' missing usage example",
        "Function 'print' missing Returns documentation",
        "Function 'print' missing usage example",
        "Function 'print_json' missing Returns documentation",
        "Function 'print_json' missing usage example",
        "Function 'update_screen' missing Returns documentation",
        "Function 'update_screen' missing usage example",
        "Function 'update_screen_lines' missing Returns documentation",
        "Function 'update_screen_lines' missing usage example",
        "Function 'print_exception' missing Returns documentation",
        "Function 'print_exception' missing usage example",
        "Function 'log' missing Returns documentation",
        "Function 'log' missing usage example",
        "Function 'on_broken_pipe' missing Returns documentation",
        "Function 'on_broken_pipe' missing usage example",
        "Function 'input' missing usage example",
        "Function 'export_text' missing usage example",
        "Function 'save_text' missing Returns documentation",
        "Function 'save_text' missing usage example",
        "Function 'export_html' missing usage example",
        "Function 'save_html' missing Returns documentation",
        "Function 'save_html' missing usage example",
        "Function 'export_svg' missing Returns documentation",
        "Function 'export_svg' missing usage example",
        "Function 'save_svg' missing Returns documentation",
        "Function 'save_svg' missing usage example",
        "Function 'get_svg_style' missing Returns documentation",
        "Function 'escape_text' missing Returns documentation",
        "Function 'make_tag' missing Returns documentation",
        "Class 'ConsoleDimensions' should have __init__ method",
        "Class 'ConsoleOptions' should have __init__ method",
        "Class 'RichCast' should have __init__ method",
        "Class 'ConsoleRenderable' should have __init__ method",
        "Class 'ConsoleThreadLocals' should have __init__ method",
        "Class 'RenderHook' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/constrain.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Constrain' docstring should reference relevant architecture documents",
        "Class 'Constrain' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/containers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__rich_console__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'append'",
        "Function '__rich_console__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'append'",
        "Missing docstring for ctiondef 'extend'",
        "Missing docstring for ctiondef 'pop'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Renderables' docstring should reference relevant architecture documents",
        "Class 'Lines' docstring should reference relevant architecture documents",
        "Function 'justify' missing Returns documentation",
        "Function 'justify' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/control.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'move_to_column' has parameters but no Args/Parameters documentation",
        "Function 'show_cursor' has parameters but no Args/Parameters documentation",
        "Function 'alt_screen' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_codes'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Control' docstring should reference relevant architecture documents",
        "Class 'Control' should include Architecture Context section linking to design documents",
        "Function 'strip_control_codes' missing usage example",
        "Function 'escape_control_codes' missing usage example",
        "ctiondef 'bell' has very short docstring",
        "Function 'bell' missing Returns documentation",
        "Function 'home' missing Returns documentation",
        "Function 'move' missing usage example",
        "Function 'move_to_column' missing usage example",
        "Function 'move_to' missing usage example",
        "ctiondef 'clear' has very short docstring",
        "Function 'clear' missing Returns documentation",
        "Function 'show_cursor' missing Returns documentation",
        "Function 'alt_screen' missing Returns documentation",
        "Function 'title' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/default_styles.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/diagnose.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'report' missing Returns documentation",
        "Using type hints but missing typing imports"
      ],
      "score": 0.21428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/emoji.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Emoji'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'NoEmoji' docstring should reference relevant architecture documents",
        "Function 'replace' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/errors.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ConsoleError' docstring should reference relevant architecture documents",
        "ssdef 'StyleError' has very short docstring",
        "Class 'StyleError' docstring should reference relevant architecture documents",
        "Class 'StyleSyntaxError' docstring should reference relevant architecture documents",
        "ssdef 'MissingStyle' has very short docstring",
        "Class 'MissingStyle' docstring should reference relevant architecture documents",
        "Class 'StyleStackError' docstring should reference relevant architecture documents",
        "Class 'NotRenderableError' docstring should reference relevant architecture documents",
        "Class 'MarkupError' docstring should reference relevant architecture documents",
        "Class 'LiveError' docstring should reference relevant architecture documents",
        "Class 'NoAltScreen' docstring should reference relevant architecture documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/file_proxy.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'write'",
        "Missing docstring for ctiondef 'flush'",
        "Missing docstring for ctiondef 'fileno'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'FileProxy' docstring should reference relevant architecture documents",
        "ctiondef 'rich_proxied_file' has very short docstring",
        "Function 'rich_proxied_file' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/filesize.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'pick_unit_and_suffix' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'pick_unit_and_suffix' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/highlighter.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'highlight' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'highlight'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Highlighter' docstring should reference relevant architecture documents",
        "Class 'NullHighlighter' docstring should reference relevant architecture documents",
        "Class 'RegexHighlighter' docstring should reference relevant architecture documents",
        "Class 'ReprHighlighter' docstring should reference relevant architecture documents",
        "ssdef 'JSONHighlighter' has very short docstring",
        "Class 'JSONHighlighter' docstring should reference relevant architecture documents",
        "Class 'ISO8601Highlighter' docstring should reference relevant architecture documents",
        "Class 'ISO8601Highlighter' should include Architecture Context section linking to design documents",
        "Function 'highlight' missing Returns documentation",
        "ctiondef 'highlight' has very short docstring",
        "Function 'highlight' missing Returns documentation",
        "Function 'highlight' missing Returns documentation",
        "Function 'highlight' missing usage example",
        "Class 'Highlighter' should have __init__ method",
        "Class 'NullHighlighter' should have __init__ method",
        "Class 'RegexHighlighter' should have __init__ method",
        "Class 'ReprHighlighter' should have __init__ method",
        "Class 'JSONHighlighter' should have __init__ method",
        "Class 'ISO8601Highlighter' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/json.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'JSON' docstring should reference relevant architecture documents",
        "Class 'JSON' should include Architecture Context section linking to design documents",
        "Function 'from_data' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/jupyter.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'display' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'JupyterRenderable' docstring should reference relevant architecture documents",
        "Class 'JupyterMixin' docstring should reference relevant architecture documents",
        "Function 'display' missing Returns documentation",
        "Function 'print' missing Returns documentation",
        "ctiondef 'escape' has very short docstring",
        "Function 'escape' missing Returns documentation",
        "Class 'JupyterMixin' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/layout.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_tree_icon'",
        "Missing docstring for ctiondef 'divide'",
        "Missing docstring for ctiondef 'get_tree_icon'",
        "Missing docstring for ctiondef 'divide'",
        "Missing docstring for ctiondef 'summary'",
        "Missing docstring for ctiondef 'recurse'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'LayoutRender' docstring should reference relevant architecture documents",
        "Class 'LayoutError' docstring should reference relevant architecture documents",
        "Class 'NoSplitter' docstring should reference relevant architecture documents",
        "Class 'Splitter' docstring should reference relevant architecture documents",
        "Class 'RowSplitter' docstring should reference relevant architecture documents",
        "Class 'ColumnSplitter' docstring should reference relevant architecture documents",
        "Class 'Layout' docstring should reference relevant architecture documents",
        "Class 'Layout' should include Architecture Context section linking to design documents",
        "Function 'get_tree_icon' missing Returns documentation",
        "Function 'divide' missing Returns documentation",
        "Function 'divide' missing usage example",
        "ctiondef 'renderable' has very short docstring",
        "Function 'renderable' missing Returns documentation",
        "Function 'children' missing Returns documentation",
        "Function 'map' missing Returns documentation",
        "Function 'get' missing usage example",
        "Function 'tree' missing Returns documentation",
        "Function 'split' missing Returns documentation",
        "Function 'split' missing usage example",
        "Function 'add_split' missing Returns documentation",
        "Function 'add_split' missing usage example",
        "Function 'split_row' missing Returns documentation",
        "Function 'split_row' missing usage example",
        "Function 'split_column' missing Returns documentation",
        "Function 'split_column' missing usage example",
        "Function 'unsplit' missing Returns documentation",
        "Function 'update' missing Returns documentation",
        "Function 'refresh_screen' missing Returns documentation",
        "Function 'refresh_screen' missing usage example",
        "Function 'render' missing usage example",
        "Class 'LayoutRender' should have __init__ method",
        "Class 'Splitter' should have __init__ method",
        "Class 'RowSplitter' should have __init__ method",
        "Class 'ColumnSplitter' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/live.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'stop'",
        "Missing docstring for ctiondef 'run'",
        "Missing docstring for ctiondef 'get_renderable'",
        "Function 'process_renderables' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Live' docstring should reference relevant architecture documents",
        "Class 'Live' should include Architecture Context section linking to design documents",
        "Function 'is_started' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "Function 'stop' missing Returns documentation",
        "Function 'update' missing Returns documentation",
        "Function 'update' missing usage example",
        "Function 'refresh' missing Returns documentation",
        "Function 'process_renderables' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/live_render.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'LiveRender' docstring should reference relevant architecture documents",
        "Class 'LiveRender' should include Architecture Context section linking to design documents",
        "Function 'set_renderable' missing Returns documentation",
        "Function 'position_cursor' missing usage example",
        "Function 'restore_cursor' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/logging.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'emit' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'divide'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'RichHandler' docstring should reference relevant architecture documents",
        "Class 'RichHandler' should include Architecture Context section linking to design documents",
        "Function 'get_level_text' missing usage example",
        "ctiondef 'emit' has very short docstring",
        "Function 'emit' missing Returns documentation",
        "Function 'render_message' missing usage example",
        "Function 'render' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/markup.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Tag' docstring should reference relevant architecture documents",
        "Function 'escape' missing usage example",
        "Function 'render' missing usage example",
        "Function 'markup' missing Returns documentation",
        "Function 'escape_backslashes' missing Returns documentation",
        "Function 'pop_style' missing Returns documentation",
        "Class 'Tag' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/measure.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Measurement' docstring should reference relevant architecture documents",
        "Function 'measure_renderables' missing usage example",
        "Function 'span' missing Returns documentation",
        "Function 'normalize' missing usage example",
        "Function 'with_maximum' missing usage example",
        "Function 'with_minimum' missing usage example",
        "Function 'clamp' missing usage example",
        "Function 'get' missing usage example",
        "Class 'Measurement' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/padding.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Padding' docstring should reference relevant architecture documents",
        "Class 'Padding' should include Architecture Context section linking to design documents",
        "Function 'indent' missing usage example",
        "Function 'unpack' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/pager.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'show' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Pager' docstring should reference relevant architecture documents",
        "Class 'SystemPager' docstring should reference relevant architecture documents",
        "Function 'show' missing Returns documentation",
        "Function 'show' missing Returns documentation",
        "Class 'Pager' should have __init__ method",
        "Class 'SystemPager' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/palette.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'ColorBox'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Palette' docstring should reference relevant architecture documents",
        "Function 'match' missing usage example",
        "Function 'get_color_distance' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/panel.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'fit' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Panel' docstring should reference relevant architecture documents",
        "Class 'Panel' should include Architecture Context section linking to design documents",
        "Function 'fit' missing Returns documentation",
        "Function 'align_text' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/pretty.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'check_length' has parameters but no Args/Parameters documentation",
        "Function 'expand' has parameters but no Args/Parameters documentation",
        "Missing docstring for ssdef 'BrokenRepr'",
        "Missing docstring for ssdef 'StockKeepingUnit'",
        "Missing docstring for ssdef 'Thing'",
        "Missing docstring for ssdef 'RichFormatter'",
        "Missing docstring for ctiondef 'iter_rich_args'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'install' missing Returns documentation",
        "Function 'install' missing usage example",
        "Class 'Pretty' docstring should reference relevant architecture documents",
        "Class 'Pretty' should include Architecture Context section linking to design documents",
        "Function 'is_expandable' missing Returns documentation",
        "Class 'Node' docstring should reference relevant architecture documents",
        "Function 'traverse' missing usage example",
        "Function 'pretty_repr' missing usage example",
        "Function 'pprint' missing Returns documentation",
        "Function 'pprint' missing usage example",
        "Function 'display_hook' missing Returns documentation",
        "Function 'iter_tokens' missing Returns documentation",
        "Function 'check_length' missing usage example",
        "Function 'render' missing usage example",
        "Function 'expandable' missing Returns documentation",
        "Function 'check_length' missing Returns documentation",
        "Function 'expand' missing Returns documentation",
        "Function 'to_repr' missing Returns documentation",
        "Function 'iter_attrs' missing Returns documentation",
        "Class 'Node' should have __init__ method",
        "Class '_Line' should have __init__ method",
        "Class 'StockKeepingUnit' should have __init__ method",
        "Class 'RichFormatter' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/progress.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'open'",
        "Missing docstring for ctiondef 'open'",
        "Missing docstring for ctiondef 'run'",
        "Missing docstring for ctiondef 'closed'",
        "Missing docstring for ctiondef 'fileno'",
        "Missing docstring for ctiondef 'isatty'",
        "Missing docstring for ctiondef 'mode'",
        "Missing docstring for ctiondef 'name'",
        "Missing docstring for ctiondef 'readable'",
        "Missing docstring for ctiondef 'seekable'",
        "Missing docstring for ctiondef 'writable'",
        "Missing docstring for ctiondef 'read'",
        "Missing docstring for ctiondef 'readinto'",
        "Missing docstring for ctiondef 'readline'",
        "Missing docstring for ctiondef 'readlines'",
        "Missing docstring for ctiondef 'close'",
        "Missing docstring for ctiondef 'seek'",
        "Missing docstring for ctiondef 'tell'",
        "Missing docstring for ctiondef 'write'",
        "Missing docstring for ctiondef 'writelines'",
        "Function 'render' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'render'",
        "Missing docstring for ctiondef 'render'",
        "Missing docstring for ctiondef 'render'",
        "Function 'render' has parameters but no Args/Parameters documentation",
        "Function 'render' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'render'",
        "Function 'render' has parameters but no Args/Parameters documentation",
        "Function 'render' has parameters but no Args/Parameters documentation",
        "Function 'render' has parameters but no Args/Parameters documentation",
        "Function 'render' has parameters but no Args/Parameters documentation",
        "Function 'render' has parameters but no Args/Parameters documentation",
        "Function 'render' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'console'",
        "Missing docstring for ctiondef 'open'",
        "Missing docstring for ctiondef 'open'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'track' missing usage example",
        "Function 'wrap_file' missing usage example",
        "Function 'open' missing usage example",
        "Class 'ProgressColumn' docstring should reference relevant architecture documents",
        "Class 'RenderableColumn' docstring should reference relevant architecture documents",
        "Class 'RenderableColumn' should include Architecture Context section linking to design documents",
        "Class 'SpinnerColumn' docstring should reference relevant architecture documents",
        "Class 'SpinnerColumn' should include Architecture Context section linking to design documents",
        "Class 'TextColumn' docstring should reference relevant architecture documents",
        "Class 'BarColumn' docstring should reference relevant architecture documents",
        "Class 'BarColumn' should include Architecture Context section linking to design documents",
        "Class 'TimeElapsedColumn' docstring should reference relevant architecture documents",
        "Class 'TaskProgressColumn' docstring should reference relevant architecture documents",
        "Class 'TaskProgressColumn' should include Architecture Context section linking to design documents",
        "Class 'TimeRemainingColumn' docstring should reference relevant architecture documents",
        "Class 'TimeRemainingColumn' should include Architecture Context section linking to design documents",
        "Class 'FileSizeColumn' docstring should reference relevant architecture documents",
        "Class 'TotalFileSizeColumn' docstring should reference relevant architecture documents",
        "Class 'MofNCompleteColumn' docstring should reference relevant architecture documents",
        "Class 'MofNCompleteColumn' should include Architecture Context section linking to design documents",
        "Class 'DownloadColumn' docstring should reference relevant architecture documents",
        "Class 'DownloadColumn' should include Architecture Context section linking to design documents",
        "Class 'TransferSpeedColumn' docstring should reference relevant architecture documents",
        "Class 'ProgressSample' docstring should reference relevant architecture documents",
        "Class 'Task' docstring should reference relevant architecture documents",
        "Class 'Task' should include Architecture Context section linking to design documents",
        "Class 'Progress' docstring should reference relevant architecture documents",
        "Class 'Progress' should include Architecture Context section linking to design documents",
        "Function 'get_table_column' missing Returns documentation",
        "Function 'render' missing Returns documentation",
        "Function 'set_spinner' missing Returns documentation",
        "Function 'set_spinner' missing usage example",
        "Function 'render' missing Returns documentation",
        "ctiondef 'render' has very short docstring",
        "Function 'render' missing Returns documentation",
        "Function 'render_speed' missing usage example",
        "Function 'render' missing Returns documentation",
        "Function 'render' missing Returns documentation",
        "Function 'render' missing Returns documentation",
        "Function 'render' missing Returns documentation",
        "Function 'render' missing Returns documentation",
        "Function 'render' missing Returns documentation",
        "Function 'get_time' missing Returns documentation",
        "Function 'started' missing Returns documentation",
        "Function 'remaining' missing Returns documentation",
        "Function 'elapsed' missing Returns documentation",
        "Function 'finished' missing Returns documentation",
        "Function 'percentage' missing Returns documentation",
        "Function 'speed' missing Returns documentation",
        "Function 'time_remaining' missing Returns documentation",
        "Function 'get_default_columns' missing Returns documentation",
        "Function 'get_default_columns' missing usage example",
        "Function 'tasks' missing Returns documentation",
        "ctiondef 'task_ids' has very short docstring",
        "Function 'task_ids' missing Returns documentation",
        "Function 'finished' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "Function 'stop' missing Returns documentation",
        "Function 'track' missing usage example",
        "Function 'wrap_file' missing usage example",
        "Function 'open' missing usage example",
        "Function 'start_task' missing Returns documentation",
        "Function 'start_task' missing usage example",
        "Function 'stop_task' missing Returns documentation",
        "Function 'stop_task' missing usage example",
        "Function 'update' missing Returns documentation",
        "Function 'update' missing usage example",
        "Function 'reset' missing Returns documentation",
        "Function 'reset' missing usage example",
        "Function 'advance' missing Returns documentation",
        "Function 'advance' missing usage example",
        "Function 'refresh' missing Returns documentation",
        "Function 'get_renderable' missing Returns documentation",
        "Function 'get_renderables' missing Returns documentation",
        "Function 'make_tasks_table' missing usage example",
        "Function 'add_task' missing usage example",
        "Function 'remove_task' missing Returns documentation",
        "Class 'TimeElapsedColumn' should have __init__ method",
        "Class 'FileSizeColumn' should have __init__ method",
        "Class 'TotalFileSizeColumn' should have __init__ method",
        "Class 'TransferSpeedColumn' should have __init__ method",
        "Class 'ProgressSample' should have __init__ method",
        "Class 'Task' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/progress_bar.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ProgressBar' docstring should reference relevant architecture documents",
        "Class 'ProgressBar' should include Architecture Context section linking to design documents",
        "Function 'percentage_completed' missing Returns documentation",
        "Function 'update' missing Returns documentation",
        "Function 'update' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/prompt.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'ask'",
        "Missing docstring for ctiondef 'ask'",
        "Function 'render_default' has parameters but no Args/Parameters documentation",
        "Function 'process_response' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PromptError' docstring should reference relevant architecture documents",
        "Class 'InvalidResponse' docstring should reference relevant architecture documents",
        "Class 'InvalidResponse' should include Architecture Context section linking to design documents",
        "Class 'PromptBase' docstring should reference relevant architecture documents",
        "Class 'PromptBase' should include Architecture Context section linking to design documents",
        "Class 'Prompt' docstring should reference relevant architecture documents",
        "Class 'IntPrompt' docstring should reference relevant architecture documents",
        "Class 'IntPrompt' should include Architecture Context section linking to design documents",
        "Class 'FloatPrompt' docstring should reference relevant architecture documents",
        "Class 'FloatPrompt' should include Architecture Context section linking to design documents",
        "Class 'Confirm' docstring should reference relevant architecture documents",
        "Function 'ask' missing Returns documentation",
        "Function 'render_default' missing usage example",
        "Function 'make_prompt' missing usage example",
        "Function 'get_input' missing usage example",
        "Function 'check_choice' missing usage example",
        "Function 'process_response' missing usage example",
        "Function 'on_validate_error' missing Returns documentation",
        "Function 'on_validate_error' missing usage example",
        "Function 'pre_prompt' missing Returns documentation",
        "Function 'render_default' missing Returns documentation",
        "Function 'process_response' missing Returns documentation",
        "Class 'Prompt' should have __init__ method",
        "Class 'IntPrompt' should have __init__ method",
        "Class 'FloatPrompt' should have __init__ method",
        "Class 'Confirm' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/protocol.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'is_renderable' missing Returns documentation",
        "Function 'rich_cast' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/region.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Region' docstring should reference relevant architecture documents",
        "Class 'Region' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/repr.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'auto'",
        "Missing docstring for ctiondef 'auto'",
        "Missing docstring for ctiondef 'rich_repr'",
        "Missing docstring for ctiondef 'rich_repr'",
        "Missing docstring for ctiondef 'rich_repr'",
        "Missing docstring for ctiondef 'do_replace'",
        "Missing docstring for ssdef 'Foo'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ReprError' docstring should reference relevant architecture documents",
        "Function 'auto' missing Returns documentation",
        "Function 'auto_repr' missing Returns documentation",
        "Function 'auto_rich_repr' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/rule.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Rule' docstring should reference relevant architecture documents",
        "Class 'Rule' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/scope.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'test'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'render_scope' missing usage example",
        "Function 'sort_items' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/screen.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Screen' docstring should reference relevant architecture documents",
        "Class 'Screen' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/segment.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'SegmentLines'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ControlType' docstring should reference relevant architecture documents",
        "Class 'Segment' docstring should reference relevant architecture documents",
        "Class 'Segment' should include Architecture Context section linking to design documents",
        "Class 'Segments' docstring should reference relevant architecture documents",
        "Class 'Segments' should include Architecture Context section linking to design documents",
        "Function 'is_control' missing Returns documentation",
        "Function 'split_cells' missing usage example",
        "Function 'line' missing Returns documentation",
        "Function 'apply_style' missing usage example",
        "Function 'filter_control' missing usage example",
        "Function 'split_lines' missing Returns documentation",
        "Function 'split_lines' missing usage example",
        "Function 'split_and_crop_lines' missing usage example",
        "Function 'adjust_line_length' missing usage example",
        "Function 'get_line_length' missing usage example",
        "Function 'get_shape' missing usage example",
        "Function 'set_shape' missing usage example",
        "Function 'align_top' missing usage example",
        "Function 'align_bottom' missing usage example",
        "Function 'align_middle' missing usage example",
        "Function 'simplify' missing usage example",
        "Function 'strip_links' missing Returns documentation",
        "Function 'strip_links' missing usage example",
        "Function 'strip_styles' missing Returns documentation",
        "Function 'strip_styles' missing usage example",
        "Function 'remove_color' missing Returns documentation",
        "Function 'remove_color' missing usage example",
        "Function 'divide' missing Returns documentation",
        "Function 'divide' missing usage example",
        "Class 'ControlType' should have __init__ method",
        "Class 'Segment' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/spinner.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Spinner' docstring should reference relevant architecture documents",
        "Class 'Spinner' should include Architecture Context section linking to design documents",
        "Function 'render' missing usage example",
        "Function 'update' missing Returns documentation",
        "Function 'update' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/status.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'renderable'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Status' docstring should reference relevant architecture documents",
        "Class 'Status' should include Architecture Context section linking to design documents",
        "Function 'console' missing Returns documentation",
        "Function 'update' missing Returns documentation",
        "Function 'update' missing usage example",
        "Function 'start' missing Returns documentation",
        "Function 'stop' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/style.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'from_color' has parameters but no Args/Parameters documentation",
        "Function 'from_meta' has parameters but no Args/Parameters documentation",
        "Function 'get_html_style' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Style' docstring should reference relevant architecture documents",
        "Class 'Style' should include Architecture Context section linking to design documents",
        "ssdef 'StyleStack' has very short docstring",
        "Class 'StyleStack' docstring should reference relevant architecture documents",
        "Function 'null' missing Returns documentation",
        "Function 'from_color' missing usage example",
        "Function 'from_meta' missing usage example",
        "Function 'link_id' missing Returns documentation",
        "Function 'normalize' missing usage example",
        "Function 'pick_first' missing Returns documentation",
        "Function 'color' missing Returns documentation",
        "Function 'bgcolor' missing Returns documentation",
        "ctiondef 'link' has very short docstring",
        "Function 'link' missing Returns documentation",
        "Function 'transparent_background' missing Returns documentation",
        "Function 'background_style' missing Returns documentation",
        "Function 'meta' missing Returns documentation",
        "Function 'without_color' missing Returns documentation",
        "Function 'parse' missing usage example",
        "Function 'get_html_style' missing Returns documentation",
        "Function 'combine' missing usage example",
        "Function 'chain' missing usage example",
        "Function 'clear_meta_and_links' missing usage example",
        "Function 'update_link' missing usage example",
        "Function 'render' missing usage example",
        "Function 'test' missing Returns documentation",
        "Function 'test' missing usage example",
        "Function 'current' missing Returns documentation",
        "Function 'push' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/styled.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Styled' docstring should reference relevant architecture documents",
        "Class 'Styled' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/syntax.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get_style_for_token' has parameters but no Args/Parameters documentation",
        "Function 'get_style_for_token' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_background_style'",
        "Function 'get_style_for_token' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_background_style'",
        "Function 'get_theme' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SyntaxTheme' docstring should reference relevant architecture documents",
        "Class 'PygmentsSyntaxTheme' docstring should reference relevant architecture documents",
        "Class 'ANSISyntaxTheme' docstring should reference relevant architecture documents",
        "Class 'Syntax' docstring should reference relevant architecture documents",
        "Class 'Syntax' should include Architecture Context section linking to design documents",
        "Function 'get_style_for_token' missing Returns documentation",
        "Function 'get_background_style' missing Returns documentation",
        "Function 'get_style_for_token' missing Returns documentation",
        "Function 'get_style_for_token' missing Returns documentation",
        "Function 'get_theme' missing Returns documentation",
        "Function 'from_path' missing usage example",
        "Function 'guess_lexer' missing usage example",
        "Function 'lexer' missing Returns documentation",
        "Function 'lexer' missing usage example",
        "Function 'default_lexer' missing Returns documentation",
        "Function 'highlight' missing usage example",
        "Function 'stylize_range' missing Returns documentation",
        "Function 'stylize_range' missing usage example",
        "Function 'line_tokenize' missing Returns documentation",
        "Function 'tokens_to_spans' missing Returns documentation",
        "Class 'SyntaxTheme' should have __init__ method",
        "Class '_SyntaxHighlightRange' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/table.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'expand' has parameters but no Args/Parameters documentation",
        "Function 'get_row_style' has parameters but no Args/Parameters documentation",
        "Function 'padding' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'add_cell'",
        "Missing docstring for ctiondef 'render_annotation'",
        "Missing docstring for ctiondef 'get_padding'",
        "Missing docstring for ctiondef 'header'",
        "Missing docstring for ctiondef 'align_cell'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Column' docstring should reference relevant architecture documents",
        "Class 'Column' should include Architecture Context section linking to design documents",
        "Class 'Row' docstring should reference relevant architecture documents",
        "Class 'Table' docstring should reference relevant architecture documents",
        "Class 'Table' should include Architecture Context section linking to design documents",
        "Function 'copy' missing Returns documentation",
        "Function 'cells' missing Returns documentation",
        "Function 'flexible' missing Returns documentation",
        "Function 'grid' missing usage example",
        "Function 'expand' missing Returns documentation",
        "ctiondef 'expand' has very short docstring",
        "Function 'expand' missing Returns documentation",
        "Function 'row_count' missing Returns documentation",
        "Function 'get_row_style' missing Returns documentation",
        "ctiondef 'padding' has very short docstring",
        "Function 'padding' missing Returns documentation",
        "ctiondef 'padding' has very short docstring",
        "Function 'padding' missing Returns documentation",
        "Function 'add_column' missing Returns documentation",
        "Function 'add_column' missing usage example",
        "Function 'add_row' missing Returns documentation",
        "Function 'add_row' missing usage example",
        "Function 'add_section' missing Returns documentation",
        "Class 'Column' should have __init__ method",
        "Class 'Row' should have __init__ method",
        "Class '_Cell' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/terminal_theme.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'TerminalTheme' docstring should reference relevant architecture documents",
        "Class 'TerminalTheme' should include Architecture Context section linking to design documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/text.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'split' has parameters but no Args/Parameters documentation",
        "Function 'plain' has parameters but no Args/Parameters documentation",
        "Function 'spans' has parameters but no Args/Parameters documentation",
        "Function 'blank_copy' has parameters but no Args/Parameters documentation",
        "Function 'set_length' has parameters but no Args/Parameters documentation",
        "Function 'right_crop' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_text_at'",
        "Missing docstring for ctiondef 'iter_text'",
        "Missing docstring for ctiondef 'flatten_spans'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Span' docstring should reference relevant architecture documents",
        "Class 'Text' docstring should reference relevant architecture documents",
        "Class 'Text' should include Architecture Context section linking to design documents",
        "Function 'split' missing Returns documentation",
        "Function 'move' missing usage example",
        "Function 'right_crop' missing usage example",
        "Function 'extend' missing usage example",
        "Function 'cell_len' missing Returns documentation",
        "Function 'markup' missing usage example",
        "Function 'from_markup' missing usage example",
        "Function 'from_ansi' missing Returns documentation",
        "Function 'from_ansi' missing usage example",
        "Function 'styled' missing usage example",
        "Function 'assemble' missing usage example",
        "Function 'plain' missing Returns documentation",
        "Function 'plain' missing Returns documentation",
        "Function 'spans' missing Returns documentation",
        "ctiondef 'spans' has very short docstring",
        "Function 'spans' missing Returns documentation",
        "Function 'blank_copy' missing Returns documentation",
        "Function 'copy' missing Returns documentation",
        "Function 'stylize' missing Returns documentation",
        "Function 'stylize' missing usage example",
        "Function 'stylize_before' missing Returns documentation",
        "Function 'stylize_before' missing usage example",
        "Function 'apply_meta' missing Returns documentation",
        "Function 'apply_meta' missing usage example",
        "Function 'remove_suffix' missing Returns documentation",
        "Function 'get_style_at_offset' missing usage example",
        "Function 'extend_style' missing Returns documentation",
        "Function 'extend_style' missing usage example",
        "Function 'highlight_regex' missing usage example",
        "Function 'highlight_words' missing usage example",
        "Function 'rstrip' missing Returns documentation",
        "Function 'rstrip_end' missing Returns documentation",
        "Function 'rstrip_end' missing usage example",
        "Function 'set_length' missing Returns documentation",
        "Function 'render' missing usage example",
        "Function 'join' missing usage example",
        "Function 'expand_tabs' missing Returns documentation",
        "Function 'truncate' missing Returns documentation",
        "Function 'truncate' missing usage example",
        "Function 'pad' missing Returns documentation",
        "Function 'pad' missing usage example",
        "Function 'pad_left' missing Returns documentation",
        "Function 'pad_left' missing usage example",
        "Function 'pad_right' missing Returns documentation",
        "Function 'pad_right' missing usage example",
        "Function 'align' missing Returns documentation",
        "Function 'align' missing usage example",
        "Function 'append' missing usage example",
        "Function 'append_text' missing usage example",
        "Function 'append_tokens' missing usage example",
        "Function 'copy_styles' missing Returns documentation",
        "Function 'copy_styles' missing usage example",
        "Function 'split' missing usage example",
        "Function 'divide' missing usage example",
        "Function 'right_crop' missing Returns documentation",
        "Function 'wrap' missing usage example",
        "Function 'fit' missing usage example",
        "Function 'with_indent_guides' missing usage example",
        "Function 'get_current_style' missing Returns documentation",
        "Class 'Span' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/theme.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Theme' docstring should reference relevant architecture documents",
        "Class 'Theme' should include Architecture Context section linking to design documents",
        "Class 'ThemeStackError' docstring should reference relevant architecture documents",
        "Class 'ThemeStack' docstring should reference relevant architecture documents",
        "Function 'config' missing Returns documentation",
        "Function 'from_file' missing usage example",
        "Function 'read' missing usage example",
        "Function 'push_theme' missing Returns documentation",
        "Function 'push_theme' missing usage example",
        "Function 'pop_theme' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/themes.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/traceback.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'Frame'",
        "Missing docstring for ssdef 'Stack'",
        "Missing docstring for ssdef 'Trace'",
        "Missing docstring for ssdef 'PathHighlighter'",
        "Missing docstring for ctiondef 'excepthook'",
        "Missing docstring for ctiondef 'ipy_excepthook_closure'",
        "Missing docstring for ctiondef 'bar'",
        "Missing docstring for ctiondef 'foo'",
        "Missing docstring for ctiondef 'error'",
        "Missing docstring for ctiondef 'render_locals'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'install' missing usage example",
        "Class 'Traceback' docstring should reference relevant architecture documents",
        "Class 'Traceback' should include Architecture Context section linking to design documents",
        "Function 'from_exception' missing usage example",
        "Function 'extract' missing usage example",
        "Function 'ipy_show_traceback' missing Returns documentation",
        "Function 'ipy_display_traceback' missing Returns documentation",
        "Function 'safe_str' missing Returns documentation",
        "Function 'read_code' missing usage example",
        "Function 'get_locals' missing Returns documentation",
        "Class 'Frame' should have __init__ method",
        "Class '_SyntaxError' should have __init__ method",
        "Class 'Stack' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/rich/tree.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'make_guide' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Tree' docstring should reference relevant architecture documents",
        "Class 'Tree' should include Architecture Context section linking to design documents",
        "Function 'add' missing usage example",
        "Function 'make_guide' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/tomli/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/tomli/_parser.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'NestedDict'",
        "Missing docstring for ssdef 'Output'",
        "Missing docstring for ctiondef 'skip_chars'",
        "Missing docstring for ctiondef 'skip_until'",
        "Missing docstring for ctiondef 'skip_comment'",
        "Missing docstring for ctiondef 'skip_comments_and_array_ws'",
        "Missing docstring for ctiondef 'create_dict_rule'",
        "Missing docstring for ctiondef 'create_list_rule'",
        "Missing docstring for ctiondef 'key_value_rule'",
        "Missing docstring for ctiondef 'parse_key_value_pair'",
        "Missing docstring for ctiondef 'parse_key'",
        "Missing docstring for ctiondef 'parse_key_part'",
        "Missing docstring for ctiondef 'parse_one_line_basic_str'",
        "Missing docstring for ctiondef 'parse_array'",
        "Missing docstring for ctiondef 'parse_inline_table'",
        "Missing docstring for ctiondef 'parse_basic_str_escape'",
        "Missing docstring for ctiondef 'parse_basic_str_escape_multiline'",
        "Missing docstring for ctiondef 'parse_hex_char'",
        "Missing docstring for ctiondef 'parse_literal_str'",
        "Missing docstring for ctiondef 'parse_multiline_str'",
        "Missing docstring for ctiondef 'parse_basic_str'",
        "Missing docstring for ctiondef 'parse_value'",
        "Missing docstring for ctiondef 'is_unicode_scalar_value'",
        "Missing docstring for ctiondef 'add_pending'",
        "Missing docstring for ctiondef 'finalize_pending'",
        "Missing docstring for ctiondef 'unset_all'",
        "Missing docstring for ctiondef 'set'",
        "Missing docstring for ctiondef 'is_'",
        "Missing docstring for ctiondef 'get_or_create_nest'",
        "Missing docstring for ctiondef 'append_nest_to_list'",
        "Missing docstring for ctiondef 'safe_parse_float'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'DEPRECATED_DEFAULT' docstring should reference relevant architecture documents",
        "Class 'DEPRECATED_DEFAULT' should include Architecture Context section linking to design documents",
        "Class 'TOMLDecodeError' docstring should reference relevant architecture documents",
        "Class 'TOMLDecodeError' should include Architecture Context section linking to design documents",
        "Function 'load' missing Returns documentation",
        "Function 'loads' missing Returns documentation",
        "Class 'Flags' docstring should reference relevant architecture documents",
        "Function 'make_safe_parse_float' missing Returns documentation",
        "Function 'make_safe_parse_float' missing usage example",
        "Class 'Output' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/tomli/_re.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'cached_tz'",
        "Missing docstring for ctiondef 'match_to_localtime'",
        "Missing docstring for ctiondef 'match_to_number'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'match_to_datetime' missing Returns documentation",
        "Function 'match_to_datetime' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/tomli/_types.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/truststore/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/truststore/_api.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'wrap_socket'",
        "Missing docstring for ctiondef 'wrap_bio'",
        "Missing docstring for ctiondef 'load_verify_locations'",
        "Missing docstring for ctiondef 'load_cert_chain'",
        "Missing docstring for ctiondef 'load_default_certs'",
        "Missing docstring for ctiondef 'set_alpn_protocols'",
        "Missing docstring for ctiondef 'set_npn_protocols'",
        "Missing docstring for ctiondef 'set_ciphers'",
        "Missing docstring for ctiondef 'get_ciphers'",
        "Missing docstring for ctiondef 'session_stats'",
        "Missing docstring for ctiondef 'cert_store_stats'",
        "Missing docstring for ctiondef 'set_default_verify_paths'",
        "Missing docstring for ctiondef 'get_ca_certs'",
        "Missing docstring for ctiondef 'get_ca_certs'",
        "Missing docstring for ctiondef 'get_ca_certs'",
        "Missing docstring for ctiondef 'get_ca_certs'",
        "Missing docstring for ctiondef 'check_hostname'",
        "Missing docstring for ctiondef 'check_hostname'",
        "Missing docstring for ctiondef 'hostname_checks_common_name'",
        "Missing docstring for ctiondef 'hostname_checks_common_name'",
        "Missing docstring for ctiondef 'keylog_filename'",
        "Missing docstring for ctiondef 'keylog_filename'",
        "Missing docstring for ctiondef 'maximum_version'",
        "Missing docstring for ctiondef 'maximum_version'",
        "Missing docstring for ctiondef 'minimum_version'",
        "Missing docstring for ctiondef 'minimum_version'",
        "Missing docstring for ctiondef 'options'",
        "Missing docstring for ctiondef 'options'",
        "Missing docstring for ctiondef 'post_handshake_auth'",
        "Missing docstring for ctiondef 'post_handshake_auth'",
        "Missing docstring for ctiondef 'protocol'",
        "Missing docstring for ctiondef 'security_level'",
        "Missing docstring for ctiondef 'verify_flags'",
        "Missing docstring for ctiondef 'verify_flags'",
        "Missing docstring for ctiondef 'verify_mode'",
        "Missing docstring for ctiondef 'verify_mode'",
        "Missing docstring for ssdef 'TruststoreSSLObject'",
        "Missing docstring for ctiondef 'do_handshake'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'inject_into_ssl' missing Returns documentation",
        "Function 'inject_into_ssl' missing usage example",
        "Function 'extract_from_ssl' missing Returns documentation",
        "Class 'SSLContext' docstring should reference relevant architecture documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/truststore/_macos.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'CFConst' docstring should reference relevant architecture documents",
        "Class 'CFConst' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/truststore/_openssl.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.011428571428571399,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/truststore/_ssl_constants.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [],
      "score": 0.27142857142857135,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/truststore/_windows.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'CERT_CONTEXT'",
        "Missing docstring for ssdef 'CERT_ENHKEY_USAGE'",
        "Missing docstring for ssdef 'CERT_USAGE_MATCH'",
        "Missing docstring for ssdef 'CERT_CHAIN_PARA'",
        "Missing docstring for ssdef 'CERT_TRUST_STATUS'",
        "Missing docstring for ssdef 'CERT_CHAIN_ELEMENT'",
        "Missing docstring for ssdef 'CERT_SIMPLE_CHAIN'",
        "Missing docstring for ssdef 'CERT_CHAIN_CONTEXT'",
        "Missing docstring for ssdef 'SSL_EXTRA_CERT_CHAIN_POLICY_PARA'",
        "Missing docstring for ssdef 'CERT_CHAIN_POLICY_PARA'",
        "Missing docstring for ssdef 'CERT_CHAIN_POLICY_STATUS'",
        "Missing docstring for ssdef 'CERT_CHAIN_ENGINE_CONFIG'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/typing_extensions.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'IntVar'",
        "Missing docstring for ssdef 'Protocol'",
        "Missing docstring for ssdef 'SupportsIndex'",
        "Missing docstring for ctiondef 'inner'",
        "Function 'get_type_hints' has parameters but no Args/Parameters documentation",
        "Missing docstring for ssdef 'NoDefaultTypeMeta'",
        "Function 'LiteralString' has parameters but no Args/Parameters documentation",
        "Function 'Self' has parameters but no Args/Parameters documentation",
        "Function 'Never' has parameters but no Args/Parameters documentation",
        "Function '__new__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'copy_with'",
        "Function 'TypeAlias' has parameters but no Args/Parameters documentation",
        "Function 'Concatenate' has parameters but no Args/Parameters documentation",
        "Function 'TypeGuard' has parameters but no Args/Parameters documentation",
        "Function 'TypeIs' has parameters but no Args/Parameters documentation",
        "Function 'Required' has parameters but no Args/Parameters documentation",
        "Function 'NotRequired' has parameters but no Args/Parameters documentation",
        "Function 'ReadOnly' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'Unpack'",
        "Missing docstring for ctiondef 'decorator'",
        "Missing docstring for ctiondef 'args'",
        "Missing docstring for ctiondef 'kwargs'",
        "Missing docstring for ssdef 'Dummy'",
        "Missing docstring for ctiondef 'wrapper'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Any' docstring should reference relevant architecture documents",
        "Class 'Any' should include Architecture Context section linking to design documents",
        "Function 'final' missing Returns documentation",
        "Function 'final' missing usage example",
        "Function 'overload' missing Returns documentation",
        "Function 'overload' missing usage example",
        "Function 'get_overloads' missing Returns documentation",
        "Function 'clear_overloads' missing Returns documentation",
        "Function 'runtime_checkable' missing Returns documentation",
        "Function 'runtime_checkable' missing usage example",
        "Class 'SupportsInt' docstring should reference relevant architecture documents",
        "Class 'SupportsFloat' docstring should reference relevant architecture documents",
        "Class 'SupportsComplex' docstring should reference relevant architecture documents",
        "Class 'SupportsBytes' docstring should reference relevant architecture documents",
        "Class 'SupportsAbs' docstring should reference relevant architecture documents",
        "Class 'SupportsRound' docstring should reference relevant architecture documents",
        "Function 'TypedDict' missing Returns documentation",
        "Function 'TypedDict' missing usage example",
        "Function 'is_typeddict' missing Returns documentation",
        "Function 'is_typeddict' missing usage example",
        "Function 'assert_type' missing Returns documentation",
        "Function 'assert_type' missing usage example",
        "Function 'get_type_hints' missing Returns documentation",
        "Function 'get_type_hints' missing usage example",
        "Class 'Annotated' docstring should reference relevant architecture documents",
        "Class 'Annotated' should include Architecture Context section linking to design documents",
        "Function 'get_origin' missing Returns documentation",
        "Function 'get_args' missing Returns documentation",
        "Class 'NoDefaultType' docstring should reference relevant architecture documents",
        "ssdef 'TypeVar' has very short docstring",
        "Class 'TypeVar' docstring should reference relevant architecture documents",
        "Class 'ParamSpecArgs' docstring should reference relevant architecture documents",
        "Class 'ParamSpecArgs' should include Architecture Context section linking to design documents",
        "Class 'ParamSpecKwargs' docstring should reference relevant architecture documents",
        "Class 'ParamSpecKwargs' should include Architecture Context section linking to design documents",
        "Function 'LiteralString' missing Returns documentation",
        "Function 'Self' missing Returns documentation",
        "Function 'Never' missing Returns documentation",
        "Function 'Never' missing usage example",
        "Function 'reveal_type' missing Returns documentation",
        "Function 'reveal_type' missing usage example",
        "Function 'assert_never' missing Returns documentation",
        "Function 'dataclass_transform' missing Returns documentation",
        "Function 'override' missing Returns documentation",
        "Function 'override' missing usage example",
        "Class 'deprecated' docstring should reference relevant architecture documents",
        "Class 'deprecated' should include Architecture Context section linking to design documents",
        "Function 'NamedTuple' missing Returns documentation",
        "Function 'NamedTuple' missing usage example",
        "Class 'Buffer' docstring should reference relevant architecture documents",
        "Class 'Buffer' should include Architecture Context section linking to design documents",
        "Function 'get_original_bases' missing Returns documentation",
        "Class 'NewType' docstring should reference relevant architecture documents",
        "Class 'NewType' should include Architecture Context section linking to design documents",
        "Class 'TypeAliasType' docstring should reference relevant architecture documents",
        "Class 'TypeAliasType' should include Architecture Context section linking to design documents",
        "Function 'is_protocol' missing Returns documentation",
        "Function 'get_protocol_members' missing Returns documentation",
        "Class 'Doc' docstring should reference relevant architecture documents",
        "Class 'Doc' should include Architecture Context section linking to design documents",
        "Function 'TypeAlias' missing Returns documentation",
        "Function 'TypeAlias' missing usage example",
        "Class 'ParamSpec' docstring should reference relevant architecture documents",
        "Class 'ParamSpec' docstring should reference relevant architecture documents",
        "Class 'ParamSpec' should include Architecture Context section linking to design documents",
        "Function 'Concatenate' missing Returns documentation",
        "Function 'Concatenate' missing usage example",
        "Function 'TypeGuard' missing Returns documentation",
        "Function 'TypeGuard' missing usage example",
        "Function 'TypeIs' missing Returns documentation",
        "Function 'TypeIs' missing usage example",
        "Function 'Required' missing Returns documentation",
        "Function 'Required' missing usage example",
        "Function 'NotRequired' missing Returns documentation",
        "Function 'NotRequired' missing usage example",
        "Function 'ReadOnly' missing Returns documentation",
        "Function 'ReadOnly' missing usage example",
        "Class 'TypeVarTuple' docstring should reference relevant architecture documents",
        "Class 'TypeVarTuple' docstring should reference relevant architecture documents",
        "Class 'TypeVarTuple' should include Architecture Context section linking to design documents",
        "Class '_DefaultMixin' should have __init__ method",
        "Class '_AnyMeta' should have __init__ method",
        "Class 'Any' should have __init__ method",
        "Class '_LiteralGenericAlias' should have __init__ method",
        "Class 'Protocol' should have __init__ method",
        "Class 'SupportsInt' should have __init__ method",
        "Class 'SupportsFloat' should have __init__ method",
        "Class 'SupportsComplex' should have __init__ method",
        "Class 'SupportsBytes' should have __init__ method",
        "Class 'SupportsIndex' should have __init__ method",
        "Class 'SupportsAbs' should have __init__ method",
        "Class 'SupportsRound' should have __init__ method",
        "Class '_TypedDictMeta' should have __init__ method",
        "Class 'Annotated' should have __init__ method",
        "Class 'NoDefaultType' should have __init__ method",
        "Class 'TypeVar' should have __init__ method",
        "Class '_Immutable' should have __init__ method",
        "Class 'ParamSpec' should have __init__ method",
        "Class '_UnpackAlias' should have __init__ method",
        "Class 'TypeVarTuple' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'add_stderr_logger' missing Returns documentation",
        "Function 'add_stderr_logger' missing usage example",
        "Function 'disable_warnings' missing Returns documentation"
      ],
      "score": 0.05142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/_collections.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'clear'",
        "Missing docstring for ctiondef 'keys'",
        "Function 'pop' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'discard'",
        "Function 'add' has parameters but no Args/Parameters documentation",
        "Function 'getlist' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'copy'",
        "Missing docstring for ctiondef 'items'",
        "Function 'from_httplib' has parameters but no Args/Parameters documentation",
        "Missing docstring for ssdef 'RLock'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'RecentlyUsedContainer' docstring should reference relevant architecture documents",
        "Class 'RecentlyUsedContainer' should include Architecture Context section linking to design documents",
        "Class 'HTTPHeaderDict' docstring should reference relevant architecture documents",
        "Class 'HTTPHeaderDict' should include Architecture Context section linking to design documents",
        "Function 'pop' missing Returns documentation",
        "Function 'pop' missing usage example",
        "Function 'add' missing Returns documentation",
        "Function 'extend' missing Returns documentation",
        "Function 'extend' missing usage example",
        "Function 'getlist' missing Returns documentation",
        "Function 'getlist' missing usage example",
        "Function 'iteritems' missing Returns documentation",
        "Function 'itermerged' missing Returns documentation",
        "Function 'from_httplib' missing Returns documentation",
        "Class 'RLock' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/_version.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/connection.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'host' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'connect'",
        "Missing docstring for ctiondef 'putrequest'",
        "Missing docstring for ctiondef 'putheader'",
        "Missing docstring for ctiondef 'request'",
        "Function 'request_chunked' has parameters but no Args/Parameters documentation",
        "Function 'set_cert' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'connect'",
        "Missing docstring for ssdef 'BaseSSLError'",
        "Missing docstring for ssdef 'ConnectionError'",
        "Missing docstring for ssdef 'BrokenPipeError'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'HTTPConnection' docstring should reference relevant architecture documents",
        "Class 'HTTPConnection' should include Architecture Context section linking to design documents",
        "Class 'HTTPSConnection' docstring should reference relevant architecture documents",
        "Class 'HTTPSConnection' should include Architecture Context section linking to design documents",
        "Class 'DummyConnection' docstring should reference relevant architecture documents",
        "Function 'host' missing Returns documentation",
        "Function 'host' missing usage example",
        "Function 'host' missing Returns documentation",
        "Function 'host' missing usage example",
        "Function 'request_chunked' missing Returns documentation",
        "Function 'request_chunked' missing usage example",
        "Function 'set_cert' missing Returns documentation",
        "Class 'DummyConnection' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/connectionpool.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'is_same_host' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ConnectionPool' docstring should reference relevant architecture documents",
        "Class 'ConnectionPool' should include Architecture Context section linking to design documents",
        "Class 'HTTPConnectionPool' docstring should reference relevant architecture documents",
        "Class 'HTTPConnectionPool' should include Architecture Context section linking to design documents",
        "Class 'HTTPSConnectionPool' docstring should reference relevant architecture documents",
        "Class 'HTTPSConnectionPool' should include Architecture Context section linking to design documents",
        "Function 'connection_from_url' missing Returns documentation",
        "Function 'close' missing Returns documentation",
        "Function 'close' missing Returns documentation",
        "Function 'is_same_host' missing Returns documentation",
        "Function 'urlopen' missing Returns documentation",
        "Function 'urlopen' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/_appengine_environ.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'is_appengine'",
        "Missing docstring for ctiondef 'is_local_appengine'",
        "Missing docstring for ctiondef 'is_prod_appengine'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'is_appengine_sandbox' missing Returns documentation",
        "Function 'is_appengine_sandbox' missing usage example",
        "ctiondef 'is_prod_appengine_mvms' has very short docstring",
        "Function 'is_prod_appengine_mvms' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/_securetransport/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/_securetransport/bindings.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'load_cdll' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'load_cdll' missing Returns documentation",
        "Class 'CFConst' docstring should reference relevant architecture documents",
        "Class 'SecurityConst' docstring should reference relevant architecture documents",
        "Class 'CFConst' should have __init__ method",
        "Class 'SecurityConst' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/_securetransport/low_level.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/appengine.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'AppEnginePlatformWarning'",
        "Missing docstring for ssdef 'AppEnginePlatformError'",
        "Missing docstring for ctiondef 'urlopen'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'AppEngineManager' docstring should reference relevant architecture documents",
        "Class 'AppEngineManager' should include Architecture Context section linking to design documents",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/ntlmpool.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'urlopen'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'NTLMConnectionPool' docstring should reference relevant architecture documents",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/pyopenssl.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'fileno'",
        "Missing docstring for ctiondef 'recv'",
        "Missing docstring for ctiondef 'recv_into'",
        "Missing docstring for ctiondef 'settimeout'",
        "Missing docstring for ctiondef 'sendall'",
        "Missing docstring for ctiondef 'shutdown'",
        "Missing docstring for ctiondef 'close'",
        "Missing docstring for ctiondef 'getpeercert'",
        "Missing docstring for ctiondef 'version'",
        "Missing docstring for ctiondef 'makefile'",
        "Missing docstring for ctiondef 'options'",
        "Missing docstring for ctiondef 'options'",
        "Missing docstring for ctiondef 'verify_mode'",
        "Missing docstring for ctiondef 'verify_mode'",
        "Missing docstring for ctiondef 'set_default_verify_paths'",
        "Missing docstring for ctiondef 'set_ciphers'",
        "Missing docstring for ctiondef 'load_verify_locations'",
        "Missing docstring for ctiondef 'load_cert_chain'",
        "Missing docstring for ctiondef 'set_alpn_protocols'",
        "Missing docstring for ctiondef 'wrap_socket'",
        "Missing docstring for ssdef 'UnsupportedExtension'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'inject_into_urllib3' missing Returns documentation",
        "Function 'extract_from_urllib3' missing Returns documentation",
        "Function 'get_subj_alt_name' missing Returns documentation",
        "Class 'WrappedSocket' docstring should reference relevant architecture documents",
        "Class 'WrappedSocket' should include Architecture Context section linking to design documents",
        "Class 'PyOpenSSLContext' docstring should reference relevant architecture documents",
        "Class 'PyOpenSSLContext' should include Architecture Context section linking to design documents",
        "Function 'idna_encode' missing Returns documentation",
        "Function 'idna_encode' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/securetransport.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'handshake' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'fileno'",
        "Missing docstring for ctiondef 'recv'",
        "Missing docstring for ctiondef 'recv_into'",
        "Missing docstring for ctiondef 'settimeout'",
        "Missing docstring for ctiondef 'gettimeout'",
        "Missing docstring for ctiondef 'send'",
        "Missing docstring for ctiondef 'sendall'",
        "Missing docstring for ctiondef 'shutdown'",
        "Missing docstring for ctiondef 'close'",
        "Missing docstring for ctiondef 'getpeercert'",
        "Missing docstring for ctiondef 'version'",
        "Missing docstring for ctiondef 'makefile'",
        "Missing docstring for ctiondef 'makefile'",
        "Function 'check_hostname' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'options'",
        "Missing docstring for ctiondef 'options'",
        "Missing docstring for ctiondef 'verify_mode'",
        "Missing docstring for ctiondef 'verify_mode'",
        "Missing docstring for ctiondef 'set_default_verify_paths'",
        "Missing docstring for ctiondef 'load_default_certs'",
        "Missing docstring for ctiondef 'set_ciphers'",
        "Missing docstring for ctiondef 'load_verify_locations'",
        "Missing docstring for ctiondef 'load_cert_chain'",
        "Function 'set_alpn_protocols' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'wrap_socket'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'inject_into_urllib3' missing Returns documentation",
        "Function 'extract_from_urllib3' missing Returns documentation",
        "Class 'WrappedSocket' docstring should reference relevant architecture documents",
        "Class 'WrappedSocket' should include Architecture Context section linking to design documents",
        "Class 'SecureTransportContext' docstring should reference relevant architecture documents",
        "Class 'SecureTransportContext' should include Architecture Context section linking to design documents",
        "Function 'handshake' missing Returns documentation",
        "Function 'handshake' missing usage example",
        "Function 'check_hostname' missing Returns documentation",
        "Function 'check_hostname' missing usage example",
        "Function 'check_hostname' missing Returns documentation",
        "Function 'check_hostname' missing usage example",
        "Function 'set_alpn_protocols' missing Returns documentation",
        "Function 'set_alpn_protocols' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/contrib/socks.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'SOCKSHTTPSConnection'",
        "Missing docstring for ssdef 'SOCKSHTTPConnectionPool'",
        "Missing docstring for ssdef 'SOCKSHTTPSConnectionPool'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SOCKSConnection' docstring should reference relevant architecture documents",
        "Class 'SOCKSProxyManager' docstring should reference relevant architecture documents"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/exceptions.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'HTTPError' docstring should reference relevant architecture documents",
        "Class 'HTTPWarning' docstring should reference relevant architecture documents",
        "Class 'PoolError' docstring should reference relevant architecture documents",
        "Class 'RequestError' docstring should reference relevant architecture documents",
        "Class 'SSLError' docstring should reference relevant architecture documents",
        "Class 'ProxyError' docstring should reference relevant architecture documents",
        "Class 'DecodeError' docstring should reference relevant architecture documents",
        "Class 'ProtocolError' docstring should reference relevant architecture documents",
        "Class 'MaxRetryError' docstring should reference relevant architecture documents",
        "Class 'MaxRetryError' should include Architecture Context section linking to design documents",
        "Class 'HostChangedError' docstring should reference relevant architecture documents",
        "Class 'TimeoutStateError' docstring should reference relevant architecture documents",
        "Class 'TimeoutError' docstring should reference relevant architecture documents",
        "Class 'TimeoutError' should include Architecture Context section linking to design documents",
        "Class 'ReadTimeoutError' docstring should reference relevant architecture documents",
        "Class 'ConnectTimeoutError' docstring should reference relevant architecture documents",
        "Class 'NewConnectionError' docstring should reference relevant architecture documents",
        "Class 'EmptyPoolError' docstring should reference relevant architecture documents",
        "Class 'ClosedPoolError' docstring should reference relevant architecture documents",
        "Class 'LocationValueError' docstring should reference relevant architecture documents",
        "Class 'LocationParseError' docstring should reference relevant architecture documents",
        "Class 'URLSchemeUnknown' docstring should reference relevant architecture documents",
        "Class 'ResponseError' docstring should reference relevant architecture documents",
        "Class 'SecurityWarning' docstring should reference relevant architecture documents",
        "Class 'SubjectAltNameWarning' docstring should reference relevant architecture documents",
        "Class 'InsecureRequestWarning' docstring should reference relevant architecture documents",
        "Class 'SystemTimeWarning' docstring should reference relevant architecture documents",
        "Class 'InsecurePlatformWarning' docstring should reference relevant architecture documents",
        "Class 'SNIMissingWarning' docstring should reference relevant architecture documents",
        "Class 'DependencyWarning' docstring should reference relevant architecture documents",
        "Class 'ResponseNotChunked' docstring should reference relevant architecture documents",
        "Class 'BodyNotHttplibCompatible' docstring should reference relevant architecture documents",
        "Class 'BodyNotHttplibCompatible' should include Architecture Context section linking to design documents",
        "Class 'IncompleteRead' docstring should reference relevant architecture documents",
        "Class 'IncompleteRead' should include Architecture Context section linking to design documents",
        "Class 'InvalidChunkLength' docstring should reference relevant architecture documents",
        "Class 'InvalidHeader' docstring should reference relevant architecture documents",
        "Class 'ProxySchemeUnknown' docstring should reference relevant architecture documents",
        "Class 'ProxySchemeUnsupported' docstring should reference relevant architecture documents",
        "Class 'HeaderParsingError' docstring should reference relevant architecture documents",
        "Class 'UnrewindableBodyError' docstring should reference relevant architecture documents",
        "Class 'HTTPError' should have __init__ method",
        "Class 'HTTPWarning' should have __init__ method",
        "Class 'SSLError' should have __init__ method",
        "Class 'DecodeError' should have __init__ method",
        "Class 'ProtocolError' should have __init__ method",
        "Class 'TimeoutStateError' should have __init__ method",
        "Class 'TimeoutError' should have __init__ method",
        "Class 'ReadTimeoutError' should have __init__ method",
        "Class 'ConnectTimeoutError' should have __init__ method",
        "Class 'NewConnectionError' should have __init__ method",
        "Class 'EmptyPoolError' should have __init__ method",
        "Class 'ClosedPoolError' should have __init__ method",
        "Class 'LocationValueError' should have __init__ method",
        "Class 'ResponseError' should have __init__ method",
        "Class 'SecurityWarning' should have __init__ method",
        "Class 'SubjectAltNameWarning' should have __init__ method",
        "Class 'InsecureRequestWarning' should have __init__ method",
        "Class 'SystemTimeWarning' should have __init__ method",
        "Class 'InsecurePlatformWarning' should have __init__ method",
        "Class 'SNIMissingWarning' should have __init__ method",
        "Class 'DependencyWarning' should have __init__ method",
        "Class 'ResponseNotChunked' should have __init__ method",
        "Class 'BodyNotHttplibCompatible' should have __init__ method",
        "Class 'InvalidHeader' should have __init__ method",
        "Class 'ProxySchemeUnsupported' should have __init__ method",
        "Class 'UnrewindableBodyError' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/fields.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'replacer'",
        "Function 'from_tuples' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'guess_content_type' missing Returns documentation",
        "Function 'guess_content_type' missing usage example",
        "Function 'format_header_param_rfc2231' missing Returns documentation",
        "Function 'format_header_param_rfc2231' missing usage example",
        "Function 'format_header_param_html5' missing Returns documentation",
        "Function 'format_header_param_html5' missing usage example",
        "Class 'RequestField' docstring should reference relevant architecture documents",
        "Class 'RequestField' should include Architecture Context section linking to design documents",
        "Function 'from_tuples' missing Returns documentation",
        "Function 'from_tuples' missing usage example",
        "Function 'render_headers' missing Returns documentation",
        "Function 'make_multipart' missing Returns documentation",
        "Function 'make_multipart' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/filepost.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'choose_boundary' missing Returns documentation",
        "Function 'iter_field_objects' missing Returns documentation",
        "Function 'iter_field_objects' missing usage example",
        "Function 'iter_fields' missing Returns documentation",
        "Function 'iter_fields' missing usage example",
        "Function 'encode_multipart_formdata' missing Returns documentation",
        "Function 'encode_multipart_formdata' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/packages/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/packages/backports/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/packages/backports/makefile.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'backport_makefile' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'backport_makefile' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/packages/backports/weakref_finalize.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__call__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'atexit'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'weakref_finalize' docstring should reference relevant architecture documents",
        "Class 'weakref_finalize' should include Architecture Context section linking to design documents",
        "Function 'detach' missing Returns documentation",
        "Function 'peek' missing Returns documentation",
        "Function 'alive' missing Returns documentation",
        "Function 'atexit' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/packages/six.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'MovedModule'",
        "Missing docstring for ssdef 'MovedAttribute'",
        "Missing docstring for ctiondef 'assertCountEqual'",
        "Missing docstring for ctiondef 'assertRaisesRegex'",
        "Missing docstring for ctiondef 'assertRegex'",
        "Missing docstring for ctiondef 'assertNotRegex'",
        "Function 'ensure_binary' has parameters but no Args/Parameters documentation",
        "Function 'ensure_str' has parameters but no Args/Parameters documentation",
        "Function 'ensure_text' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'find_module'",
        "Missing docstring for ctiondef 'find_spec'",
        "Missing docstring for ctiondef 'load_module'",
        "Function 'is_package' has parameters but no Args/Parameters documentation",
        "Function 'get_code' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'create_module'",
        "Missing docstring for ctiondef 'exec_module'",
        "Missing docstring for ctiondef 'get_unbound_function'",
        "Missing docstring for ctiondef 'create_unbound_method'",
        "Missing docstring for ctiondef 'get_unbound_function'",
        "Missing docstring for ctiondef 'create_bound_method'",
        "Missing docstring for ctiondef 'create_unbound_method'",
        "Missing docstring for ssdef 'Iterator'",
        "Missing docstring for ctiondef 'iterkeys'",
        "Missing docstring for ctiondef 'itervalues'",
        "Missing docstring for ctiondef 'iteritems'",
        "Missing docstring for ctiondef 'iterlists'",
        "Missing docstring for ctiondef 'iterkeys'",
        "Missing docstring for ctiondef 'itervalues'",
        "Missing docstring for ctiondef 'iteritems'",
        "Missing docstring for ctiondef 'iterlists'",
        "Missing docstring for ctiondef 'b'",
        "Missing docstring for ctiondef 'u'",
        "Missing docstring for ctiondef 'b'",
        "Missing docstring for ctiondef 'u'",
        "Missing docstring for ctiondef 'byte2int'",
        "Missing docstring for ctiondef 'indexbytes'",
        "Missing docstring for ctiondef 'reraise'",
        "Function 'exec_' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'raise_from'",
        "Missing docstring for ctiondef 'print_'",
        "Missing docstring for ctiondef 'wraps'",
        "Missing docstring for ssdef 'metaclass'",
        "Missing docstring for ctiondef 'wrapper'",
        "Missing docstring for ssdef 'X'",
        "Missing docstring for ctiondef 'advance_iterator'",
        "Missing docstring for ctiondef 'callable'",
        "Missing docstring for ctiondef 'next'",
        "Missing docstring for ctiondef 'write'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Module_six_moves_urllib_parse' docstring should reference relevant architecture documents",
        "Class 'Module_six_moves_urllib_error' docstring should reference relevant architecture documents",
        "Class 'Module_six_moves_urllib_request' docstring should reference relevant architecture documents",
        "Class 'Module_six_moves_urllib_response' docstring should reference relevant architecture documents",
        "Class 'Module_six_moves_urllib_robotparser' docstring should reference relevant architecture documents",
        "Class 'Module_six_moves_urllib' docstring should reference relevant architecture documents",
        "Function 'add_move' missing Returns documentation",
        "Function 'remove_move' missing Returns documentation",
        "Function 'with_metaclass' missing Returns documentation",
        "Function 'add_metaclass' missing Returns documentation",
        "Function 'ensure_binary' missing Returns documentation",
        "Function 'ensure_binary' missing usage example",
        "Function 'ensure_str' missing Returns documentation",
        "Function 'ensure_str' missing usage example",
        "Function 'ensure_text' missing Returns documentation",
        "Function 'ensure_text' missing usage example",
        "Function 'python_2_unicode_compatible' missing Returns documentation",
        "Function 'python_2_unicode_compatible' missing usage example",
        "Function 'is_package' missing Returns documentation",
        "Function 'is_package' missing usage example",
        "Function 'get_code' missing Returns documentation",
        "Function 'exec_' missing Returns documentation",
        "Function 'print_' missing Returns documentation",
        "Class '_MovedItems' should have __init__ method",
        "Class 'Module_six_moves_urllib' should have __init__ method",
        "Class 'metaclass' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/poolmanager.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'proxy_from_url'",
        "Function 'connection_from_host' has parameters but no Args/Parameters documentation",
        "Function 'connection_from_context' has parameters but no Args/Parameters documentation",
        "Function 'connection_from_pool_key' has parameters but no Args/Parameters documentation",
        "Function 'connection_from_url' has parameters but no Args/Parameters documentation",
        "Function 'urlopen' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'connection_from_host'",
        "Function 'urlopen' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PoolManager' docstring should reference relevant architecture documents",
        "Class 'PoolManager' should include Architecture Context section linking to design documents",
        "Class 'ProxyManager' docstring should reference relevant architecture documents",
        "Class 'ProxyManager' should include Architecture Context section linking to design documents",
        "Function 'clear' missing Returns documentation",
        "Function 'clear' missing usage example",
        "Function 'connection_from_host' missing Returns documentation",
        "Function 'connection_from_host' missing usage example",
        "Function 'connection_from_context' missing Returns documentation",
        "Function 'connection_from_context' missing usage example",
        "Function 'connection_from_pool_key' missing Returns documentation",
        "Function 'connection_from_pool_key' missing usage example",
        "Function 'connection_from_url' missing Returns documentation",
        "Function 'connection_from_url' missing usage example",
        "Function 'urlopen' missing Returns documentation",
        "Function 'urlopen' missing usage example",
        "Function 'urlopen' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/request.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'urlopen'",
        "Function 'request' has parameters but no Args/Parameters documentation",
        "Function 'request_encode_url' has parameters but no Args/Parameters documentation",
        "Function 'request_encode_body' has parameters but no Args/Parameters documentation",
        "Missing docstring for ssdef 'RequestModule'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'RequestMethods' docstring should reference relevant architecture documents",
        "Class 'RequestMethods' should include Architecture Context section linking to design documents",
        "Function 'request' missing Returns documentation",
        "Function 'request' missing usage example",
        "Function 'request_encode_url' missing Returns documentation",
        "Function 'request_encode_url' missing usage example",
        "Function 'request_encode_body' missing Returns documentation",
        "Function 'request_encode_body' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/response.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'DeflateDecoder'",
        "Missing docstring for ssdef 'GzipDecoderState'",
        "Missing docstring for ssdef 'GzipDecoder'",
        "Missing docstring for ctiondef 'decompress'",
        "Missing docstring for ctiondef 'decompress'",
        "Missing docstring for ssdef 'BrotliDecoder'",
        "Missing docstring for ctiondef 'flush'",
        "Missing docstring for ctiondef 'decompress'",
        "Missing docstring for ctiondef 'release_conn'",
        "Missing docstring for ctiondef 'data'",
        "Missing docstring for ctiondef 'connection'",
        "Missing docstring for ctiondef 'isclosed'",
        "Function 'from_httplib' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'getheaders'",
        "Missing docstring for ctiondef 'getheader'",
        "Missing docstring for ctiondef 'info'",
        "Missing docstring for ctiondef 'close'",
        "Missing docstring for ctiondef 'closed'",
        "Missing docstring for ctiondef 'fileno'",
        "Missing docstring for ctiondef 'flush'",
        "Missing docstring for ctiondef 'readable'",
        "Missing docstring for ctiondef 'readinto'",
        "Missing docstring for ctiondef 'flush'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'MultiDecoder' docstring should reference relevant architecture documents",
        "Class 'MultiDecoder' should include Architecture Context section linking to design documents",
        "Class 'HTTPResponse' docstring should reference relevant architecture documents",
        "Class 'HTTPResponse' should include Architecture Context section linking to design documents",
        "Function 'get_redirect_location' missing usage example",
        "Function 'drain_conn' missing Returns documentation",
        "Function 'drain_conn' missing usage example",
        "Function 'tell' missing Returns documentation",
        "Function 'tell' missing usage example",
        "Function 'read' missing Returns documentation",
        "Function 'read' missing usage example",
        "Function 'stream' missing Returns documentation",
        "Function 'stream' missing usage example",
        "Function 'from_httplib' missing Returns documentation",
        "Function 'from_httplib' missing usage example",
        "Function 'supports_chunked_reads' missing Returns documentation",
        "Function 'supports_chunked_reads' missing usage example",
        "Function 'read_chunked' missing Returns documentation",
        "Function 'read_chunked' missing usage example",
        "Function 'geturl' missing Returns documentation",
        "Function 'geturl' missing usage example",
        "Class 'GzipDecoderState' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/util/__init__.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [],
      "score": 0.3714285714285714,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/util/connection.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_connection' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'is_connection_dropped' missing Returns documentation",
        "Function 'is_connection_dropped' missing usage example",
        "Function 'create_connection' missing Returns documentation",
        "Function 'create_connection' missing usage example",
        "Function 'allowed_gai_family' missing Returns documentation",
        "Function 'allowed_gai_family' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/util/proxy.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_proxy_ssl_context' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'connection_requires_http_tunnel' missing Returns documentation",
        "Function 'connection_requires_http_tunnel' missing usage example",
        "Function 'create_proxy_ssl_context' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/util/queue.py",
      "passed": false,
      "errors": [
        "Missing file header docstring",
        "Missing docstring for ssdef 'LifoQueue'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Class 'LifoQueue' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/util/request.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'set_file_position' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'make_headers' missing Returns documentation",
        "Function 'set_file_position' missing Returns documentation",
        "Function 'set_file_position' missing usage example",
        "Function 'rewind_body' missing Returns documentation",
        "Function 'rewind_body' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/util/response.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'is_fp_closed' missing Returns documentation",
        "Function 'assert_header_parsing' missing Returns documentation",
        "Function 'assert_header_parsing' missing usage example",
        "Function 'is_response_to_head' missing Returns documentation",
        "Function 'is_response_to_head' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/util/retry.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'DEFAULT_METHOD_WHITELIST'",
        "Missing docstring for ctiondef 'DEFAULT_METHOD_WHITELIST'",
        "Missing docstring for ctiondef 'DEFAULT_REDIRECT_HEADERS_BLACKLIST'",
        "Missing docstring for ctiondef 'DEFAULT_REDIRECT_HEADERS_BLACKLIST'",
        "Missing docstring for ctiondef 'BACKOFF_MAX'",
        "Missing docstring for ctiondef 'BACKOFF_MAX'",
        "Missing docstring for ctiondef 'new'",
        "Function 'from_int' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'parse_retry_after'",
        "Function 'get_retry_after' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'sleep_for_retry'",
        "Function 'sleep' has parameters but no Args/Parameters documentation",
        "Function 'is_retry' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Retry' docstring should reference relevant architecture documents",
        "Class 'Retry' should include Architecture Context section linking to design documents",
        "Function 'from_int' missing Returns documentation",
        "Function 'get_backoff_time' missing Returns documentation",
        "Function 'get_retry_after' missing Returns documentation",
        "Function 'sleep' missing Returns documentation",
        "Function 'sleep' missing usage example",
        "Function 'is_retry' missing Returns documentation",
        "Function 'is_retry' missing usage example",
        "Function 'is_exhausted' missing Returns documentation",
        "Function 'increment' missing usage example",
        "Class '_RetryMeta' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/util/ssl_.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'disable_check_hostname'",
        "Missing docstring for ssdef 'SSLContext'",
        "Missing docstring for ctiondef 'load_cert_chain'",
        "Missing docstring for ctiondef 'load_verify_locations'",
        "Missing docstring for ctiondef 'set_ciphers'",
        "Missing docstring for ctiondef 'wrap_socket'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'assert_fingerprint' missing Returns documentation",
        "Function 'assert_fingerprint' missing usage example",
        "Function 'resolve_cert_reqs' missing Returns documentation",
        "Function 'resolve_cert_reqs' missing usage example",
        "Function 'resolve_ssl_version' missing Returns documentation",
        "Function 'create_urllib3_context' missing usage example",
        "Function 'ssl_wrap_socket' missing Returns documentation",
        "Function 'ssl_wrap_socket' missing usage example",
        "Function 'is_ipaddress' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/util/ssl_match_hostname.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'CertificateError'",
        "Function 'match_hostname' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'match_hostname' missing Returns documentation",
        "Function 'match_hostname' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/util/ssltransport.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'fileno'",
        "Missing docstring for ctiondef 'read'",
        "Missing docstring for ctiondef 'recv'",
        "Missing docstring for ctiondef 'recv_into'",
        "Missing docstring for ctiondef 'sendall'",
        "Missing docstring for ctiondef 'send'",
        "Function 'makefile' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'unwrap'",
        "Missing docstring for ctiondef 'close'",
        "Missing docstring for ctiondef 'getpeercert'",
        "Missing docstring for ctiondef 'version'",
        "Missing docstring for ctiondef 'cipher'",
        "Missing docstring for ctiondef 'selected_alpn_protocol'",
        "Missing docstring for ctiondef 'selected_npn_protocol'",
        "Missing docstring for ctiondef 'shared_ciphers'",
        "Missing docstring for ctiondef 'compression'",
        "Missing docstring for ctiondef 'settimeout'",
        "Missing docstring for ctiondef 'gettimeout'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SSLTransport' docstring should reference relevant architecture documents",
        "Class 'SSLTransport' should include Architecture Context section linking to design documents",
        "Function 'makefile' missing Returns documentation",
        "Function 'makefile' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/util/timeout.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'resolve_default_timeout'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Timeout' docstring should reference relevant architecture documents",
        "Class 'Timeout' should include Architecture Context section linking to design documents",
        "Function 'from_float' missing usage example",
        "Function 'clone' missing usage example",
        "Function 'start_connect' missing Returns documentation",
        "Function 'start_connect' missing usage example",
        "Function 'get_connect_duration' missing usage example",
        "Function 'connect_timeout' missing usage example",
        "Function 'read_timeout' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/util/url.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'split_first' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'ensure_type'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Url' docstring should reference relevant architecture documents",
        "Class 'Url' should include Architecture Context section linking to design documents",
        "Function 'split_first' missing Returns documentation",
        "Function 'parse_url' missing Returns documentation",
        "Function 'get_host' missing Returns documentation",
        "Function 'hostname' missing Returns documentation",
        "Function 'request_uri' missing Returns documentation",
        "Function 'netloc' missing Returns documentation",
        "Function 'url' missing Returns documentation",
        "Class 'Url' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/venv/lib/python3.13/site-packages/pip/_vendor/urllib3/util/wait.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'NoWayToWaitForSocketError'",
        "Missing docstring for ctiondef 'select_wait_for_socket'",
        "Missing docstring for ctiondef 'poll_wait_for_socket'",
        "Missing docstring for ctiondef 'null_wait_for_socket'",
        "Missing docstring for ctiondef 'wait_for_socket'",
        "Function 'wait_for_read' has parameters but no Args/Parameters documentation",
        "Function 'wait_for_write' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'do_poll'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'wait_for_read' missing Returns documentation",
        "Function 'wait_for_read' missing usage example",
        "Function 'wait_for_write' missing Returns documentation",
        "Function 'wait_for_write' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/coordinator/yaml_coordinator.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'YAMLCoordinator' docstring should reference relevant architecture documents",
        "Function 'run_backtest' missing usage example",
        "Function 'run_optimization' missing usage example",
        "Function 'run_live_trading' missing usage example",
        "Function 'execute_yaml_workflow' missing usage example",
        "Function 'execute_yaml_string' missing usage example",
        "Function 'validate_yaml' missing usage example",
        "Function 'reload_workflow' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/coordinator/yaml_interpreter.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'YAMLInterpreter' docstring should reference relevant architecture documents",
        "Class 'YAMLWorkflowBuilder' docstring should reference relevant architecture documents",
        "Function 'load_and_interpret' missing usage example",
        "Function 'interpret_dict' missing usage example",
        "Function 'build_container_hierarchy' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/dependencies/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/dependencies/container.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get' has parameters but no Args/Parameters documentation",
        "Function 'has' has parameters but no Args/Parameters documentation",
        "Function 'register_shared' has parameters but no Args/Parameters documentation",
        "Function 'resolve' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Registration' docstring should reference relevant architecture documents",
        "Class 'DependencyContainer' docstring should reference relevant architecture documents",
        "Class 'DependencyContainer' should include Architecture Context section linking to design documents",
        "Class 'ScopedContainer' docstring should reference relevant architecture documents",
        "Class 'ScopedContainer' should include Architecture Context section linking to design documents",
        "Function 'register_type' missing Returns documentation",
        "Function 'register_type' missing usage example",
        "Function 'register_instance' missing Returns documentation",
        "Function 'register_instance' missing usage example",
        "Function 'register_factory' missing Returns documentation",
        "Function 'register_factory' missing usage example",
        "Function 'resolve' missing usage example",
        "Function 'resolve_all' missing usage example",
        "Function 'get' missing Returns documentation",
        "Function 'has' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'reset' missing usage example",
        "Function 'get_dependency_graph' missing Returns documentation",
        "Function 'register_shared' missing Returns documentation",
        "Function 'register_shared' missing usage example",
        "Function 'resolve' missing Returns documentation",
        "Function 'teardown' missing Returns documentation",
        "Function 'teardown' missing usage example",
        "Class 'Registration' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/dependencies/graph.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'add_dependencies' has parameters but no Args/Parameters documentation",
        "Function 'get_dependencies' has parameters but no Args/Parameters documentation",
        "Function 'get_dependents' has parameters but no Args/Parameters documentation",
        "Function 'get_all_dependencies' has parameters but no Args/Parameters documentation",
        "Function 'get_instance' has parameters but no Args/Parameters documentation",
        "Function 'is_resolved' has parameters but no Args/Parameters documentation",
        "Function 'get_unresolved_dependencies' has parameters but no Args/Parameters documentation",
        "Function 'can_resolve' has parameters but no Args/Parameters documentation",
        "Function 'validate_direction' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ComponentNode' docstring should reference relevant architecture documents",
        "Class 'DependencyGraph' docstring should reference relevant architecture documents",
        "Class 'DependencyGraph' should include Architecture Context section linking to design documents",
        "Class 'DependencyValidator' docstring should reference relevant architecture documents",
        "Function 'is_resolved' missing Returns documentation",
        "Function 'capabilities' missing Returns documentation",
        "Function 'add_component' missing usage example",
        "Function 'add_dependency' missing Returns documentation",
        "Function 'add_dependency' missing usage example",
        "Function 'add_dependencies' missing Returns documentation",
        "Function 'get_dependencies' missing Returns documentation",
        "Function 'get_dependents' missing Returns documentation",
        "Function 'get_all_dependencies' missing Returns documentation",
        "Function 'detect_cycles' missing usage example",
        "Function 'get_initialization_order' missing usage example",
        "Function 'get_teardown_order' missing usage example",
        "Function 'set_instance' missing Returns documentation",
        "Function 'set_instance' missing usage example",
        "Function 'get_instance' missing Returns documentation",
        "Function 'is_resolved' missing Returns documentation",
        "Function 'get_unresolved_dependencies' missing Returns documentation",
        "Function 'can_resolve' missing Returns documentation",
        "Function 'get_resolution_order' missing usage example",
        "Function 'export_graph' missing usage example",
        "Function 'clear' missing Returns documentation",
        "Function 'validate_direction' missing usage example",
        "Function 'dfs' missing Returns documentation",
        "Class 'ComponentNode' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/dependencies/test_dependencies.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'ServiceA'",
        "Missing docstring for ssdef 'ServiceB'",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'initialize'",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'setUp'",
        "Missing docstring for ctiondef 'setUp'",
        "Missing docstring for ctiondef 'setUp'",
        "Missing docstring for ctiondef 'setUp'",
        "Missing docstring for ctiondef 'create_data_service'",
        "Missing docstring for ssdef 'TeardownComponent'",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'teardown'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "ssdef 'DataService' has very short docstring",
        "Class 'DataService' docstring should reference relevant architecture documents",
        "Class 'StrategyService' docstring should reference relevant architecture documents",
        "Class 'PortfolioService' docstring should reference relevant architecture documents",
        "Class 'RiskService' docstring should reference relevant architecture documents",
        "Class 'TestDependencyGraph' docstring should reference relevant architecture documents",
        "Class 'TestDependencyContainer' docstring should reference relevant architecture documents",
        "Class 'TestScopedContainer' docstring should reference relevant architecture documents",
        "Class 'TestDependencyValidator' docstring should reference relevant architecture documents",
        "Function 'test_add_component' missing Returns documentation",
        "Function 'test_add_dependency' missing Returns documentation",
        "Function 'test_detect_cycles' missing Returns documentation",
        "Function 'test_initialization_order' missing Returns documentation",
        "Function 'test_initialization_order_with_cycles' missing Returns documentation",
        "Function 'test_transitive_dependencies' missing Returns documentation",
        "Function 'test_resolution_tracking' missing Returns documentation",
        "Function 'test_can_resolve' missing Returns documentation",
        "Function 'test_validation' missing Returns documentation",
        "Function 'test_register_type' missing Returns documentation",
        "Function 'test_register_instance' missing Returns documentation",
        "Function 'test_register_factory' missing Returns documentation",
        "Function 'test_dependency_injection' missing Returns documentation",
        "Function 'test_circular_dependency_detection' missing Returns documentation",
        "Function 'test_singleton_behavior' missing Returns documentation",
        "Function 'test_non_singleton_behavior' missing Returns documentation",
        "Function 'test_resolve_all' missing Returns documentation",
        "Function 'test_reset' missing Returns documentation",
        "Function 'test_parent_container' missing Returns documentation",
        "Function 'test_shared_resolution' missing Returns documentation",
        "Function 'test_scoped_isolation' missing Returns documentation",
        "Function 'test_teardown' missing Returns documentation",
        "Function 'test_valid_direction' missing Returns documentation",
        "Function 'test_invalid_direction' missing Returns documentation",
        "Class 'TestDependencyGraph' should have __init__ method",
        "Class 'TestDependencyContainer' should have __init__ method",
        "Class 'TestScopedContainer' should have __init__ method",
        "Class 'TestDependencyValidator' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/duck_types.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'get'",
        "Missing docstring for ctiondef 'get'",
        "Missing docstring for ctiondef 'event_type'",
        "Missing docstring for ctiondef 'payload'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ComponentLike' docstring should reference relevant architecture documents",
        "Class 'DictLike' docstring should reference relevant architecture documents",
        "Class 'ConfigLike' docstring should reference relevant architecture documents",
        "Class 'EventLike' docstring should reference relevant architecture documents",
        "Class 'ComponentLike' should have __init__ method",
        "Class 'DictLike' should have __init__ method",
        "Class 'ConfigLike' should have __init__ method",
        "Class 'EventLike' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/events/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/events/enhanced_isolation.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'enable_strict_mode' has parameters but no Args/Parameters documentation",
        "Function 'allow_events_from_container' has parameters but no Args/Parameters documentation",
        "Function 'revoke_container_access' has parameters but no Args/Parameters documentation",
        "Function 'publish' has parameters but no Args/Parameters documentation",
        "Function 'subscribe' has parameters but no Args/Parameters documentation",
        "Function 'create_container_bus' has parameters but no Args/Parameters documentation",
        "Function 'remove_container_bus' has parameters but no Args/Parameters documentation",
        "Function 'get_container_children' has parameters but no Args/Parameters documentation",
        "Function 'get_container_parent' has parameters but no Args/Parameters documentation",
        "Function 'isolated_container_group' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'isolation_validated_handler'",
        "Missing docstring for ctiondef 'handler_a'",
        "Missing docstring for ctiondef 'handler_b'",
        "Missing docstring for ctiondef 'child_handler'",
        "Missing docstring for ctiondef 'container_worker'",
        "Missing docstring for ctiondef 'handler'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'StrictIsolationEventBus' docstring should reference relevant architecture documents",
        "Class 'StrictIsolationEventBus' should include Architecture Context section linking to design documents",
        "Class 'IsolationViolationError' docstring should reference relevant architecture documents",
        "Class 'HierarchicalIsolationManager' docstring should reference relevant architecture documents",
        "Class 'HierarchicalIsolationManager' should include Architecture Context section linking to design documents",
        "Class 'IsolationTestSuite' docstring should reference relevant architecture documents",
        "Function 'get_enhanced_isolation_manager' missing Returns documentation",
        "Function 'run_isolation_validation' missing Returns documentation",
        "Function 'enable_strict_mode' missing Returns documentation",
        "Function 'allow_events_from_container' missing Returns documentation",
        "Function 'revoke_container_access' missing Returns documentation",
        "Function 'publish' missing Returns documentation",
        "Function 'subscribe' missing Returns documentation",
        "Function 'get_isolation_stats' missing Returns documentation",
        "Function 'clear_violations' missing Returns documentation",
        "Function 'create_child_container_bus' missing usage example",
        "Function 'create_container_bus' missing Returns documentation",
        "Function 'remove_container_bus' missing Returns documentation",
        "Function 'get_container_children' missing Returns documentation",
        "Function 'get_container_parent' missing Returns documentation",
        "Function 'get_hierarchy_stats' missing Returns documentation",
        "Function 'isolated_container_group' missing Returns documentation",
        "Function 'run_all_tests' missing Returns documentation",
        "Function 'test_basic_isolation' missing Returns documentation",
        "Function 'test_strict_mode_enforcement' missing Returns documentation",
        "Function 'test_parent_child_hierarchy' missing Returns documentation",
        "Function 'test_parallel_container_stress' missing Returns documentation",
        "Function 'test_violation_detection' missing Returns documentation",
        "Function 'test_resource_cleanup' missing Returns documentation",
        "Class 'IsolationViolationError' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/events/event_bus.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'publish' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'filtered_handler'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'EventBus' docstring should reference relevant architecture documents",
        "Class 'EventBus' should include Architecture Context section linking to design documents",
        "Class 'ContainerEventBus' docstring should reference relevant architecture documents",
        "Class 'ContainerEventBus' should include Architecture Context section linking to design documents",
        "Function 'publish' missing Returns documentation",
        "Function 'publish' missing usage example",
        "Function 'subscribe' missing Returns documentation",
        "Function 'subscribe' missing usage example",
        "Function 'unsubscribe' missing Returns documentation",
        "Function 'unsubscribe' missing usage example",
        "Function 'unsubscribe_all' missing Returns documentation",
        "Function 'unsubscribe_all' missing usage example",
        "Function 'clear' missing Returns documentation",
        "Function 'get_stats' missing Returns documentation",
        "Function 'subscribe_filtered' missing Returns documentation",
        "Function 'subscribe_filtered' missing usage example",
        "Function 'publish' missing Returns documentation",
        "Function 'get_metrics' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/events/isolation.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ContainerProtocol' docstring should reference relevant architecture documents",
        "Class 'EventIsolationManager' docstring should reference relevant architecture documents",
        "Class 'EventIsolationManager' should include Architecture Context section linking to design documents",
        "Class 'IsolatedEventPublisher' docstring should reference relevant architecture documents",
        "Class 'IsolatedEventPublisher' should include Architecture Context section linking to design documents",
        "Function 'validate_event_isolation' missing usage example",
        "Function 'get_isolation_manager' missing Returns documentation",
        "Function 'container_id' missing Returns documentation",
        "Function 'event_bus' missing Returns documentation",
        "Function 'create_container_bus' missing usage example",
        "Function 'get_container_bus' missing usage example",
        "Function 'remove_container_bus' missing Returns documentation",
        "Function 'container_context' missing Returns documentation",
        "Function 'container_context' missing usage example",
        "Function 'current_container' missing Returns documentation",
        "Function 'get_stats' missing Returns documentation",
        "Function 'publish' missing Returns documentation",
        "Function 'publish' missing usage example",
        "Class 'ContainerProtocol' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.11428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/events/isolation_tests.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'log_event' has parameters but no Args/Parameters documentation",
        "Function 'test_parallel_execution_isolation' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'handler_a'",
        "Missing docstring for ctiondef 'handler_b'",
        "Missing docstring for ctiondef 'contamination_detector'",
        "Missing docstring for ctiondef 'handler'",
        "Missing docstring for ctiondef 'event_handler'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'IsolationTestFramework' docstring should reference relevant architecture documents",
        "Function 'run_comprehensive_isolation_tests' missing Returns documentation",
        "Function 'log_event' missing Returns documentation",
        "Function 'test_basic_isolation' missing Returns documentation",
        "Function 'test_parallel_execution_isolation' missing Returns documentation",
        "Function 'test_event_metadata_integrity' missing Returns documentation",
        "Function 'generate_isolation_report' missing Returns documentation",
        "Function 'container_worker' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/events/subscription_manager.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__exit__' has parameters but no Args/Parameters documentation",
        "Function 'subscribe' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'wrapper'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Subscription' docstring should reference relevant architecture documents",
        "Class 'SubscriptionManager' docstring should reference relevant architecture documents",
        "Class 'SubscriptionManager' should include Architecture Context section linking to design documents",
        "Class 'WeakSubscriptionManager' docstring should reference relevant architecture documents",
        "Class 'WeakSubscriptionManager' should include Architecture Context section linking to design documents",
        "Function 'create_subscription_manager' missing usage example",
        "Function 'subscribe' missing Returns documentation",
        "Function 'subscribe' missing usage example",
        "Function 'unsubscribe' missing usage example",
        "Function 'unsubscribe_all' missing Returns documentation",
        "Function 'unsubscribe_all' missing usage example",
        "Function 'get_subscriptions' missing Returns documentation",
        "Function 'subscribe' missing Returns documentation",
        "Function 'subscribe' missing usage example",
        "Class 'Subscription' should have __init__ method",
        "Class 'WeakSubscriptionManager' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/events/test_events.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'handler' has parameters but no Args/Parameters documentation",
        "Function 'handler' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'handler2'",
        "Missing docstring for ctiondef 'error_handler'",
        "Missing docstring for ctiondef 'publisher'",
        "Missing docstring for ctiondef 'subscriber'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'TestEventTypes' docstring should reference relevant architecture documents",
        "Class 'TestEventBus' docstring should reference relevant architecture documents",
        "Class 'TestSubscriptionManager' docstring should reference relevant architecture documents",
        "Class 'TestEventIsolation' docstring should reference relevant architecture documents",
        "Class 'TestContainerEventBus' docstring should reference relevant architecture documents",
        "Function 'test_event_creation' missing Returns documentation",
        "Function 'test_market_event_helper' missing Returns documentation",
        "Function 'test_signal_event_helper' missing Returns documentation",
        "Function 'setUp' missing Returns documentation",
        "ctiondef 'handler' has very short docstring",
        "Function 'handler' missing Returns documentation",
        "Function 'test_subscribe_publish' missing Returns documentation",
        "Function 'test_multiple_handlers' missing Returns documentation",
        "Function 'test_unsubscribe' missing Returns documentation",
        "Function 'test_unsubscribe_all' missing Returns documentation",
        "Function 'test_error_handling' missing Returns documentation",
        "Function 'test_thread_safety' missing Returns documentation",
        "Function 'setUp' missing Returns documentation",
        "ctiondef 'handler' has very short docstring",
        "Function 'handler' missing Returns documentation",
        "Function 'test_managed_subscribe' missing Returns documentation",
        "Function 'test_unsubscribe_all' missing Returns documentation",
        "Function 'test_context_manager' missing Returns documentation",
        "Function 'setUp' missing Returns documentation",
        "Function 'tearDown' missing Returns documentation",
        "Function 'test_container_isolation' missing Returns documentation",
        "Function 'test_container_context' missing Returns documentation",
        "Function 'test_container_cleanup' missing Returns documentation",
        "Function 'setUp' missing Returns documentation",
        "Function 'test_source_filtering' missing Returns documentation",
        "Function 'test_metrics_collection' missing Returns documentation",
        "Class 'TestEventTypes' should have __init__ method",
        "Class 'TestEventBus' should have __init__ method",
        "Class 'TestSubscriptionManager' should have __init__ method",
        "Class 'TestEventIsolation' should have __init__ method",
        "Class 'TestContainerEventBus' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/events/types.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_market_event' has parameters but no Args/Parameters documentation",
        "Function 'create_signal_event' has parameters but no Args/Parameters documentation",
        "Function 'create_system_event' has parameters but no Args/Parameters documentation",
        "Function 'create_error_event' has parameters but no Args/Parameters documentation",
        "Function '__call__' has parameters but no Args/Parameters documentation",
        "Function 'publish' has parameters but no Args/Parameters documentation",
        "Function 'subscribe' has parameters but no Args/Parameters documentation",
        "Function 'unsubscribe' has parameters but no Args/Parameters documentation",
        "Function 'publish' has parameters but no Args/Parameters documentation",
        "Function 'subscribe' has parameters but no Args/Parameters documentation",
        "Function 'unsubscribe' has parameters but no Args/Parameters documentation",
        "Function 'unsubscribe_all' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'EventType' docstring should reference relevant architecture documents",
        "Class 'Event' docstring should reference relevant architecture documents",
        "Class 'Event' should include Architecture Context section linking to design documents",
        "Class 'EventHandler' docstring should reference relevant architecture documents",
        "Class 'EventPublisher' docstring should reference relevant architecture documents",
        "Class 'EventSubscriber' docstring should reference relevant architecture documents",
        "Class 'EventBusProtocol' docstring should reference relevant architecture documents",
        "Class 'EventCapable' docstring should reference relevant architecture documents",
        "Function 'create_market_event' missing Returns documentation",
        "Function 'create_signal_event' missing Returns documentation",
        "Function 'create_system_event' missing Returns documentation",
        "Function 'create_error_event' missing Returns documentation",
        "ctiondef '__call__' has very short docstring",
        "Function 'publish' missing Returns documentation",
        "Function 'subscribe' missing Returns documentation",
        "Function 'unsubscribe' missing Returns documentation",
        "Function 'publish' missing Returns documentation",
        "Function 'subscribe' missing Returns documentation",
        "Function 'unsubscribe' missing Returns documentation",
        "Function 'unsubscribe_all' missing Returns documentation",
        "Function 'event_bus' missing Returns documentation",
        "Function 'initialize_events' missing Returns documentation",
        "Function 'teardown_events' missing Returns documentation",
        "Class 'EventType' should have __init__ method",
        "Class 'Event' should have __init__ method",
        "Class 'EventHandler' should have __init__ method",
        "Class 'EventPublisher' should have __init__ method",
        "Class 'EventSubscriber' should have __init__ method",
        "Class 'EventBusProtocol' should have __init__ method",
        "Class 'EventCapable' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/infrastructure/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/infrastructure/capabilities.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'can_enhance'",
        "Missing docstring for ctiondef 'enhance'",
        "Missing docstring for ctiondef 'can_enhance'",
        "Missing docstring for ctiondef 'enhance'",
        "Missing docstring for ctiondef 'can_enhance'",
        "Missing docstring for ctiondef 'enhance'",
        "Missing docstring for ctiondef 'can_enhance'",
        "Missing docstring for ctiondef 'enhance'",
        "Missing docstring for ctiondef 'can_enhance'",
        "Missing docstring for ctiondef 'enhance'",
        "Missing docstring for ctiondef 'create_error_boundary'",
        "Missing docstring for ctiondef 'with_retry'",
        "Missing docstring for ctiondef 'handle_error'",
        "Missing docstring for ctiondef 'capture_state'",
        "Missing docstring for ctiondef 'enable_tracing'",
        "Missing docstring for ctiondef 'set_breakpoint'",
        "Missing docstring for ctiondef 'check_breakpoint'",
        "Missing docstring for ctiondef 'traced_method'",
        "Missing docstring for ctiondef 'log'",
        "Missing docstring for ctiondef 'validated_configure'",
        "Missing docstring for ctiondef 'validated_method'",
        "Missing docstring for ctiondef 'wrapped_method'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'LoggingCapability' docstring should reference relevant architecture documents",
        "Class 'MonitoringCapability' docstring should reference relevant architecture documents",
        "Class 'ErrorHandlingCapability' docstring should reference relevant architecture documents",
        "Class 'DebuggingCapability' docstring should reference relevant architecture documents",
        "Class 'ValidationCapability' docstring should reference relevant architecture documents",
        "Class 'LoggingCapability' should have __init__ method",
        "Class 'MonitoringCapability' should have __init__ method",
        "Class 'ErrorHandlingCapability' should have __init__ method",
        "Class 'DebuggingCapability' should have __init__ method",
        "Class 'ValidationCapability' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/infrastructure/error_handling.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'should_retry' has parameters but no Args/Parameters documentation",
        "Function 'get_delay_ms' has parameters but no Args/Parameters documentation",
        "Function 'handle' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'decorator'",
        "Missing docstring for ssdef 'State'",
        "Function 'call' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'wrapper'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ErrorStrategy' docstring should reference relevant architecture documents",
        "Class 'BackoffStrategy' docstring should reference relevant architecture documents",
        "Class 'RetryPolicy' docstring should reference relevant architecture documents",
        "Class 'ErrorContext' docstring should reference relevant architecture documents",
        "Class 'ErrorPolicy' docstring should reference relevant architecture documents",
        "Class 'ErrorBoundary' docstring should reference relevant architecture documents",
        "Function 'retry' missing Returns documentation",
        "Function 'retry' missing usage example",
        "Class 'CircuitBreaker' docstring should reference relevant architecture documents",
        "Class 'CircuitBreaker' should include Architecture Context section linking to design documents",
        "Function 'should_retry' missing Returns documentation",
        "Function 'get_delay_ms' missing Returns documentation",
        "Function 'handle' missing usage example",
        "Function 'call' missing Returns documentation",
        "Function 'get_state' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Class 'ErrorStrategy' should have __init__ method",
        "Class 'BackoffStrategy' should have __init__ method",
        "Class 'RetryPolicy' should have __init__ method",
        "Class 'ErrorContext' should have __init__ method",
        "Class 'State' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/infrastructure/monitoring.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'record_value' has parameters but no Args/Parameters documentation",
        "Function 'record_timing' has parameters but no Args/Parameters documentation",
        "Function 'record_count' has parameters but no Args/Parameters documentation",
        "Function 'get_metric' has parameters but no Args/Parameters documentation",
        "Function 'clear_old_metrics' has parameters but no Args/Parameters documentation",
        "Function 'track_method' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'decorator'",
        "Missing docstring for ctiondef 'wrapper'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'HealthStatus' docstring should reference relevant architecture documents",
        "Class 'MetricPoint' docstring should reference relevant architecture documents",
        "Class 'HealthCheckResult' docstring should reference relevant architecture documents",
        "Class 'MetricsCollector' docstring should reference relevant architecture documents",
        "Class 'PerformanceTracker' docstring should reference relevant architecture documents",
        "Class 'HealthCheck' docstring should reference relevant architecture documents",
        "Class 'ComponentHealthCheck' docstring should reference relevant architecture documents",
        "Function 'record_value' missing Returns documentation",
        "Function 'record_timing' missing Returns documentation",
        "Function 'record_count' missing Returns documentation",
        "Function 'get_all_metrics' missing Returns documentation",
        "Function 'get_metric' missing Returns documentation",
        "Function 'clear_old_metrics' missing Returns documentation",
        "Function 'track_method' missing Returns documentation",
        "Function 'get_stats' missing Returns documentation",
        "Function 'check' missing Returns documentation",
        "Function 'check' missing Returns documentation",
        "Class 'HealthStatus' should have __init__ method",
        "Class 'MetricPoint' should have __init__ method",
        "Class 'HealthCheckResult' should have __init__ method",
        "Class 'HealthCheck' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/infrastructure/protocols.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'log' has parameters but no Args/Parameters documentation",
        "Function 'record_metric' has parameters but no Args/Parameters documentation",
        "Function 'handle_error' has parameters but no Args/Parameters documentation",
        "Function 'enable_tracing' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Loggable' docstring should reference relevant architecture documents",
        "Class 'Monitorable' docstring should reference relevant architecture documents",
        "Class 'Measurable' docstring should reference relevant architecture documents",
        "Class 'ErrorAware' docstring should reference relevant architecture documents",
        "Class 'Debuggable' docstring should reference relevant architecture documents",
        "Class 'Validatable' docstring should reference relevant architecture documents",
        "Function 'logger' missing Returns documentation",
        "Function 'log' missing Returns documentation",
        "Function 'get_metrics' missing Returns documentation",
        "Function 'get_health_status' missing Returns documentation",
        "Function 'record_metric' missing Returns documentation",
        "Function 'get_performance_stats' missing Returns documentation",
        "Function 'handle_error' missing Returns documentation",
        "Function 'get_error_policy' missing Returns documentation",
        "Function 'capture_state' missing Returns documentation",
        "Function 'enable_tracing' missing Returns documentation",
        "Function 'validate' missing Returns documentation",
        "Function 'get_validation_rules' missing Returns documentation",
        "Class 'Loggable' should have __init__ method",
        "Class 'Monitorable' should have __init__ method",
        "Class 'Measurable' should have __init__ method",
        "Class 'ErrorAware' should have __init__ method",
        "Class 'Debuggable' should have __init__ method",
        "Class 'Validatable' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/core/infrastructure/validation.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'merge' has parameters but no Args/Parameters documentation",
        "Function 'validate' has parameters but no Args/Parameters documentation",
        "Function 'validate' has parameters but no Args/Parameters documentation",
        "Function 'validate' has parameters but no Args/Parameters documentation",
        "Function 'validate' has parameters but no Args/Parameters documentation",
        "Function 'validate' has parameters but no Args/Parameters documentation",
        "Function 'add_rule' has parameters but no Args/Parameters documentation",
        "Function 'validate' has parameters but no Args/Parameters documentation",
        "Function 'validate' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ValidationResult' docstring should reference relevant architecture documents",
        "Class 'ValidationRule' docstring should reference relevant architecture documents",
        "Class 'StateValidationRule' docstring should reference relevant architecture documents",
        "Class 'RangeValidationRule' docstring should reference relevant architecture documents",
        "Class 'RegexValidationRule' docstring should reference relevant architecture documents",
        "Class 'DependencyValidationRule' docstring should reference relevant architecture documents",
        "Class 'ComponentValidator' docstring should reference relevant architecture documents",
        "Class 'ConfigValidator' docstring should reference relevant architecture documents",
        "Function 'merge' missing Returns documentation",
        "Function 'validate' missing Returns documentation",
        "Function 'get_description' missing Returns documentation",
        "Function 'validate' missing Returns documentation",
        "Function 'get_description' missing Returns documentation",
        "ctiondef 'validate' has very short docstring",
        "Function 'validate' missing Returns documentation",
        "Function 'get_description' missing Returns documentation",
        "Function 'validate' missing Returns documentation",
        "Function 'get_description' missing Returns documentation",
        "Function 'validate' missing Returns documentation",
        "Function 'get_description' missing Returns documentation",
        "Function 'add_rule' missing Returns documentation",
        "Function 'validate' missing Returns documentation",
        "Function 'validate' missing Returns documentation",
        "Class 'ValidationResult' should have __init__ method",
        "Class 'ValidationRule' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/logging/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.09142857142857137,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/logging/event_logger.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ssdef 'EventTypes'",
        "Function 'log_event' has parameters but no Args/Parameters documentation",
        "Function 'log_bar_event' has parameters but no Args/Parameters documentation",
        "Function 'log_indicator_event' has parameters but no Args/Parameters documentation",
        "Function 'log_signal_event' has parameters but no Args/Parameters documentation",
        "Function 'log_order_event' has parameters but no Args/Parameters documentation",
        "Function 'log_fill_event' has parameters but no Args/Parameters documentation",
        "Function 'log_portfolio_event' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'configure_event_logging' missing Returns documentation",
        "Function 'should_log_event' missing Returns documentation",
        "Function 'log_event' missing Returns documentation",
        "ctiondef 'log_bar_event' has very short docstring",
        "Function 'log_bar_event' missing Returns documentation",
        "Function 'log_indicator_event' missing Returns documentation",
        "ctiondef 'log_signal_event' has very short docstring",
        "Function 'log_signal_event' missing Returns documentation",
        "ctiondef 'log_order_event' has very short docstring",
        "Function 'log_order_event' missing Returns documentation",
        "ctiondef 'log_fill_event' has very short docstring",
        "Function 'log_fill_event' missing Returns documentation",
        "Function 'log_portfolio_event' missing Returns documentation",
        "Function 'get_event_logger' missing Returns documentation",
        "Class 'EventTypes' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/logging/structured.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'format' has parameters but no Args/Parameters documentation",
        "Function 'trace' has parameters but no Args/Parameters documentation",
        "Function 'debug' has parameters but no Args/Parameters documentation",
        "Function 'info' has parameters but no Args/Parameters documentation",
        "Function 'warning' has parameters but no Args/Parameters documentation",
        "Function 'error' has parameters but no Args/Parameters documentation",
        "Function 'critical' has parameters but no Args/Parameters documentation",
        "Function 'exception' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'decorator'",
        "Missing docstring for ctiondef 'wrapper'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'LogLevel' docstring should reference relevant architecture documents",
        "Class 'LogContext' docstring should reference relevant architecture documents",
        "Class 'StructuredFormatter' docstring should reference relevant architecture documents",
        "Class 'StructuredFormatter' should include Architecture Context section linking to design documents",
        "Class 'StructuredLogger' docstring should reference relevant architecture documents",
        "Class 'StructuredLogger' should include Architecture Context section linking to design documents",
        "Function 'trace_method' missing Returns documentation",
        "Function 'trace_method' missing usage example",
        "Class 'ContainerLogger' docstring should reference relevant architecture documents",
        "Function 'setup_logging' missing Returns documentation",
        "Function 'setup_logging' missing usage example",
        "Function 'format' missing Returns documentation",
        "ctiondef 'trace' has very short docstring",
        "Function 'trace' missing Returns documentation",
        "ctiondef 'debug' has very short docstring",
        "Function 'debug' missing Returns documentation",
        "ctiondef 'info' has very short docstring",
        "Function 'info' missing Returns documentation",
        "Function 'warning' missing Returns documentation",
        "ctiondef 'error' has very short docstring",
        "Function 'error' missing Returns documentation",
        "Function 'critical' missing Returns documentation",
        "Function 'exception' missing Returns documentation",
        "Function 'correlation_context' missing Returns documentation",
        "Function 'correlation_context' missing usage example",
        "Function 'bind' missing usage example",
        "Class 'LogLevel' should have __init__ method",
        "Class 'LogContext' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/core/minimal_types.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'component_id'",
        "Missing docstring for ctiondef 'initialize'",
        "Missing docstring for ctiondef 'start'",
        "Missing docstring for ctiondef 'stop'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Component' docstring should reference relevant architecture documents",
        "Class 'HasLifecycle' docstring should reference relevant architecture documents",
        "Class 'Component' should have __init__ method",
        "Class 'HasLifecycle' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/data/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'create_enhanced_data_handler' missing usage example",
        "Function 'create_enhanced_data_loader' missing usage example",
        "Function 'create_enhanced_streamer' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/data/capabilities.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_name'",
        "Function 'apply' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_name'",
        "Function 'apply' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_name'",
        "Function 'apply' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_name'",
        "Function 'apply' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_name'",
        "Function 'apply' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_name'",
        "Function 'apply' has parameters but no Args/Parameters documentation",
        "Function 'record_metric' has parameters but no Args/Parameters documentation",
        "Function 'emit_event' has parameters but no Args/Parameters documentation",
        "Function 'subscribe_to_event' has parameters but no Args/Parameters documentation",
        "Function 'unsubscribe_from_event' has parameters but no Args/Parameters documentation",
        "Function 'validate_data' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'create_wrapped_method'",
        "Missing docstring for ctiondef 'wrapped_method'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'DataLoggingCapability' docstring should reference relevant architecture documents",
        "Class 'DataMonitoringCapability' docstring should reference relevant architecture documents",
        "Class 'DataEventCapability' docstring should reference relevant architecture documents",
        "Class 'DataValidationCapability' docstring should reference relevant architecture documents",
        "Class 'DataSplittingCapability' docstring should reference relevant architecture documents",
        "Class 'MemoryOptimizationCapability' docstring should reference relevant architecture documents",
        "Function 'apply_capabilities' missing usage example",
        "Function 'apply' missing Returns documentation",
        "Function 'apply' missing Returns documentation",
        "Function 'apply' missing Returns documentation",
        "Function 'apply' missing Returns documentation",
        "Function 'apply' missing Returns documentation",
        "Function 'apply' missing Returns documentation",
        "Function 'log_info' missing Returns documentation",
        "Function 'log_error' missing Returns documentation",
        "Function 'log_warning' missing Returns documentation",
        "Function 'get_metrics' missing Returns documentation",
        "Function 'record_metric' missing Returns documentation",
        "ctiondef 'emit_event' has very short docstring",
        "Function 'emit_event' missing Returns documentation",
        "Function 'subscribe_to_event' missing Returns documentation",
        "Function 'unsubscribe_from_event' missing Returns documentation",
        "ctiondef 'validate_data' has very short docstring",
        "Function 'validate_data' missing Returns documentation",
        "Function 'get_validation_rules' missing Returns documentation",
        "Function 'setup_split' missing Returns documentation",
        "Function 'set_active_split' missing Returns documentation",
        "Function 'get_split_info' missing Returns documentation",
        "Function 'optimize_memory' missing Returns documentation",
        "Function 'get_memory_usage' missing Returns documentation",
        "Class 'DataLoggingCapability' should have __init__ method",
        "Class 'DataMonitoringCapability' should have __init__ method",
        "Class 'DataEventCapability' should have __init__ method",
        "Class 'DataValidationCapability' should have __init__ method",
        "Class 'DataSplittingCapability' should have __init__ method",
        "Class 'MemoryOptimizationCapability' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/data/examples.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'on_data_loaded'",
        "Missing docstring for ctiondef 'on_bars_streamed'",
        "Function 'check_protocol_compliance' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'example_basic_usage' missing Returns documentation",
        "Function 'example_enhanced_handler' missing Returns documentation",
        "Function 'example_custom_loader' missing Returns documentation",
        "Function 'example_streaming' missing Returns documentation",
        "Function 'example_protocol_compliance' missing Returns documentation",
        "Function 'example_composition_vs_inheritance' missing Returns documentation",
        "ncfunctiondef 'main' has very short docstring",
        "Function 'main' missing Returns documentation",
        "Function 'check_protocol_compliance' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/data/handlers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'load_data' has parameters but no Args/Parameters documentation",
        "Function 'has_data' has parameters but no Args/Parameters documentation",
        "Function 'get_latest_bar' has parameters but no Args/Parameters documentation",
        "Function 'get_latest_bars' has parameters but no Args/Parameters documentation",
        "Function 'get_bar_at_index' has parameters but no Args/Parameters documentation",
        "Function 'setup_split' has parameters but no Args/Parameters documentation",
        "Function 'set_active_split' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'name'",
        "Function 'subscribe' has parameters but no Args/Parameters documentation",
        "Function 'unsubscribe' has parameters but no Args/Parameters documentation",
        "Function 'get_latest_bar' has parameters but no Args/Parameters documentation",
        "Function 'validate_data' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SimpleHistoricalDataHandler' docstring should reference relevant architecture documents",
        "Class 'StreamingDataHandler' docstring should reference relevant architecture documents",
        "Class 'SimpleDataValidator' docstring should reference relevant architecture documents",
        "Function 'create_data_handler' missing Returns documentation",
        "Function 'name' missing Returns documentation",
        "Function 'load_data' missing Returns documentation",
        "ctiondef 'get_symbols' has very short docstring",
        "Function 'get_symbols' missing Returns documentation",
        "Function 'has_data' missing Returns documentation",
        "Function 'update_bars' missing Returns documentation",
        "Function 'has_more_data' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'get_latest_bar' missing Returns documentation",
        "Function 'get_latest_bars' missing Returns documentation",
        "Function 'get_bar_at_index' missing Returns documentation",
        "Function 'setup_split' missing Returns documentation",
        "Function 'set_active_split' missing Returns documentation",
        "Function 'get_split_info' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "Function 'stop' missing Returns documentation",
        "Function 'subscribe' missing Returns documentation",
        "Function 'unsubscribe' missing Returns documentation",
        "Function 'get_latest_bar' missing Returns documentation",
        "ctiondef 'start' has very short docstring",
        "Function 'start' missing Returns documentation",
        "ctiondef 'stop' has very short docstring",
        "Function 'stop' missing Returns documentation",
        "Function 'validate_data' missing Returns documentation",
        "Function 'get_validation_rules' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/data/loaders.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'load' has parameters but no Args/Parameters documentation",
        "Function 'validate' has parameters but no Args/Parameters documentation",
        "Function 'load' has parameters but no Args/Parameters documentation",
        "Function 'validate' has parameters but no Args/Parameters documentation",
        "Function 'load' has parameters but no Args/Parameters documentation",
        "Function 'validate' has parameters but no Args/Parameters documentation",
        "Function 'load' has parameters but no Args/Parameters documentation",
        "Function 'validate' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SimpleCSVLoader' docstring should reference relevant architecture documents",
        "Class 'MemoryEfficientCSVLoader' docstring should reference relevant architecture documents",
        "Class 'MultiFileLoader' docstring should reference relevant architecture documents",
        "Class 'DatabaseLoader' docstring should reference relevant architecture documents",
        "Class 'DatabaseLoader' should include Architecture Context section linking to design documents",
        "Function 'create_data_loader' missing Returns documentation",
        "Function 'load' missing Returns documentation",
        "Function 'validate' missing Returns documentation",
        "Function 'load' missing Returns documentation",
        "Function 'validate' missing Returns documentation",
        "Function 'load' missing Returns documentation",
        "Function 'validate' missing Returns documentation",
        "Function 'load' missing Returns documentation",
        "Function 'validate' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/data/migration_guide.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'migrate_data_handler_usage' missing Returns documentation",
        "Function 'migrate_component_factory' missing Returns documentation",
        "Function 'migrate_container_integration' missing Returns documentation",
        "Function 'migrate_existing_tests' missing Returns documentation",
        "Function 'main' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/data/models.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'from_dict' has parameters but no Args/Parameters documentation",
        "Function 'from_series' has parameters but no Args/Parameters documentation",
        "Function 'get_window' has parameters but no Args/Parameters documentation",
        "Function 'from_dataframe' has parameters but no Args/Parameters documentation",
        "Function 'get_view' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Timeframe' docstring should reference relevant architecture documents",
        "Class 'Bar' docstring should reference relevant architecture documents",
        "Class 'Tick' docstring should reference relevant architecture documents",
        "Class 'DataView' docstring should reference relevant architecture documents",
        "Class 'TimeSeriesData' docstring should reference relevant architecture documents",
        "Class 'DataSplit' docstring should reference relevant architecture documents",
        "Class 'ValidationResult' docstring should reference relevant architecture documents",
        "Function 'seconds' missing Returns documentation",
        "ctiondef '__post_init__' has very short docstring",
        "Function 'range' missing Returns documentation",
        "Function 'body' missing Returns documentation",
        "Function 'is_bullish' missing Returns documentation",
        "Function 'is_bearish' missing Returns documentation",
        "Function 'to_dict' missing Returns documentation",
        "Function 'from_dict' missing Returns documentation",
        "Function 'from_series' missing Returns documentation",
        "Function 'spread' missing Returns documentation",
        "Function 'get_current' missing Returns documentation",
        "Function 'advance' missing Returns documentation",
        "Function 'get_window' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'has_data' missing Returns documentation",
        "Function 'progress' missing Returns documentation",
        "Function 'from_dataframe' missing Returns documentation",
        "Function 'to_dataframe' missing Returns documentation",
        "Function 'get_view' missing Returns documentation",
        "Class 'Timeframe' should have __init__ method",
        "Class 'Bar' should have __init__ method",
        "Class 'Tick' should have __init__ method",
        "Class 'DataSplit' should have __init__ method",
        "Class 'ValidationResult' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/data/protocols.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'load_data' has parameters but no Args/Parameters documentation",
        "Function 'has_data' has parameters but no Args/Parameters documentation",
        "Function 'load' has parameters but no Args/Parameters documentation",
        "Function 'validate' has parameters but no Args/Parameters documentation",
        "Function 'get_latest_bar' has parameters but no Args/Parameters documentation",
        "Function 'get_latest_bars' has parameters but no Args/Parameters documentation",
        "Function 'get_bar_at_index' has parameters but no Args/Parameters documentation",
        "Function 'setup_split' has parameters but no Args/Parameters documentation",
        "Function 'set_active_split' has parameters but no Args/Parameters documentation",
        "Function 'validate_data' has parameters but no Args/Parameters documentation",
        "Function 'transform' has parameters but no Args/Parameters documentation",
        "Function 'inverse_transform' has parameters but no Args/Parameters documentation",
        "Function 'subscribe' has parameters but no Args/Parameters documentation",
        "Function 'unsubscribe' has parameters but no Args/Parameters documentation",
        "Function 'get_latest_bar' has parameters but no Args/Parameters documentation",
        "Function 'get_current_bar' has parameters but no Args/Parameters documentation",
        "Function 'get_historical_data' has parameters but no Args/Parameters documentation",
        "Function 'emit_event' has parameters but no Args/Parameters documentation",
        "Function 'subscribe_to_event' has parameters but no Args/Parameters documentation",
        "Function 'unsubscribe_from_event' has parameters but no Args/Parameters documentation",
        "Function 'log_info' has parameters but no Args/Parameters documentation",
        "Function 'log_error' has parameters but no Args/Parameters documentation",
        "Function 'record_metric' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'DataProvider' docstring should reference relevant architecture documents",
        "Class 'DataLoader' docstring should reference relevant architecture documents",
        "Class 'BarStreamer' docstring should reference relevant architecture documents",
        "Class 'DataAccessor' docstring should reference relevant architecture documents",
        "Class 'DataSplitter' docstring should reference relevant architecture documents",
        "Class 'DataValidator' docstring should reference relevant architecture documents",
        "Class 'DataTransformer' docstring should reference relevant architecture documents",
        "Class 'StreamingProvider' docstring should reference relevant architecture documents",
        "Class 'DataFeed' docstring should reference relevant architecture documents",
        "Class 'EventEmitter' docstring should reference relevant architecture documents",
        "Class 'EventSubscriber' docstring should reference relevant architecture documents",
        "Class 'HasLifecycle' docstring should reference relevant architecture documents",
        "Class 'HasLogging' docstring should reference relevant architecture documents",
        "Class 'HasMonitoring' docstring should reference relevant architecture documents",
        "Function 'load_data' missing Returns documentation",
        "ctiondef 'get_symbols' has very short docstring",
        "Function 'get_symbols' missing Returns documentation",
        "Function 'has_data' missing Returns documentation",
        "Function 'load' missing Returns documentation",
        "Function 'validate' missing Returns documentation",
        "Function 'update_bars' missing Returns documentation",
        "Function 'has_more_data' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'get_latest_bar' missing Returns documentation",
        "Function 'get_latest_bars' missing Returns documentation",
        "Function 'get_bar_at_index' missing Returns documentation",
        "Function 'setup_split' missing Returns documentation",
        "Function 'set_active_split' missing Returns documentation",
        "Function 'get_split_info' missing Returns documentation",
        "Function 'validate_data' missing Returns documentation",
        "Function 'get_validation_rules' missing Returns documentation",
        "ctiondef 'transform' has very short docstring",
        "Function 'transform' missing Returns documentation",
        "Function 'inverse_transform' missing Returns documentation",
        "Function 'subscribe' missing Returns documentation",
        "Function 'unsubscribe' missing Returns documentation",
        "Function 'get_latest_bar' missing Returns documentation",
        "Function 'get_current_bar' missing Returns documentation",
        "Function 'advance' missing Returns documentation",
        "Function 'get_historical_data' missing Returns documentation",
        "ctiondef 'emit_event' has very short docstring",
        "Function 'emit_event' missing Returns documentation",
        "Function 'subscribe_to_event' missing Returns documentation",
        "Function 'unsubscribe_from_event' missing Returns documentation",
        "ctiondef 'start' has very short docstring",
        "Function 'start' missing Returns documentation",
        "ctiondef 'stop' has very short docstring",
        "Function 'stop' missing Returns documentation",
        "ctiondef 'reset' has very short docstring",
        "Function 'reset' missing Returns documentation",
        "ctiondef 'log_info' has very short docstring",
        "Function 'log_info' missing Returns documentation",
        "ctiondef 'log_error' has very short docstring",
        "Function 'log_error' missing Returns documentation",
        "Function 'get_metrics' missing Returns documentation",
        "Function 'record_metric' missing Returns documentation",
        "Class 'DataProvider' should have __init__ method",
        "Class 'DataLoader' should have __init__ method",
        "Class 'BarStreamer' should have __init__ method",
        "Class 'DataAccessor' should have __init__ method",
        "Class 'DataSplitter' should have __init__ method",
        "Class 'DataValidator' should have __init__ method",
        "Class 'DataTransformer' should have __init__ method",
        "Class 'StreamingProvider' should have __init__ method",
        "Class 'DataFeed' should have __init__ method",
        "Class 'EventEmitter' should have __init__ method",
        "Class 'EventSubscriber' should have __init__ method",
        "Class 'HasLifecycle' should have __init__ method",
        "Class 'HasLogging' should have __init__ method",
        "Class 'HasMonitoring' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/data/streamers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'name'",
        "Function 'load_data' has parameters but no Args/Parameters documentation",
        "Function 'has_data' has parameters but no Args/Parameters documentation",
        "Function 'to_event_dict' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'name'",
        "Function 'to_event_dict' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'name'",
        "Function 'subscribe' has parameters but no Args/Parameters documentation",
        "Function 'unsubscribe' has parameters but no Args/Parameters documentation",
        "Function 'get_latest_bar' has parameters but no Args/Parameters documentation",
        "Function 'process_message' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'name'",
        "Function 'add_streamer' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'StreamedBar' docstring should reference relevant architecture documents",
        "Class 'StreamedSignal' docstring should reference relevant architecture documents",
        "Class 'SimpleHistoricalStreamer' docstring should reference relevant architecture documents",
        "Class 'SimpleHistoricalStreamer' should include Architecture Context section linking to design documents",
        "Class 'SimpleSignalStreamer' docstring should reference relevant architecture documents",
        "Class 'SimpleSignalStreamer' should include Architecture Context section linking to design documents",
        "Class 'SimpleRealTimeStreamer' docstring should reference relevant architecture documents",
        "Class 'SimpleRealTimeStreamer' should include Architecture Context section linking to design documents",
        "Class 'MultiSourceStreamer' docstring should reference relevant architecture documents",
        "Function 'create_streamer' missing Returns documentation",
        "Function 'to_bar' missing Returns documentation",
        "Function 'load_data' missing Returns documentation",
        "ctiondef 'get_symbols' has very short docstring",
        "Function 'get_symbols' missing Returns documentation",
        "Function 'has_data' missing Returns documentation",
        "Function 'stream_bars' missing Returns documentation",
        "Function 'stream_bars' missing usage example",
        "Function 'to_event_dict' missing Returns documentation",
        "Function 'load_signals' missing Returns documentation",
        "Function 'stream_signals' missing Returns documentation",
        "Function 'stream_signals' missing usage example",
        "Function 'to_event_dict' missing Returns documentation",
        "Function 'subscribe' missing Returns documentation",
        "Function 'unsubscribe' missing Returns documentation",
        "Function 'get_latest_bar' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "Function 'stop' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'process_message' missing Returns documentation",
        "Function 'add_streamer' missing Returns documentation",
        "Function 'start_all' missing Returns documentation",
        "Function 'stop_all' missing Returns documentation",
        "Function 'stream_combined' missing Returns documentation",
        "Class 'StreamedBar' should have __init__ method",
        "Class 'StreamedSignal' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/execution/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/analysis/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/analysis/signal_analysis.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'set_event_bus' has parameters but no Args/Parameters documentation",
        "Function 'export_signals' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'AnalysisType' docstring should reference relevant architecture documents",
        "Class 'SignalAnalysisResult' docstring should reference relevant architecture documents",
        "Class 'SignalAnalysisEngine' docstring should reference relevant architecture documents",
        "Class 'SignalAnalysisEngine' should include Architecture Context section linking to design documents",
        "Function 'to_dict' missing Returns documentation",
        "Function 'set_event_bus' missing Returns documentation",
        "Function 'process_market_data' missing Returns documentation",
        "Function 'process_market_data' missing usage example",
        "Function 'capture_signal' missing Returns documentation",
        "Function 'capture_signal' missing usage example",
        "Function 'calculate_strategy_metrics' missing Returns documentation",
        "Function 'calculate_signal_correlations' missing Returns documentation",
        "Function 'get_analysis_results' missing Returns documentation",
        "Function 'export_signals' missing Returns documentation",
        "Function 'clear' missing Returns documentation",
        "Class 'AnalysisType' should have __init__ method",
        "Class 'SignalAnalysisResult' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/backtest_broker.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'submit_order' has parameters but no Args/Parameters documentation",
        "Function 'cancel_order' has parameters but no Args/Parameters documentation",
        "Function 'get_order_status' has parameters but no Args/Parameters documentation",
        "Function 'execute_fill' has parameters but no Args/Parameters documentation",
        "Function 'update_position_prices' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BacktestAccount' docstring should reference relevant architecture documents",
        "Class 'BacktestBroker' docstring should reference relevant architecture documents",
        "Function 'equity' missing Returns documentation",
        "Function 'buying_power' missing Returns documentation",
        "Function 'submit_order' missing Returns documentation",
        "Function 'cancel_order' missing Returns documentation",
        "Function 'get_order_status' missing Returns documentation",
        "Function 'get_positions' missing Returns documentation",
        "Function 'get_account_info' missing Returns documentation",
        "Function 'execute_fill' missing Returns documentation",
        "Function 'update_position_prices' missing Returns documentation",
        "Function 'get_execution_summary' missing Returns documentation",
        "Class 'BacktestAccount' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/backtest_broker_refactored.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'submit_order' has parameters but no Args/Parameters documentation",
        "Function 'cancel_order' has parameters but no Args/Parameters documentation",
        "Function 'get_order_status' has parameters but no Args/Parameters documentation",
        "Function 'execute_fill' has parameters but no Args/Parameters documentation",
        "Function 'create_fill_for_portfolio_update' has parameters but no Args/Parameters documentation",
        "Function 'process_pending_orders' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'OrderTracker' docstring should reference relevant architecture documents",
        "Class 'BacktestBrokerRefactored' docstring should reference relevant architecture documents",
        "Class 'BacktestBrokerRefactored' should include Architecture Context section linking to design documents",
        "Function 'submit_order' missing Returns documentation",
        "Function 'cancel_order' missing Returns documentation",
        "Function 'get_order_status' missing Returns documentation",
        "Function 'get_positions' missing Returns documentation",
        "Function 'get_positions' missing usage example",
        "Function 'get_account_info' missing Returns documentation",
        "Function 'execute_fill' missing Returns documentation",
        "Function 'execute_fill' missing usage example",
        "Function 'create_fill_for_portfolio_update' missing usage example",
        "Function 'get_execution_summary' missing Returns documentation",
        "Function 'process_pending_orders' missing Returns documentation",
        "Function 'process_pending_orders' missing usage example",
        "Function 'simulate_fill' missing usage example",
        "Class 'OrderTracker' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/backtest_container_factory.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ClassifierConfig' docstring should reference relevant architecture documents",
        "Class 'RiskProfileConfig' docstring should reference relevant architecture documents",
        "Class 'BacktestContainerConfig' docstring should reference relevant architecture documents",
        "Class 'BacktestContainerFactory' docstring should reference relevant architecture documents",
        "Class 'BacktestContainerFactory' should include Architecture Context section linking to design documents",
        "Function 'create_example_backtest_container' missing Returns documentation",
        "Function 'create_instance' missing usage example",
        "Function 'create_from_workflow_config' missing usage example",
        "Function 'distribute_fill' missing Returns documentation",
        "Class 'ClassifierConfig' should have __init__ method",
        "Class 'RiskProfileConfig' should have __init__ method",
        "Class 'BacktestContainerConfig' should have __init__ method",
        "Class 'BacktestContainerFactory' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/execution/backtest_engine.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BacktestConfig' docstring should reference relevant architecture documents",
        "Class 'BacktestResults' docstring should reference relevant architecture documents",
        "Class 'UnifiedBacktestEngine' docstring should reference relevant architecture documents",
        "Class 'UnifiedBacktestEngine' should include Architecture Context section linking to design documents",
        "Function 'run' missing usage example",
        "Class 'BacktestConfig' should have __init__ method",
        "Class 'BacktestResults' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.11428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/backtest_manager.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'validate_config' has parameters but no Args/Parameters documentation",
        "Function 'execute' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'track_progress'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BacktestWorkflowManager' docstring should reference relevant architecture documents",
        "Class 'BacktestWorkflowManager' should include Architecture Context section linking to design documents",
        "Function 'validate_config' missing Returns documentation",
        "Function 'execute' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/capabilities.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_execution_capability' has parameters but no Args/Parameters documentation",
        "Function 'validate_capability' has parameters but no Args/Parameters documentation",
        "Function 'create_custom' has parameters but no Args/Parameters documentation",
        "Function 'combine' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BasicExecutionCapability' docstring should reference relevant architecture documents",
        "Class 'ExecutionCapabilities' docstring should reference relevant architecture documents",
        "Function 'create_execution_capability' missing Returns documentation",
        "Function 'validate_capability' missing Returns documentation",
        "Function 'create_custom' missing Returns documentation",
        "Function 'combine' missing Returns documentation",
        "Class 'BasicExecutionCapability' should have __init__ method",
        "Class 'ExecutionCapabilities' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/containers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_data_container' has parameters but no Args/Parameters documentation",
        "Function 'create_indicator_container' has parameters but no Args/Parameters documentation",
        "Function 'create_strategy_container' has parameters but no Args/Parameters documentation",
        "Function 'create_execution_container' has parameters but no Args/Parameters documentation",
        "Function 'create_risk_container' has parameters but no Args/Parameters documentation",
        "Function 'create_portfolio_container' has parameters but no Args/Parameters documentation",
        "Function 'create_classifier_container' has parameters but no Args/Parameters documentation",
        "Function 'create_analysis_container' has parameters but no Args/Parameters documentation",
        "Function 'create_signal_log_container' has parameters but no Args/Parameters documentation",
        "Function 'create_ensemble_container' has parameters but no Args/Parameters documentation",
        "Function 'process_event' has parameters but no Args/Parameters documentation",
        "Function 'process_event' has parameters but no Args/Parameters documentation",
        "Function 'process_event' has parameters but no Args/Parameters documentation",
        "Function 'process_event' has parameters but no Args/Parameters documentation",
        "Function 'process_event' has parameters but no Args/Parameters documentation",
        "Function 'process_event' has parameters but no Args/Parameters documentation",
        "Function 'process_event' has parameters but no Args/Parameters documentation",
        "Function 'process_event' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'collect_containers'",
        "Missing docstring for ctiondef 'collect_containers'",
        "Missing docstring for ssdef 'MarketDataObj'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'DataContainer' docstring should reference relevant architecture documents",
        "Class 'IndicatorContainer' docstring should reference relevant architecture documents",
        "Class 'StrategyContainer' docstring should reference relevant architecture documents",
        "Class 'ExecutionContainer' docstring should reference relevant architecture documents",
        "Class 'RiskContainer' docstring should reference relevant architecture documents",
        "Class 'PortfolioContainer' docstring should reference relevant architecture documents",
        "Class 'ClassifierContainer' docstring should reference relevant architecture documents",
        "Class 'AnalysisContainer' docstring should reference relevant architecture documents",
        "Class 'SignalLogContainer' docstring should reference relevant architecture documents",
        "Class 'EnsembleContainer' docstring should reference relevant architecture documents",
        "Function 'create_data_container' missing Returns documentation",
        "Function 'create_indicator_container' missing Returns documentation",
        "Function 'create_strategy_container' missing Returns documentation",
        "Function 'create_execution_container' missing Returns documentation",
        "Function 'create_risk_container' missing Returns documentation",
        "Function 'create_portfolio_container' missing Returns documentation",
        "Function 'create_classifier_container' missing Returns documentation",
        "Function 'create_analysis_container' missing Returns documentation",
        "Function 'create_signal_log_container' missing Returns documentation",
        "Function 'create_ensemble_container' missing Returns documentation",
        "Function 'register_execution_containers' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "Function 'get_capabilities' missing Returns documentation",
        "Function 'process_event' missing Returns documentation",
        "Function 'get_capabilities' missing Returns documentation",
        "Function 'get_required_indicators' missing Returns documentation",
        "Function 'process_event' missing Returns documentation",
        "Function 'get_capabilities' missing Returns documentation",
        "Function 'process_event' missing Returns documentation",
        "Function 'get_capabilities' missing Returns documentation",
        "Function 'process_event' missing Returns documentation",
        "Function 'get_capabilities' missing Returns documentation",
        "Function 'process_event' missing Returns documentation",
        "Function 'get_capabilities' missing Returns documentation",
        "Function 'get_required_indicators' missing Returns documentation",
        "Function 'process_event' missing Returns documentation",
        "Function 'get_capabilities' missing Returns documentation",
        "Function 'process_event' missing Returns documentation",
        "Function 'get_capabilities' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "Function 'get_capabilities' missing Returns documentation",
        "Function 'process_event' missing Returns documentation",
        "Function 'get_capabilities' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/coordinator_example.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'run_simple_backtest' has parameters but no Args/Parameters documentation",
        "Function 'run_full_backtest' has parameters but no Args/Parameters documentation",
        "Function 'run_signal_generation' has parameters but no Args/Parameters documentation",
        "Function 'run_custom_pattern' has parameters but no Args/Parameters documentation",
        "Function 'run_parallel_optimization' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BacktestCoordinator' docstring should reference relevant architecture documents",
        "Class 'BacktestCoordinator' should include Architecture Context section linking to design documents",
        "Function 'main' missing Returns documentation",
        "Function 'run_simple_backtest' missing Returns documentation",
        "Function 'run_full_backtest' missing Returns documentation",
        "Function 'run_signal_generation' missing Returns documentation",
        "Function 'run_custom_pattern' missing Returns documentation",
        "Function 'run_parallel_optimization' missing Returns documentation",
        "Function 'get_available_patterns' missing Returns documentation",
        "Function 'shutdown' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/execution_context.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'add_fill' has parameters but no Args/Parameters documentation",
        "Function 'transaction' has parameters but no Args/Parameters documentation",
        "Function 'get_state' has parameters but no Args/Parameters documentation",
        "Function 'set_state' has parameters but no Args/Parameters documentation",
        "Function 'update_state' has parameters but no Args/Parameters documentation",
        "Function 'add_active_order' has parameters but no Args/Parameters documentation",
        "Function 'remove_active_order' has parameters but no Args/Parameters documentation",
        "Function 'is_order_active' has parameters but no Args/Parameters documentation",
        "Function 'record_fill' has parameters but no Args/Parameters documentation",
        "Function 'record_order_status' has parameters but no Args/Parameters documentation",
        "Function 'increment_metric' has parameters but no Args/Parameters documentation",
        "Function 'acquire_lock' has parameters but no Args/Parameters documentation",
        "Function 'execute_atomic' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ExecutionMetrics' docstring should reference relevant architecture documents",
        "Class 'ExecutionContext' docstring should reference relevant architecture documents",
        "Function 'add_order' missing Returns documentation",
        "ctiondef 'add_fill' has very short docstring",
        "Function 'add_fill' missing Returns documentation",
        "Function 'to_dict' missing Returns documentation",
        "Function 'transaction' missing Returns documentation",
        "Function 'get_state' missing Returns documentation",
        "Function 'set_state' missing Returns documentation",
        "Function 'update_state' missing Returns documentation",
        "Function 'add_active_order' missing Returns documentation",
        "Function 'remove_active_order' missing Returns documentation",
        "Function 'is_order_active' missing Returns documentation",
        "Function 'get_active_orders' missing Returns documentation",
        "Function 'record_fill' missing Returns documentation",
        "Function 'record_order_status' missing Returns documentation",
        "Function 'increment_metric' missing Returns documentation",
        "Function 'get_metrics' missing Returns documentation",
        "Function 'acquire_lock' missing Returns documentation",
        "Function 'execute_atomic' missing Returns documentation",
        "Function 'get_thread_id' missing Returns documentation",
        "Function 'get_transaction_id' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Class 'ExecutionMetrics' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/execution_engine.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'process_event' has parameters but no Args/Parameters documentation",
        "Function 'execute_order' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'DefaultExecutionEngine' docstring should reference relevant architecture documents",
        "Function 'initialize' missing Returns documentation",
        "Function 'process_event' missing Returns documentation",
        "Function 'execute_order' missing Returns documentation",
        "Function 'get_execution_stats' missing Returns documentation",
        "Function 'shutdown' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/execution_module_factory.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'build_conservative_backtest_config' has parameters but no Args/Parameters documentation",
        "Function 'build_realistic_backtest_config' has parameters but no Args/Parameters documentation",
        "Function 'build_high_frequency_config' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ExecutionModuleConfig' docstring should reference relevant architecture documents",
        "Class 'ExecutionModuleFactory' docstring should reference relevant architecture documents",
        "Class 'ExecutionContainerBootstrap' docstring should reference relevant architecture documents",
        "Function 'create_execution_module_factory' missing Returns documentation",
        "Function 'create_execution_bootstrap' missing Returns documentation",
        "Function 'build_conservative_backtest_config' missing Returns documentation",
        "Function 'build_realistic_backtest_config' missing Returns documentation",
        "Function 'build_high_frequency_config' missing Returns documentation",
        "Function 'integrate_execution_with_risk' missing Returns documentation",
        "Function 'integrate_execution_with_risk' missing usage example",
        "Function 'validate_execution_module' missing usage example",
        "Function 'create_execution_module' missing usage example",
        "Function 'create_backtest_execution_module' missing usage example",
        "Function 'create_live_execution_module' missing usage example",
        "Function 'bootstrap_backtest_execution' missing usage example",
        "Function 'bootstrap_from_config' missing usage example",
        "Class 'ExecutionModuleConfig' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/improved_backtest_broker.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_backtest_broker' has parameters but no Args/Parameters documentation",
        "Function 'initialize' has parameters but no Args/Parameters documentation",
        "Function 'submit_order' has parameters but no Args/Parameters documentation",
        "Function 'cancel_order' has parameters but no Args/Parameters documentation",
        "Function 'get_order_status' has parameters but no Args/Parameters documentation",
        "Function 'process_pending_orders' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BacktestBrokerRefactored' docstring should reference relevant architecture documents",
        "Class 'BacktestBrokerRefactored' should include Architecture Context section linking to design documents",
        "Class 'ValidationResult' docstring should reference relevant architecture documents",
        "Function 'create_backtest_broker' missing Returns documentation",
        "Function 'component_id' missing Returns documentation",
        "Function 'initialize' missing Returns documentation",
        "ctiondef 'start' has very short docstring",
        "Function 'start' missing Returns documentation",
        "ctiondef 'stop' has very short docstring",
        "Function 'stop' missing Returns documentation",
        "ctiondef 'reset' has very short docstring",
        "Function 'reset' missing Returns documentation",
        "Function 'teardown' missing Returns documentation",
        "Function 'submit_order' missing Returns documentation",
        "Function 'cancel_order' missing Returns documentation",
        "Function 'get_order_status' missing Returns documentation",
        "Function 'get_positions' missing Returns documentation",
        "Function 'get_account_info' missing Returns documentation",
        "Function 'process_pending_orders' missing Returns documentation",
        "Function 'get_execution_summary' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/improved_dependency_injection.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_broker_spec' has parameters but no Args/Parameters documentation",
        "Function 'create_market_simulator_spec' has parameters but no Args/Parameters documentation",
        "Function 'create_execution_engine_spec' has parameters but no Args/Parameters documentation",
        "Function 'create_execution_module' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'create_broker' has parameters but no Args/Parameters documentation",
        "Function 'create_order_manager' has parameters but no Args/Parameters documentation",
        "Function 'create_market_simulator' has parameters but no Args/Parameters documentation",
        "Function 'create_execution_engine' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'register_broker' has parameters but no Args/Parameters documentation",
        "Function 'register_order_manager' has parameters but no Args/Parameters documentation",
        "Function 'register_market_simulator' has parameters but no Args/Parameters documentation",
        "Function 'register_execution_engine' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'with_broker' has parameters but no Args/Parameters documentation",
        "Function 'with_market_simulator' has parameters but no Args/Parameters documentation",
        "Function 'with_execution_engine' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ExecutionDependencyProvider' docstring should reference relevant architecture documents",
        "Class 'ExecutionComponentSpec' docstring should reference relevant architecture documents",
        "Class 'ExecutionComponentFactory' docstring should reference relevant architecture documents",
        "Class 'ExecutionDependencyResolver' docstring should reference relevant architecture documents",
        "Function 'create_broker_spec' missing Returns documentation",
        "Function 'create_order_manager_spec' missing Returns documentation",
        "Function 'create_market_simulator_spec' missing Returns documentation",
        "Function 'create_execution_engine_spec' missing Returns documentation",
        "Class 'ExecutionModuleBuilder' docstring should reference relevant architecture documents",
        "Function 'create_execution_module' missing Returns documentation",
        "Function 'get_broker' missing Returns documentation",
        "ctiondef 'get_order_manager' has very short docstring",
        "Function 'get_order_manager' missing Returns documentation",
        "Function 'get_market_simulator' missing Returns documentation",
        "Function 'get_execution_engine' missing Returns documentation",
        "Function 'create_broker' missing Returns documentation",
        "Function 'create_order_manager' missing Returns documentation",
        "Function 'create_market_simulator' missing Returns documentation",
        "Function 'create_execution_engine' missing Returns documentation",
        "Function 'register_broker' missing Returns documentation",
        "Function 'register_order_manager' missing Returns documentation",
        "Function 'register_market_simulator' missing Returns documentation",
        "Function 'register_execution_engine' missing Returns documentation",
        "ctiondef 'get_broker' has very short docstring",
        "Function 'get_broker' missing Returns documentation",
        "ctiondef 'get_order_manager' has very short docstring",
        "Function 'get_order_manager' missing Returns documentation",
        "Function 'get_market_simulator' missing Returns documentation",
        "Function 'get_execution_engine' missing Returns documentation",
        "ctiondef 'with_broker' has very short docstring",
        "Function 'with_broker' missing Returns documentation",
        "Function 'with_order_manager' missing Returns documentation",
        "Function 'with_market_simulator' missing Returns documentation",
        "Function 'with_execution_engine' missing Returns documentation",
        "Function 'build' missing Returns documentation",
        "Class 'ExecutionDependencyProvider' should have __init__ method",
        "Class 'ExecutionComponentSpec' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/execution/improved_execution_engine.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_execution_engine' has parameters but no Args/Parameters documentation",
        "Function 'event_bus' has parameters but no Args/Parameters documentation",
        "Function 'initialize' has parameters but no Args/Parameters documentation",
        "Function 'process_event' has parameters but no Args/Parameters documentation",
        "Function 'execute_order' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ImprovedExecutionEngine' docstring should reference relevant architecture documents",
        "Class 'ImprovedExecutionEngine' should include Architecture Context section linking to design documents",
        "Class 'ValidationResult' docstring should reference relevant architecture documents",
        "Function 'create_execution_engine' missing Returns documentation",
        "Function 'component_id' missing Returns documentation",
        "ctiondef 'event_bus' has very short docstring",
        "Function 'event_bus' missing Returns documentation",
        "ctiondef 'event_bus' has very short docstring",
        "Function 'event_bus' missing Returns documentation",
        "Function 'initialize' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "Function 'stop' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'teardown' missing Returns documentation",
        "Function 'initialize_events' missing Returns documentation",
        "Function 'teardown_events' missing Returns documentation",
        "Function 'process_event' missing Returns documentation",
        "Function 'execute_order' missing Returns documentation",
        "Function 'get_execution_stats' missing Returns documentation",
        "Function 'shutdown' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/improved_market_simulation.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_market_simulator' has parameters but no Args/Parameters documentation",
        "Function 'calculate_slippage' has parameters but no Args/Parameters documentation",
        "Function 'calculate_commission' has parameters but no Args/Parameters documentation",
        "Function 'calculate_slippage' has parameters but no Args/Parameters documentation",
        "Function 'calculate_slippage' has parameters but no Args/Parameters documentation",
        "Function 'calculate_commission' has parameters but no Args/Parameters documentation",
        "Function 'calculate_commission' has parameters but no Args/Parameters documentation",
        "Function 'initialize' has parameters but no Args/Parameters documentation",
        "Function 'simulate_fill' has parameters but no Args/Parameters documentation",
        "Function 'calculate_slippage' has parameters but no Args/Parameters documentation",
        "Function 'calculate_commission' has parameters but no Args/Parameters documentation",
        "Function 'update_market_data' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SlippageModel' docstring should reference relevant architecture documents",
        "Class 'CommissionModel' docstring should reference relevant architecture documents",
        "Class 'MarketConditions' docstring should reference relevant architecture documents",
        "Class 'PercentageSlippageModel' docstring should reference relevant architecture documents",
        "Class 'VolumeImpactSlippageModel' docstring should reference relevant architecture documents",
        "Class 'TieredCommissionModel' docstring should reference relevant architecture documents",
        "Class 'PerShareCommissionModel' docstring should reference relevant architecture documents",
        "Class 'ImprovedMarketSimulator' docstring should reference relevant architecture documents",
        "Class 'ImprovedMarketSimulator' should include Architecture Context section linking to design documents",
        "Function 'create_market_simulator' missing Returns documentation",
        "Function 'create_conservative_simulator' missing Returns documentation",
        "Function 'create_realistic_simulator' missing Returns documentation",
        "Function 'calculate_slippage' missing Returns documentation",
        "Function 'calculate_commission' missing Returns documentation",
        "Function 'spread' missing Returns documentation",
        "Function 'mid_price' missing Returns documentation",
        "Function 'calculate_slippage' missing Returns documentation",
        "Function 'calculate_slippage' missing Returns documentation",
        "Function 'calculate_commission' missing Returns documentation",
        "Function 'calculate_commission' missing Returns documentation",
        "Function 'component_id' missing Returns documentation",
        "Function 'initialize' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "Function 'stop' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'teardown' missing Returns documentation",
        "Function 'simulate_fill' missing Returns documentation",
        "Function 'calculate_slippage' missing Returns documentation",
        "Function 'calculate_commission' missing Returns documentation",
        "Function 'update_market_data' missing Returns documentation",
        "Function 'get_simulation_stats' missing Returns documentation",
        "Class 'SlippageModel' should have __init__ method",
        "Class 'CommissionModel' should have __init__ method",
        "Class 'MarketConditions' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/improved_order_manager.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_order_manager' has parameters but no Args/Parameters documentation",
        "Function 'initialize' has parameters but no Args/Parameters documentation",
        "Function 'create_order' has parameters but no Args/Parameters documentation",
        "Function 'submit_order' has parameters but no Args/Parameters documentation",
        "Function 'update_order_status' has parameters but no Args/Parameters documentation",
        "Function 'add_fill' has parameters but no Args/Parameters documentation",
        "Function 'cancel_order' has parameters but no Args/Parameters documentation",
        "Function 'validate_order' has parameters but no Args/Parameters documentation",
        "Function 'process_order' has parameters but no Args/Parameters documentation",
        "Function 'get_order' has parameters but no Args/Parameters documentation",
        "Function 'get_order_status' has parameters but no Args/Parameters documentation",
        "Function 'get_order_fills' has parameters but no Args/Parameters documentation",
        "Function 'get_orders_by_symbol' has parameters but no Args/Parameters documentation",
        "Function 'get_orders_by_status' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ImprovedOrderManager' docstring should reference relevant architecture documents",
        "Class 'ImprovedOrderManager' should include Architecture Context section linking to design documents",
        "Function 'create_order_manager' missing Returns documentation",
        "Function 'component_id' missing Returns documentation",
        "Function 'initialize' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "Function 'stop' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'teardown' missing Returns documentation",
        "Function 'create_order' missing Returns documentation",
        "Function 'submit_order' missing Returns documentation",
        "Function 'update_order_status' missing Returns documentation",
        "Function 'add_fill' missing Returns documentation",
        "Function 'cancel_order' missing Returns documentation",
        "Function 'validate_order' missing Returns documentation",
        "Function 'process_order' missing Returns documentation",
        "ncfunctiondef 'get_order' has very short docstring",
        "Function 'get_order' missing Returns documentation",
        "ncfunctiondef 'get_order_status' has very short docstring",
        "Function 'get_order_status' missing Returns documentation",
        "Function 'get_order_fills' missing Returns documentation",
        "Function 'get_active_orders' missing Returns documentation",
        "Function 'get_pending_orders' missing Returns documentation",
        "Function 'get_orders_by_symbol' missing Returns documentation",
        "Function 'get_orders_by_status' missing Returns documentation",
        "Function 'cleanup_old_orders' missing Returns documentation",
        "Function 'get_order_summary' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/market_simulation.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'calculate_slippage' has parameters but no Args/Parameters documentation",
        "Function 'calculate_commission' has parameters but no Args/Parameters documentation",
        "Function 'calculate_slippage' has parameters but no Args/Parameters documentation",
        "Function 'calculate_slippage' has parameters but no Args/Parameters documentation",
        "Function 'calculate_commission' has parameters but no Args/Parameters documentation",
        "Function 'calculate_commission' has parameters but no Args/Parameters documentation",
        "Function 'calculate_commission' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'simulate_fill' has parameters but no Args/Parameters documentation",
        "Function 'calculate_slippage' has parameters but no Args/Parameters documentation",
        "Function 'calculate_commission' has parameters but no Args/Parameters documentation",
        "Function 'calculate_slippage' has parameters but no Args/Parameters documentation",
        "Function 'calculate_commission' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SlippageModel' docstring should reference relevant architecture documents",
        "Class 'CommissionModel' docstring should reference relevant architecture documents",
        "Class 'FixedSlippageModel' docstring should reference relevant architecture documents",
        "Class 'VolumeSlippageModel' docstring should reference relevant architecture documents",
        "Class 'FixedCommissionModel' docstring should reference relevant architecture documents",
        "Class 'PerShareCommissionModel' docstring should reference relevant architecture documents",
        "Class 'PercentCommissionModel' docstring should reference relevant architecture documents",
        "Class 'MarketSimulator' docstring should reference relevant architecture documents",
        "Class 'PercentageSlippageModel' docstring should reference relevant architecture documents",
        "Class 'TieredCommissionModel' docstring should reference relevant architecture documents",
        "Function 'calculate_slippage' missing Returns documentation",
        "Function 'calculate_commission' missing Returns documentation",
        "Function 'calculate_slippage' missing Returns documentation",
        "Function 'calculate_slippage' missing Returns documentation",
        "Function 'calculate_commission' missing Returns documentation",
        "Function 'calculate_commission' missing Returns documentation",
        "Function 'calculate_commission' missing Returns documentation",
        "Function 'simulate_fill' missing Returns documentation",
        "Function 'calculate_slippage' missing Returns documentation",
        "Function 'calculate_commission' missing Returns documentation",
        "Function 'calculate_slippage' missing Returns documentation",
        "Function 'calculate_commission' missing Returns documentation",
        "Class 'SlippageModel' should have __init__ method",
        "Class 'CommissionModel' should have __init__ method",
        "Class 'FixedSlippageModel' should have __init__ method",
        "Class 'VolumeSlippageModel' should have __init__ method",
        "Class 'FixedCommissionModel' should have __init__ method",
        "Class 'PerShareCommissionModel' should have __init__ method",
        "Class 'PercentCommissionModel' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/modes.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ExecutionModeHandler' docstring should reference relevant architecture documents",
        "Function 'run_signal_generation' missing usage example",
        "Function 'run_signal_replay' missing usage example",
        "Class 'ExecutionModeHandler' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/execution/order_manager.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'create_order' has parameters but no Args/Parameters documentation",
        "Function 'submit_order' has parameters but no Args/Parameters documentation",
        "Function 'update_order_status' has parameters but no Args/Parameters documentation",
        "Function 'add_fill' has parameters but no Args/Parameters documentation",
        "Function 'cancel_order' has parameters but no Args/Parameters documentation",
        "Function 'get_order' has parameters but no Args/Parameters documentation",
        "Function 'get_order_status' has parameters but no Args/Parameters documentation",
        "Function 'get_order_fills' has parameters but no Args/Parameters documentation",
        "Function 'validate_order' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'OrderManager' docstring should reference relevant architecture documents",
        "ctiondef 'create_order' has very short docstring",
        "Function 'create_order' missing Returns documentation",
        "Function 'submit_order' missing Returns documentation",
        "Function 'update_order_status' missing Returns documentation",
        "ctiondef 'add_fill' has very short docstring",
        "Function 'add_fill' missing Returns documentation",
        "ctiondef 'cancel_order' has very short docstring",
        "Function 'cancel_order' missing Returns documentation",
        "ctiondef 'get_order' has very short docstring",
        "Function 'get_order' missing Returns documentation",
        "ctiondef 'get_order_status' has very short docstring",
        "Function 'get_order_status' missing Returns documentation",
        "Function 'get_order_fills' missing Returns documentation",
        "Function 'get_active_orders' missing Returns documentation",
        "Function 'get_pending_orders' missing Returns documentation",
        "Function 'validate_order' missing Returns documentation",
        "Function 'cleanup_old_orders' missing Returns documentation",
        "Function 'get_order_summary' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/execution/protocols.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'submit_order' has parameters but no Args/Parameters documentation",
        "Function 'cancel_order' has parameters but no Args/Parameters documentation",
        "Function 'get_order_status' has parameters but no Args/Parameters documentation",
        "Function 'process_order' has parameters but no Args/Parameters documentation",
        "Function 'validate_order' has parameters but no Args/Parameters documentation",
        "Function 'update_order_status' has parameters but no Args/Parameters documentation",
        "Function 'simulate_fill' has parameters but no Args/Parameters documentation",
        "Function 'calculate_slippage' has parameters but no Args/Parameters documentation",
        "Function 'calculate_commission' has parameters but no Args/Parameters documentation",
        "Function 'process_event' has parameters but no Args/Parameters documentation",
        "Function 'execute_order' has parameters but no Args/Parameters documentation",
        "Function 'validate_capability' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'OrderType' docstring should reference relevant architecture documents",
        "Class 'OrderSide' docstring should reference relevant architecture documents",
        "Class 'OrderStatus' docstring should reference relevant architecture documents",
        "Class 'FillType' docstring should reference relevant architecture documents",
        "Class 'FillStatus' docstring should reference relevant architecture documents",
        "Class 'Order' docstring should reference relevant architecture documents",
        "Class 'Fill' docstring should reference relevant architecture documents",
        "Class 'Position' docstring should reference relevant architecture documents",
        "Class 'Broker' docstring should reference relevant architecture documents",
        "Class 'OrderProcessor' docstring should reference relevant architecture documents",
        "Class 'MarketSimulator' docstring should reference relevant architecture documents",
        "Class 'ExecutionEngine' docstring should reference relevant architecture documents",
        "Class 'ExecutionCapability' docstring should reference relevant architecture documents",
        "Function 'submit_order' missing Returns documentation",
        "Function 'cancel_order' missing Returns documentation",
        "Function 'get_order_status' missing Returns documentation",
        "Function 'get_positions' missing Returns documentation",
        "Function 'get_account_info' missing Returns documentation",
        "Function 'process_order' missing Returns documentation",
        "Function 'validate_order' missing Returns documentation",
        "Function 'update_order_status' missing Returns documentation",
        "Function 'simulate_fill' missing Returns documentation",
        "Function 'calculate_slippage' missing Returns documentation",
        "Function 'calculate_commission' missing Returns documentation",
        "Function 'initialize' missing Returns documentation",
        "Function 'process_event' missing Returns documentation",
        "Function 'execute_order' missing Returns documentation",
        "Function 'get_execution_stats' missing Returns documentation",
        "Function 'shutdown' missing Returns documentation",
        "Function 'capability_id' missing Returns documentation",
        "Function 'supported_order_types' missing Returns documentation",
        "Function 'supported_symbols' missing Returns documentation",
        "Function 'validate_capability' missing Returns documentation",
        "Class 'OrderType' should have __init__ method",
        "Class 'OrderSide' should have __init__ method",
        "Class 'OrderStatus' should have __init__ method",
        "Class 'FillType' should have __init__ method",
        "Class 'FillStatus' should have __init__ method",
        "Class 'Order' should have __init__ method",
        "Class 'Fill' should have __init__ method",
        "Class 'Position' should have __init__ method",
        "Class 'Broker' should have __init__ method",
        "Class 'OrderProcessor' should have __init__ method",
        "Class 'MarketSimulator' should have __init__ method",
        "Class 'ExecutionEngine' should have __init__ method",
        "Class 'ExecutionCapability' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/execution/signal_generation_engine.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'setup_components' has parameters but no Args/Parameters documentation",
        "Function 'export_signals' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SignalGenerationContainer' docstring should reference relevant architecture documents",
        "Class 'SignalGenerationContainer' should include Architecture Context section linking to design documents",
        "Class 'SignalGenerationContainerFactory' docstring should reference relevant architecture documents",
        "Function 'setup_components' missing Returns documentation",
        "Function 'run_analysis' missing usage example",
        "Function 'export_signals' missing Returns documentation",
        "Function 'get_optimal_stops' missing Returns documentation",
        "Function 'get_strategy_rankings' missing Returns documentation",
        "Function 'create_instance' missing usage example",
        "Function 'create_from_workflow' missing usage example",
        "Class 'SignalGenerationContainerFactory' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/execution/signal_replay_engine.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'setup_components' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SignalReplayContainer' docstring should reference relevant architecture documents",
        "Class 'SignalReplayContainer' should include Architecture Context section linking to design documents",
        "Class 'SignalReplayContainerFactory' docstring should reference relevant architecture documents",
        "Function 'setup_components' missing Returns documentation",
        "Function 'run_replay' missing usage example",
        "Function 'create_instance' missing usage example",
        "Function 'create_for_ensemble_optimization' missing usage example",
        "Function 'create_batch_for_optimization' missing usage example",
        "Class 'SignalReplayContainerFactory' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/execution/simple_backtest_engine.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'run_simple_backtest' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'load_data' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Trade' docstring should reference relevant architecture documents",
        "Class 'BacktestResult' docstring should reference relevant architecture documents",
        "Class 'SimpleBacktestEngine' docstring should reference relevant architecture documents",
        "Function 'run_simple_backtest' missing Returns documentation",
        "Function 'load_data' missing Returns documentation",
        "ctiondef 'run_backtest' has very short docstring",
        "Function 'run_backtest' missing Returns documentation",
        "Class 'Trade' should have __init__ method",
        "Class 'BacktestResult' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/execution/validation.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'validate_portfolio_integration' has parameters but no Args/Parameters documentation",
        "Function 'success' has parameters but no Args/Parameters documentation",
        "Function 'failure' has parameters but no Args/Parameters documentation",
        "Function 'warning' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ValidationResult' docstring should reference relevant architecture documents",
        "Class 'OrderValidator' docstring should reference relevant architecture documents",
        "Class 'FillValidator' docstring should reference relevant architecture documents",
        "Class 'ExecutionValidator' docstring should reference relevant architecture documents",
        "Function 'create_order_validator' missing Returns documentation",
        "Function 'create_fill_validator' missing Returns documentation",
        "Function 'create_execution_validator' missing Returns documentation",
        "Function 'validate_order_quick' missing Returns documentation",
        "Function 'validate_portfolio_integration' missing Returns documentation",
        "Function 'success' missing Returns documentation",
        "Function 'failure' missing Returns documentation",
        "Function 'warning' missing Returns documentation",
        "Function 'validate_order' missing usage example",
        "Function 'validate_fill' missing usage example",
        "Function 'validate_order_execution_flow' missing usage example",
        "Class 'ValidationResult' should have __init__ method",
        "Class 'FillValidator' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/risk/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/risk/capabilities.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_name'",
        "Missing docstring for ctiondef 'get_name'",
        "Function 'apply' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'RiskPortfolioCapability' docstring should reference relevant architecture documents",
        "Class 'RiskPortfolioCapability' should include Architecture Context section linking to design documents",
        "Class 'ThreadSafeRiskPortfolioCapability' docstring should reference relevant architecture documents",
        "Class 'ThreadSafeRiskPortfolioCapability' should include Architecture Context section linking to design documents",
        "Function 'apply' missing usage example",
        "Function 'apply' missing Returns documentation",
        "Function 'process_signal' missing Returns documentation",
        "Function 'get_portfolio_state' missing Returns documentation",
        "Function 'get_position' missing Returns documentation",
        "Function 'get_risk_metrics' missing Returns documentation",
        "Class 'RiskPortfolioCapability' should have __init__ method",
        "Class 'ThreadSafeRiskPortfolioCapability' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/risk/dependency_injection.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_position_sizer_spec' has parameters but no Args/Parameters documentation",
        "Function 'create_risk_limit_spec' has parameters but no Args/Parameters documentation",
        "Function 'create_signal_processor_spec' has parameters but no Args/Parameters documentation",
        "Function 'get_position_sizer' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'create_position_sizer' has parameters but no Args/Parameters documentation",
        "Function 'create_risk_limit' has parameters but no Args/Parameters documentation",
        "Function 'create_signal_processor' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'register_position_sizer' has parameters but no Args/Parameters documentation",
        "Function 'register_risk_limit' has parameters but no Args/Parameters documentation",
        "Function 'register_signal_processor' has parameters but no Args/Parameters documentation",
        "Function 'register_portfolio_state' has parameters but no Args/Parameters documentation",
        "Function 'get_position_sizer' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'RiskDependencyProvider' docstring should reference relevant architecture documents",
        "Class 'RiskComponentSpec' docstring should reference relevant architecture documents",
        "Class 'RiskComponentFactory' docstring should reference relevant architecture documents",
        "Class 'RiskDependencyResolver' docstring should reference relevant architecture documents",
        "Function 'create_position_sizer_spec' missing Returns documentation",
        "Function 'create_risk_limit_spec' missing Returns documentation",
        "Function 'create_signal_processor_spec' missing Returns documentation",
        "Function 'get_position_sizer' missing Returns documentation",
        "Function 'get_risk_limits' missing Returns documentation",
        "Function 'get_signal_processor' missing Returns documentation",
        "Function 'get_portfolio_state' missing Returns documentation",
        "Function 'create_position_sizer' missing Returns documentation",
        "Function 'create_risk_limit' missing Returns documentation",
        "Function 'create_signal_processor' missing Returns documentation",
        "Function 'register_position_sizer' missing Returns documentation",
        "Function 'register_risk_limit' missing Returns documentation",
        "Function 'register_signal_processor' missing Returns documentation",
        "Function 'register_portfolio_state' missing Returns documentation",
        "Function 'get_position_sizer' missing Returns documentation",
        "Function 'get_risk_limits' missing Returns documentation",
        "Function 'get_signal_processor' missing Returns documentation",
        "Function 'get_portfolio_state' missing Returns documentation",
        "Class 'RiskDependencyProvider' should have __init__ method",
        "Class 'RiskComponentSpec' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/risk/example_usage.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'create_signal_generator'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'create_risk_portfolio_container' missing Returns documentation",
        "Function 'create_risk_portfolio_container' missing usage example",
        "Function 'example_workflow' missing Returns documentation",
        "Function 'generate_signal' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/risk/improved_capabilities.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_name'",
        "Missing docstring for ctiondef 'get_name'",
        "Missing docstring for ctiondef 'get_name'",
        "Missing docstring for ctiondef 'get_name'",
        "Missing docstring for ctiondef 'get_name'",
        "Function 'apply' has parameters but no Args/Parameters documentation",
        "Function 'process_signals' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'RiskPortfolioCapability' docstring should reference relevant architecture documents",
        "Class 'RiskPortfolioCapability' should include Architecture Context section linking to design documents",
        "Class 'PositionSizingCapability' docstring should reference relevant architecture documents",
        "Class 'RiskLimitCapability' docstring should reference relevant architecture documents",
        "Class 'PortfolioTrackingCapability' docstring should reference relevant architecture documents",
        "Class 'ThreadSafeRiskPortfolioCapability' docstring should reference relevant architecture documents",
        "Class 'ThreadSafeRiskPortfolioCapability' should include Architecture Context section linking to design documents",
        "Function 'get_required_capabilities' missing Returns documentation",
        "Function 'get_provided_capabilities' missing Returns documentation",
        "Function 'apply' missing usage example",
        "Function 'apply' missing Returns documentation",
        "Function 'process_signals' missing Returns documentation",
        "Function 'get_portfolio_state' missing Returns documentation",
        "Function 'get_position' missing Returns documentation",
        "Function 'get_risk_metrics' missing Returns documentation",
        "Function 'get_risk_report' missing Returns documentation",
        "Function 'update_fills' missing Returns documentation",
        "ctiondef 'update_market_data' has very short docstring",
        "Function 'update_market_data' missing Returns documentation",
        "Function 'enhanced_initialize' missing Returns documentation",
        "Function 'enhanced_start' missing Returns documentation",
        "Function 'enhanced_stop' missing Returns documentation",
        "Function 'enhanced_reset' missing Returns documentation",
        "Function 'enhanced_teardown' missing Returns documentation",
        "Class 'RiskPortfolioCapability' should have __init__ method",
        "Class 'PositionSizingCapability' should have __init__ method",
        "Class 'RiskLimitCapability' should have __init__ method",
        "Class 'PortfolioTrackingCapability' should have __init__ method",
        "Class 'ThreadSafeRiskPortfolioCapability' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/risk/improved_risk_portfolio.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'event_bus' has parameters but no Args/Parameters documentation",
        "Function 'initialize' has parameters but no Args/Parameters documentation",
        "Function 'update_fills' has parameters but no Args/Parameters documentation",
        "Function 'update_market_data' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'RiskPortfolioContainer' docstring should reference relevant architecture documents",
        "Class 'RiskPortfolioContainer' should include Architecture Context section linking to design documents",
        "Function 'create_risk_portfolio_container' missing usage example",
        "Function 'component_id' missing Returns documentation",
        "ctiondef 'event_bus' has very short docstring",
        "Function 'event_bus' missing Returns documentation",
        "ctiondef 'event_bus' has very short docstring",
        "Function 'event_bus' missing Returns documentation",
        "Function 'initialize' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "ctiondef 'stop' has very short docstring",
        "Function 'stop' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'teardown' missing Returns documentation",
        "Function 'initialize_events' missing Returns documentation",
        "Function 'teardown_events' missing Returns documentation",
        "Function 'configure_position_sizer' missing usage example",
        "Function 'configure_risk_limit' missing usage example",
        "Function 'configure_signal_processor' missing usage example",
        "Function 'add_strategy' missing Returns documentation",
        "Function 'remove_strategy' missing Returns documentation",
        "Function 'process_signals' missing usage example",
        "Function 'get_portfolio_state' missing Returns documentation",
        "Function 'update_fills' missing Returns documentation",
        "Function 'update_market_data' missing Returns documentation",
        "Function 'get_risk_report' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/risk/optimized_signal_flow.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'register_strategy' has parameters but no Args/Parameters documentation",
        "Function 'unregister_strategy' has parameters but no Args/Parameters documentation",
        "Function 'add_order_callback' has parameters but no Args/Parameters documentation",
        "Function 'collect_signal' has parameters but no Args/Parameters documentation",
        "Function 'process_signals' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'is_duplicate' has parameters but no Args/Parameters documentation",
        "Function 'add_signal' has parameters but no Args/Parameters documentation",
        "Function 'process_batch' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'OptimizedSignalFlowManager' docstring should reference relevant architecture documents",
        "Class 'HighPerformanceSignalCache' docstring should reference relevant architecture documents",
        "Class 'BatchSignalProcessor' docstring should reference relevant architecture documents",
        "Function 'create_optimized_flow_manager' missing usage example",
        "Function 'register_strategy' missing Returns documentation",
        "Function 'unregister_strategy' missing Returns documentation",
        "Function 'add_order_callback' missing Returns documentation",
        "Function 'collect_signal' missing Returns documentation",
        "Function 'process_signals' missing Returns documentation",
        "Function 'get_statistics' missing Returns documentation",
        "Function 'is_duplicate' missing Returns documentation",
        "Function 'add_signal' missing Returns documentation",
        "Function 'process_batch' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/risk/portfolio_state.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get_position' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PortfolioState' docstring should reference relevant architecture documents",
        "Function 'get_position' missing Returns documentation",
        "Function 'get_all_positions' missing Returns documentation",
        "Function 'get_cash_balance' missing Returns documentation",
        "Function 'get_total_value' missing Returns documentation",
        "Function 'get_risk_metrics' missing Returns documentation",
        "Function 'update_position' missing usage example",
        "Function 'update_market_prices' missing Returns documentation",
        "Function 'get_performance_summary' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/risk/position_sizing.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BasePositionSizer' docstring should reference relevant architecture documents",
        "Class 'FixedPositionSizer' docstring should reference relevant architecture documents",
        "Class 'PercentagePositionSizer' docstring should reference relevant architecture documents",
        "Class 'KellyCriterionSizer' docstring should reference relevant architecture documents",
        "Class 'VolatilityBasedSizer' docstring should reference relevant architecture documents",
        "Class 'ATRBasedSizer' docstring should reference relevant architecture documents",
        "Function 'calculate_size' missing usage example",
        "Function 'calculate_size' missing usage example",
        "Function 'calculate_size' missing usage example",
        "Function 'calculate_size' missing usage example",
        "Function 'calculate_size' missing usage example"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/risk/protocols.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get_position' has parameters but no Args/Parameters documentation",
        "Function 'update_position' has parameters but no Args/Parameters documentation",
        "Function 'update_market_prices' has parameters but no Args/Parameters documentation",
        "Function 'update_fills' has parameters but no Args/Parameters documentation",
        "Function 'update_market_data' has parameters but no Args/Parameters documentation",
        "Function 'add_risk_limit' has parameters but no Args/Parameters documentation",
        "Function 'remove_risk_limit' has parameters but no Args/Parameters documentation",
        "Function 'set_position_sizer' has parameters but no Args/Parameters documentation",
        "Function 'check_risk_limits' has parameters but no Args/Parameters documentation",
        "Function 'calculate_position_size' has parameters but no Args/Parameters documentation",
        "Function 'update_risk_state' has parameters but no Args/Parameters documentation",
        "Function 'update_position' has parameters but no Args/Parameters documentation",
        "Function 'close_position' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SignalType' docstring should reference relevant architecture documents",
        "Class 'Signal' docstring should reference relevant architecture documents",
        "Class 'Order' docstring should reference relevant architecture documents",
        "Class 'Position' docstring should reference relevant architecture documents",
        "Class 'RiskMetrics' docstring should reference relevant architecture documents",
        "Class 'PositionSizerProtocol' docstring should reference relevant architecture documents",
        "Class 'RiskLimitProtocol' docstring should reference relevant architecture documents",
        "Class 'PortfolioStateProtocol' docstring should reference relevant architecture documents",
        "Class 'SignalProcessorProtocol' docstring should reference relevant architecture documents",
        "Class 'RiskPortfolioProtocol' docstring should reference relevant architecture documents",
        "Class 'RiskCapability' docstring should reference relevant architecture documents",
        "Class 'PositionSizingCapability' docstring should reference relevant architecture documents",
        "Class 'RiskLimitCapability' docstring should reference relevant architecture documents",
        "Class 'PortfolioTrackingCapability' docstring should reference relevant architecture documents",
        "Class 'RiskManager' docstring should reference relevant architecture documents",
        "Class 'PortfolioManager' docstring should reference relevant architecture documents",
        "Function 'market_value' missing Returns documentation",
        "Function 'cost_basis' missing Returns documentation",
        "Function 'pnl_percentage' missing Returns documentation",
        "Function 'calculate_size' missing usage example",
        "Function 'check_limit' missing usage example",
        "Function 'get_limit_info' missing Returns documentation",
        "Function 'get_position' missing Returns documentation",
        "Function 'get_all_positions' missing Returns documentation",
        "Function 'get_cash_balance' missing Returns documentation",
        "Function 'get_total_value' missing Returns documentation",
        "Function 'get_risk_metrics' missing Returns documentation",
        "Function 'update_position' missing Returns documentation",
        "Function 'update_market_prices' missing Returns documentation",
        "Function 'process_signal' missing usage example",
        "Function 'process_signals' missing usage example",
        "Function 'get_portfolio_state' missing Returns documentation",
        "Function 'update_fills' missing Returns documentation",
        "Function 'update_market_data' missing Returns documentation",
        "ctiondef 'add_risk_limit' has very short docstring",
        "Function 'add_risk_limit' missing Returns documentation",
        "Function 'remove_risk_limit' missing Returns documentation",
        "Function 'set_position_sizer' missing Returns documentation",
        "Function 'get_risk_report' missing Returns documentation",
        "Function 'check_risk_limits' missing Returns documentation",
        "Function 'calculate_position_size' missing Returns documentation",
        "Function 'get_risk_metrics' missing Returns documentation",
        "Function 'update_risk_state' missing Returns documentation",
        "Function 'get_portfolio_value' missing Returns documentation",
        "Function 'get_cash_balance' missing Returns documentation",
        "Function 'get_positions' missing Returns documentation",
        "Function 'update_position' missing Returns documentation",
        "Function 'close_position' missing Returns documentation",
        "Class 'SignalType' should have __init__ method",
        "Class 'Signal' should have __init__ method",
        "Class 'Order' should have __init__ method",
        "Class 'Position' should have __init__ method",
        "Class 'RiskMetrics' should have __init__ method",
        "Class 'PositionSizerProtocol' should have __init__ method",
        "Class 'RiskLimitProtocol' should have __init__ method",
        "Class 'PortfolioStateProtocol' should have __init__ method",
        "Class 'SignalProcessorProtocol' should have __init__ method",
        "Class 'RiskPortfolioProtocol' should have __init__ method",
        "Class 'RiskCapability' should have __init__ method",
        "Class 'PositionSizingCapability' should have __init__ method",
        "Class 'RiskLimitCapability' should have __init__ method",
        "Class 'PortfolioTrackingCapability' should have __init__ method",
        "Class 'RiskManager' should have __init__ method",
        "Class 'PortfolioManager' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/risk/risk_limits.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'BaseRiskLimit' docstring should reference relevant architecture documents",
        "Class 'MaxPositionLimit' docstring should reference relevant architecture documents",
        "Class 'MaxDrawdownLimit' docstring should reference relevant architecture documents",
        "Class 'VaRLimit' docstring should reference relevant architecture documents",
        "Class 'MaxExposureLimit' docstring should reference relevant architecture documents",
        "Class 'ConcentrationLimit' docstring should reference relevant architecture documents",
        "Class 'LeverageLimit' docstring should reference relevant architecture documents",
        "ssdef 'DailyLossLimit' has very short docstring",
        "Class 'DailyLossLimit' docstring should reference relevant architecture documents",
        "Class 'SymbolRestrictionLimit' docstring should reference relevant architecture documents",
        "Function 'get_violations' missing Returns documentation",
        "Function 'check_limit' missing usage example",
        "Function 'get_limit_info' missing Returns documentation",
        "Function 'check_limit' missing usage example",
        "Function 'get_limit_info' missing Returns documentation",
        "Function 'check_limit' missing usage example",
        "Function 'get_limit_info' missing Returns documentation",
        "Function 'check_limit' missing usage example",
        "Function 'get_limit_info' missing Returns documentation",
        "Function 'check_limit' missing usage example",
        "Function 'get_limit_info' missing Returns documentation",
        "Function 'check_limit' missing usage example",
        "Function 'get_limit_info' missing Returns documentation",
        "Function 'check_limit' missing usage example",
        "Function 'get_limit_info' missing Returns documentation",
        "Function 'check_limit' missing usage example",
        "Function 'get_limit_info' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/risk/risk_portfolio.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'update_fills' has parameters but no Args/Parameters documentation",
        "Function 'update_market_data' has parameters but no Args/Parameters documentation",
        "Function 'add_risk_limit' has parameters but no Args/Parameters documentation",
        "Function 'remove_risk_limit' has parameters but no Args/Parameters documentation",
        "Function 'set_position_sizer' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'RiskPortfolioContainer' docstring should reference relevant architecture documents",
        "Class 'RiskPortfolioContainer' should include Architecture Context section linking to design documents",
        "Function 'get_required_capabilities' missing Returns documentation",
        "Function 'get_provided_capabilities' missing Returns documentation",
        "Function 'start' missing Returns documentation",
        "ncfunctiondef 'stop' has very short docstring",
        "Function 'stop' missing Returns documentation",
        "Function 'add_strategy' missing Returns documentation",
        "Function 'remove_strategy' missing Returns documentation",
        "Function 'process_signals' missing usage example",
        "Function 'get_portfolio_state' missing Returns documentation",
        "Function 'update_fills' missing Returns documentation",
        "Function 'update_fills' missing usage example",
        "Function 'update_market_data' missing Returns documentation",
        "Function 'update_market_data' missing usage example",
        "ctiondef 'add_risk_limit' has very short docstring",
        "Function 'add_risk_limit' missing Returns documentation",
        "Function 'remove_risk_limit' missing Returns documentation",
        "Function 'set_position_sizer' missing Returns documentation",
        "Function 'get_risk_report' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/risk/signal_advanced.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'set_default_processor' has parameters but no Args/Parameters documentation",
        "Function 'add_strategy_processor' has parameters but no Args/Parameters documentation",
        "Function 'add_signal_type_processor' has parameters but no Args/Parameters documentation",
        "Function 'route_signal' has parameters but no Args/Parameters documentation",
        "Function 'validate' has parameters but no Args/Parameters documentation",
        "Function 'is_duplicate' has parameters but no Args/Parameters documentation",
        "Function 'add_signal' has parameters but no Args/Parameters documentation",
        "Function 'prioritize' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SignalPriority' docstring should reference relevant architecture documents",
        "Class 'SignalRouter' docstring should reference relevant architecture documents",
        "Class 'SignalValidator' docstring should reference relevant architecture documents",
        "Class 'RiskAdjustedSignalProcessor' docstring should reference relevant architecture documents",
        "Class 'SignalCache' docstring should reference relevant architecture documents",
        "Class 'SignalPrioritizer' docstring should reference relevant architecture documents",
        "Function 'set_default_processor' missing Returns documentation",
        "Function 'add_strategy_processor' missing Returns documentation",
        "Function 'add_signal_type_processor' missing Returns documentation",
        "Function 'route_signal' missing Returns documentation",
        "Function 'route_signal' missing usage example",
        "Function 'add_rule' missing Returns documentation",
        "Function 'add_rule' missing usage example",
        "Function 'add_signal' missing Returns documentation",
        "Function 'get_statistics' missing Returns documentation",
        "Function 'add_rule' missing Returns documentation",
        "Function 'add_rule' missing usage example",
        "Class 'SignalPriority' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/risk/signal_flow.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'unregister_strategy' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SignalFlowManager' docstring should reference relevant architecture documents",
        "Class 'MultiSymbolSignalFlow' docstring should reference relevant architecture documents",
        "Function 'register_strategy' missing Returns documentation",
        "Function 'register_strategy' missing usage example",
        "Function 'unregister_strategy' missing Returns documentation",
        "Function 'add_order_callback' missing Returns documentation",
        "Function 'add_order_callback' missing usage example",
        "Function 'collect_signal' missing Returns documentation",
        "Function 'collect_signal' missing usage example",
        "Function 'process_signals' missing usage example",
        "Function 'get_statistics' missing Returns documentation",
        "Function 'create_flow_manager' missing usage example",
        "Function 'map_symbol_to_classifier' missing Returns documentation",
        "Function 'map_symbol_to_classifier' missing usage example",
        "Function 'route_signal' missing Returns documentation",
        "Function 'process_all_signals' missing usage example",
        "Function 'get_statistics' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/risk/signal_processing.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SignalProcessor' docstring should reference relevant architecture documents",
        "Class 'SignalAggregator' docstring should reference relevant architecture documents",
        "Function 'process_signal' missing usage example",
        "Function 'get_statistics' missing Returns documentation",
        "Function 'aggregate_signals' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.13428571428571429,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/risk/test_improved_components.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'test_container_creation' has parameters but no Args/Parameters documentation",
        "Function 'test_component_configuration' has parameters but no Args/Parameters documentation",
        "Function 'test_lifecycle_management' has parameters but no Args/Parameters documentation",
        "Function 'test_signal_processing' has parameters but no Args/Parameters documentation",
        "Function 'test_portfolio_state_integration' has parameters but no Args/Parameters documentation",
        "Function 'collect_signals' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'TestDependencyInjection' docstring should reference relevant architecture documents",
        "Class 'TestImprovedRiskPortfolio' docstring should reference relevant architecture documents",
        "Class 'TestOptimizedSignalFlow' docstring should reference relevant architecture documents",
        "Class 'TestImprovedCapabilities' docstring should reference relevant architecture documents",
        "Class 'TestPerformanceOptimizations' docstring should reference relevant architecture documents",
        "Class 'TestErrorHandling' docstring should reference relevant architecture documents",
        "Class 'TestThreadSafety' docstring should reference relevant architecture documents",
        "Function 'test_risk_component_factory_creation' missing Returns documentation",
        "Function 'test_risk_limit_factory_creation' missing Returns documentation",
        "Function 'test_dependency_resolver' missing Returns documentation",
        "Function 'test_spec_creation_functions' missing Returns documentation",
        "Function 'risk_portfolio' missing Returns documentation",
        "Function 'test_container_creation' missing Returns documentation",
        "Function 'test_component_configuration' missing Returns documentation",
        "Function 'test_lifecycle_management' missing Returns documentation",
        "Function 'test_signal_processing' missing Returns documentation",
        "Function 'test_portfolio_state_integration' missing Returns documentation",
        "Function 'test_optimized_flow_manager_creation' missing Returns documentation",
        "Function 'test_signal_collection_performance' missing Returns documentation",
        "Function 'test_batch_signal_processing' missing Returns documentation",
        "Function 'test_high_performance_cache' missing Returns documentation",
        "Function 'test_risk_portfolio_capability_application' missing Returns documentation",
        "Function 'test_capability_lifecycle_integration' missing Returns documentation",
        "Function 'test_capability_delegation_methods' missing Returns documentation",
        "Function 'test_zero_allocation_hot_paths' missing Returns documentation",
        "Function 'test_efficient_data_structures' missing Returns documentation",
        "Function 'test_invalid_component_specs' missing Returns documentation",
        "Function 'test_missing_dependencies' missing Returns documentation",
        "Function 'test_signal_processing_errors' missing Returns documentation",
        "Function 'test_concurrent_signal_collection' missing Returns documentation",
        "Function 'collect_signals' missing Returns documentation",
        "Using type hints but missing typing imports",
        "Class 'TestDependencyInjection' should have __init__ method",
        "Class 'TestImprovedRiskPortfolio' should have __init__ method",
        "Class 'TestOptimizedSignalFlow' should have __init__ method",
        "Class 'TestImprovedCapabilities' should have __init__ method",
        "Class 'TestPerformanceOptimizations' should have __init__ method",
        "Class 'TestErrorHandling' should have __init__ method",
        "Class 'TestThreadSafety' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/risk/test_risk_portfolio.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'TestRiskPortfolioContainer' docstring should reference relevant architecture documents",
        "Class 'TestPositionSizing' docstring should reference relevant architecture documents",
        "Class 'TestRiskLimits' docstring should reference relevant architecture documents",
        "Function 'test_initialization' missing Returns documentation",
        "Function 'test_signal_to_order_conversion' missing Returns documentation",
        "Function 'test_risk_limit_rejection' missing Returns documentation",
        "Function 'test_portfolio_state_tracking' missing Returns documentation",
        "Function 'test_multiple_strategies' missing Returns documentation",
        "Function 'test_exposure_limit' missing Returns documentation",
        "Function 'test_fixed_position_sizer' missing Returns documentation",
        "Function 'test_percentage_position_sizer' missing Returns documentation",
        "Function 'test_max_position_limit' missing Returns documentation",
        "Function 'test_max_exposure_limit' missing Returns documentation",
        "Class 'TestRiskPortfolioContainer' should have __init__ method",
        "Class 'TestPositionSizing' should have __init__ method",
        "Class 'TestRiskLimits' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/risk/test_signal_flow.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'test_basic_signal_flow' missing Returns documentation",
        "Function 'test_multi_symbol_flow' missing Returns documentation",
        "Function 'test_signal_validation_and_caching' missing Returns documentation",
        "ncfunctiondef 'main' has very short docstring",
        "Function 'main' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/capabilities.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_name'",
        "Function 'apply' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_name'",
        "Function 'apply' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_name'",
        "Function 'apply' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'get_name'",
        "Function 'apply' has parameters but no Args/Parameters documentation",
        "Function 'register_indicator' has parameters but no Args/Parameters documentation",
        "Function 'add_rule' has parameters but no Args/Parameters documentation",
        "Function 'set_rule_weight' has parameters but no Args/Parameters documentation",
        "Function 'on_regime_change' has parameters but no Args/Parameters documentation",
        "Function 'set_regime_parameters' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'StrategyCapability' docstring should reference relevant architecture documents",
        "Class 'StrategyCapability' should include Architecture Context section linking to design documents",
        "Class 'IndicatorCapability' docstring should reference relevant architecture documents",
        "Class 'IndicatorCapability' should include Architecture Context section linking to design documents",
        "Class 'RuleManagementCapability' docstring should reference relevant architecture documents",
        "Class 'RuleManagementCapability' should include Architecture Context section linking to design documents",
        "Class 'RegimeAdaptiveCapability' docstring should reference relevant architecture documents",
        "Class 'RegimeAdaptiveCapability' should include Architecture Context section linking to design documents",
        "Function 'apply' missing Returns documentation",
        "Function 'apply' missing Returns documentation",
        "Function 'apply' missing Returns documentation",
        "Function 'apply' missing Returns documentation",
        "Function 'tracked_generate_signal' missing Returns documentation",
        "Function 'on_bar' missing Returns documentation",
        "Function 'register_indicator' missing Returns documentation",
        "Function 'update_indicators' missing Returns documentation",
        "Function 'get_indicator_value' missing Returns documentation",
        "Function 'get_all_indicator_values' missing Returns documentation",
        "Function 'reset_indicators' missing Returns documentation",
        "Function 'add_rule' missing Returns documentation",
        "Function 'evaluate_rules' missing Returns documentation",
        "Function 'set_rule_weight' missing Returns documentation",
        "Function 'get_rule_weights' missing Returns documentation",
        "Function 'on_regime_change' missing Returns documentation",
        "Function 'set_regime_parameters' missing Returns documentation",
        "Function 'get_regime_parameters' missing Returns documentation",
        "Function 'get_active_parameters' missing Returns documentation",
        "Function 'get_regime_history' missing Returns documentation",
        "Function 'rule_based_generate' missing Returns documentation",
        "Function 'handle_classification_event' missing Returns documentation",
        "Class 'StrategyCapability' should have __init__ method",
        "Class 'IndicatorCapability' should have __init__ method",
        "Class 'RuleManagementCapability' should have __init__ method",
        "Class 'RegimeAdaptiveCapability' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/classifiers/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/classifiers/classifier.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'on_indicator_update' has parameters but no Args/Parameters documentation",
        "Function 'classify' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'on_indicator_update' has parameters but no Args/Parameters documentation",
        "Function 'classify' has parameters but no Args/Parameters documentation",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'classify' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'TrendVolatilityClassifier' docstring should reference relevant architecture documents",
        "Class 'TrendVolatilityClassifier' should include Architecture Context section linking to design documents",
        "Class 'MultiIndicatorClassifier' docstring should reference relevant architecture documents",
        "Class 'MultiIndicatorClassifier' should include Architecture Context section linking to design documents",
        "Class 'RegimeState' docstring should reference relevant architecture documents",
        "Class 'RegimeContext' docstring should reference relevant architecture documents",
        "Class 'RegimeClassifier' docstring should reference relevant architecture documents",
        "Class 'RegimeClassifier' should include Architecture Context section linking to design documents",
        "Function 'setup_subscriptions' missing Returns documentation",
        "Function 'on_indicator_update' missing Returns documentation",
        "Function 'classify' missing Returns documentation",
        "Function 'current_class' missing Returns documentation",
        "Function 'confidence' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'setup_subscriptions' missing Returns documentation",
        "Function 'on_indicator_update' missing Returns documentation",
        "Function 'classify' missing Returns documentation",
        "Function 'current_class' missing Returns documentation",
        "Function 'confidence' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'classify' missing Returns documentation",
        "Function 'get_current_regime' missing Returns documentation",
        "Function 'get_regime_context' missing Returns documentation",
        "Function 'confidence' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Class 'RegimeState' should have __init__ method",
        "Class 'RegimeContext' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/classifiers/classifier_container.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'add_strategy_for_class' has parameters but no Args/Parameters documentation",
        "Function 'add_universal_strategy' has parameters but no Args/Parameters documentation",
        "Function 'set_class_parameters' has parameters but no Args/Parameters documentation",
        "Function 'on_classification_change' has parameters but no Args/Parameters documentation",
        "Function 'on_bar' has parameters but no Args/Parameters documentation",
        "Function 'on_indicator_update' has parameters but no Args/Parameters documentation",
        "Function 'on_classification_change' has parameters but no Args/Parameters documentation",
        "Function 'on_signal' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ClassifierContainer' docstring should reference relevant architecture documents",
        "Class 'ClassifierContainer' should include Architecture Context section linking to design documents",
        "Class 'AdaptiveWeightContainer' docstring should reference relevant architecture documents",
        "Class 'AdaptiveWeightContainer' should include Architecture Context section linking to design documents",
        "Function 'add_strategy_for_class' missing Returns documentation",
        "Function 'add_universal_strategy' missing Returns documentation",
        "Function 'set_class_parameters' missing Returns documentation",
        "Function 'setup_subscriptions' missing Returns documentation",
        "Function 'on_classification_change' missing Returns documentation",
        "Function 'on_bar' missing Returns documentation",
        "Function 'on_indicator_update' missing Returns documentation",
        "Function 'get_active_class' missing Returns documentation",
        "Function 'get_active_strategies' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'add_strategy' missing Returns documentation",
        "Function 'add_strategy' missing usage example",
        "Function 'setup_subscriptions' missing Returns documentation",
        "Function 'on_classification_change' missing Returns documentation",
        "Function 'on_signal' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/classifiers/enhanced_classifier_container.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'forward_market_data'",
        "Missing docstring for ctiondef 'forward_signals'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'EnhancedClassifierContainer' docstring should reference relevant architecture documents",
        "Class 'EnhancedClassifierContainer' should include Architecture Context section linking to design documents",
        "Function 'create_classifier_hierarchy' missing usage example",
        "Function 'add_risk_portfolio_container' missing usage example",
        "Function 'get_active_strategies_by_profile' missing Returns documentation",
        "Function 'get_regime_history' missing Returns documentation",
        "Function 'initialize_hierarchy' missing Returns documentation",
        "Function 'start_hierarchy' missing Returns documentation",
        "Function 'stop_hierarchy' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/classifiers/hmm_classifier.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'process_indicator_event' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'HMMRegimeState' docstring should reference relevant architecture documents",
        "Class 'HMMParameters' docstring should reference relevant architecture documents",
        "Class 'HMMClassifier' docstring should reference relevant architecture documents",
        "Class 'HMMClassifier' should include Architecture Context section linking to design documents",
        "Function 'to_regime_state' missing Returns documentation",
        "Function 'classify_regime' missing usage example",
        "Function 'process_indicator_event' missing Returns documentation",
        "Function 'get_state_history' missing Returns documentation",
        "Function 'get_model_parameters' missing Returns documentation",
        "Class 'HMMRegimeState' should have __init__ method",
        "Class 'HMMParameters' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/classifiers/pattern_classifier.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'process_indicator_event' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'PatternRegimeState' docstring should reference relevant architecture documents",
        "Class 'PatternParameters' docstring should reference relevant architecture documents",
        "Class 'PatternMetrics' docstring should reference relevant architecture documents",
        "Class 'PatternClassifier' docstring should reference relevant architecture documents",
        "Class 'PatternClassifier' should include Architecture Context section linking to design documents",
        "Function 'to_regime_state' missing Returns documentation",
        "Function 'classify_regime' missing usage example",
        "Function 'process_indicator_event' missing Returns documentation",
        "Function 'get_pattern_history' missing Returns documentation",
        "Function 'get_current_levels' missing Returns documentation",
        "Class 'PatternRegimeState' should have __init__ method",
        "Class 'PatternParameters' should have __init__ method",
        "Class 'PatternMetrics' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/components/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/components/classifiers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'classify' has parameters but no Args/Parameters documentation",
        "Function 'classify' has parameters but no Args/Parameters documentation",
        "Function 'add_classifier' has parameters but no Args/Parameters documentation",
        "Function 'classify' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'MarketRegime' docstring should reference relevant architecture documents",
        "Class 'TrendClassifier' docstring should reference relevant architecture documents",
        "Class 'TrendClassifier' should include Architecture Context section linking to design documents",
        "Class 'VolatilityClassifier' docstring should reference relevant architecture documents",
        "Class 'VolatilityClassifier' should include Architecture Context section linking to design documents",
        "Class 'CompositeClassifier' docstring should reference relevant architecture documents",
        "Class 'CompositeClassifier' should include Architecture Context section linking to design documents",
        "Function 'create_market_regime_classifier' missing Returns documentation",
        "Function 'classify' missing Returns documentation",
        "Function 'current_class' missing Returns documentation",
        "Function 'confidence' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'classify' missing Returns documentation",
        "Function 'current_class' missing Returns documentation",
        "Function 'confidence' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'add_classifier' missing Returns documentation",
        "Function 'classify' missing Returns documentation",
        "Function 'current_class' missing Returns documentation",
        "Function 'confidence' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'get_all_classifications' missing Returns documentation",
        "Class 'MarketRegime' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/components/indicator_hub.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'get_latest_value' has parameters but no Args/Parameters documentation",
        "Function 'get_indicator_history' has parameters but no Args/Parameters documentation",
        "Function 'add_custom_indicator' has parameters but no Args/Parameters documentation",
        "Function 'clear_cache' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'IndicatorType' docstring should reference relevant architecture documents",
        "Class 'IndicatorConfig' docstring should reference relevant architecture documents",
        "Class 'IndicatorValue' docstring should reference relevant architecture documents",
        "Class 'IndicatorHub' docstring should reference relevant architecture documents",
        "Class 'IndicatorHub' should include Architecture Context section linking to design documents",
        "Function 'process_market_data' missing Returns documentation",
        "Function 'get_latest_value' missing Returns documentation",
        "Function 'get_indicator_history' missing Returns documentation",
        "Function 'add_custom_indicator' missing Returns documentation",
        "Function 'get_available_indicators' missing Returns documentation",
        "Function 'clear_cache' missing Returns documentation",
        "Class 'IndicatorType' should have __init__ method",
        "Class 'IndicatorConfig' should have __init__ method",
        "Class 'IndicatorValue' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/components/indicators.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_ema' has parameters but no Args/Parameters documentation",
        "Function 'calculate' has parameters but no Args/Parameters documentation",
        "Function 'update' has parameters but no Args/Parameters documentation",
        "Function 'calculate' has parameters but no Args/Parameters documentation",
        "Function 'update' has parameters but no Args/Parameters documentation",
        "Function 'calculate' has parameters but no Args/Parameters documentation",
        "Function 'update' has parameters but no Args/Parameters documentation",
        "Function 'calculate' has parameters but no Args/Parameters documentation",
        "Function 'update' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SimpleMovingAverage' docstring should reference relevant architecture documents",
        "Class 'ExponentialMovingAverage' docstring should reference relevant architecture documents",
        "Class 'RSI' docstring should reference relevant architecture documents",
        "Class 'ATR' docstring should reference relevant architecture documents",
        "Function 'create_sma' missing Returns documentation",
        "Function 'create_ema' missing Returns documentation",
        "Function 'create_rsi' missing Returns documentation",
        "Function 'create_atr' missing Returns documentation",
        "Function 'calculate' missing Returns documentation",
        "Function 'update' missing Returns documentation",
        "Function 'value' missing Returns documentation",
        "Function 'ready' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'calculate' missing Returns documentation",
        "Function 'update' missing Returns documentation",
        "Function 'value' missing Returns documentation",
        "Function 'ready' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'calculate' missing Returns documentation",
        "Function 'update' missing Returns documentation",
        "Function 'value' missing Returns documentation",
        "Function 'ready' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'calculate' missing Returns documentation",
        "Function 'calculate' missing usage example",
        "Function 'update' missing Returns documentation",
        "Function 'value' missing Returns documentation",
        "Function 'ready' missing Returns documentation",
        "Function 'reset' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/components/signal_replay.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'from_dict' has parameters but no Args/Parameters documentation",
        "Function 'update_classification' has parameters but no Args/Parameters documentation",
        "Function 'get_signals_by_source' has parameters but no Args/Parameters documentation",
        "Function 'get_signals_by_classification' has parameters but no Args/Parameters documentation",
        "Function 'save_to_file' has parameters but no Args/Parameters documentation",
        "Function 'load_from_file' has parameters but no Args/Parameters documentation",
        "Function 'aggregate' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'CapturedSignal' docstring should reference relevant architecture documents",
        "Class 'CapturedSignal' should include Architecture Context section linking to design documents",
        "Class 'SignalCapture' docstring should reference relevant architecture documents",
        "Class 'SignalCapture' should include Architecture Context section linking to design documents",
        "Class 'SignalReplayer' docstring should reference relevant architecture documents",
        "Class 'SignalReplayer' should include Architecture Context section linking to design documents",
        "Class 'WeightedSignalAggregator' docstring should reference relevant architecture documents",
        "Function 'to_dict' missing Returns documentation",
        "Function 'from_dict' missing Returns documentation",
        "Function 'capture_signal' missing Returns documentation",
        "Function 'capture_signal' missing usage example",
        "Function 'update_classification' missing Returns documentation",
        "Function 'get_signals_by_source' missing Returns documentation",
        "Function 'get_signals_by_classification' missing Returns documentation",
        "Function 'save_to_file' missing Returns documentation",
        "Function 'load_from_file' missing Returns documentation",
        "Function 'replay_with_weights' missing usage example",
        "Function 'calculate_performance' missing usage example",
        "Function 'aggregate' missing Returns documentation",
        "Function 'min_signals' missing Returns documentation",
        "Class 'CapturedSignal' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/examples/pc_architecture_demo.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'demonstrate_pure_strategy' missing Returns documentation",
        "Function 'demonstrate_strategy_with_capabilities' missing Returns documentation",
        "Function 'demonstrate_container_isolation' missing Returns documentation",
        "Function 'demonstrate_optimization_workflow' missing Returns documentation",
        "Function 'demonstrate_composition_patterns' missing Returns documentation",
        "Function 'demonstrate_protocol_compliance' missing Returns documentation",
        "Function 'main' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/optimization/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.11142857142857138,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/optimization/capabilities.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'get_name'",
        "Function 'apply' has parameters but no Args/Parameters documentation",
        "Function 'update_best_parameters' has parameters but no Args/Parameters documentation",
        "Function 'update_parameter_space' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'OptimizationCapability' docstring should reference relevant architecture documents",
        "Class 'OptimizationCapability' should include Architecture Context section linking to design documents",
        "Function 'apply' missing Returns documentation",
        "Function 'get_parameter_space' missing Returns documentation",
        "Function 'set_parameters' missing Returns documentation",
        "Function 'get_parameters' missing Returns documentation",
        "Function 'validate_parameters' missing Returns documentation",
        "Function 'tracked_set_parameters' missing Returns documentation",
        "Function 'update_best_parameters' missing Returns documentation",
        "Function 'get_best_parameters' missing Returns documentation",
        "Function 'get_best_score' missing Returns documentation",
        "Function 'get_parameter_history' missing Returns documentation",
        "Function 'get_optimization_stats' missing Returns documentation",
        "Function 'reset_to_defaults' missing Returns documentation",
        "Function 'add_constraint' missing Returns documentation",
        "Function 'apply_constraints' missing Returns documentation",
        "Function 'update_parameter_space' missing Returns documentation",
        "Class 'OptimizationCapability' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/optimization/constraints.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'is_satisfied' has parameters but no Args/Parameters documentation",
        "Function 'validate_and_adjust' has parameters but no Args/Parameters documentation",
        "Function 'is_satisfied' has parameters but no Args/Parameters documentation",
        "Function 'validate_and_adjust' has parameters but no Args/Parameters documentation",
        "Function 'is_satisfied' has parameters but no Args/Parameters documentation",
        "Function 'validate_and_adjust' has parameters but no Args/Parameters documentation",
        "Function 'is_satisfied' has parameters but no Args/Parameters documentation",
        "Function 'validate_and_adjust' has parameters but no Args/Parameters documentation",
        "Function 'is_satisfied' has parameters but no Args/Parameters documentation",
        "Function 'validate_and_adjust' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'RelationalConstraint' docstring should reference relevant architecture documents",
        "Class 'RangeConstraint' docstring should reference relevant architecture documents",
        "Class 'DiscreteConstraint' docstring should reference relevant architecture documents",
        "Class 'FunctionalConstraint' docstring should reference relevant architecture documents",
        "Class 'CompositeConstraint' docstring should reference relevant architecture documents",
        "Function 'is_satisfied' missing Returns documentation",
        "Function 'validate_and_adjust' missing Returns documentation",
        "Function 'get_description' missing Returns documentation",
        "Function 'is_satisfied' missing Returns documentation",
        "Function 'validate_and_adjust' missing Returns documentation",
        "Function 'get_description' missing Returns documentation",
        "Function 'is_satisfied' missing Returns documentation",
        "Function 'validate_and_adjust' missing Returns documentation",
        "Function 'get_description' missing Returns documentation",
        "Function 'is_satisfied' missing Returns documentation",
        "Function 'validate_and_adjust' missing Returns documentation",
        "Function 'get_description' missing Returns documentation",
        "Function 'is_satisfied' missing Returns documentation",
        "Function 'validate_and_adjust' missing Returns documentation",
        "Function 'get_description' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/optimization/containers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'run_trial_async' has parameters but no Args/Parameters documentation",
        "Function 'get_trial_results' has parameters but no Args/Parameters documentation",
        "Function 'cleanup_trial' has parameters but no Args/Parameters documentation",
        "Function 'record_regime_change' has parameters but no Args/Parameters documentation",
        "Function 'add_result' has parameters but no Args/Parameters documentation",
        "Function 'get_trial_result' has parameters but no Args/Parameters documentation",
        "Function 'get_results_by_regime' has parameters but no Args/Parameters documentation",
        "Function 'record_regime_change' has parameters but no Args/Parameters documentation",
        "Function 'analyze_trial' has parameters but no Args/Parameters documentation",
        "Function 'run_trial_with_regime_tracking' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'regime_aware_evaluator'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'OptimizationContainer' docstring should reference relevant architecture documents",
        "Class 'OptimizationContainer' should include Architecture Context section linking to design documents",
        "Class 'OptimizationResultsCollector' docstring should reference relevant architecture documents",
        "Class 'RegimeTracker' docstring should reference relevant architecture documents",
        "Class 'RegimeAwareOptimizationContainer' docstring should reference relevant architecture documents",
        "Class 'RegimeAwareOptimizationContainer' should include Architecture Context section linking to design documents",
        "Function 'create_trial_instance' missing usage example",
        "Function 'run_trial' missing usage example",
        "Function 'run_trial_async' missing Returns documentation",
        "Function 'get_trial_results' missing Returns documentation",
        "Function 'cleanup_trial' missing Returns documentation",
        "Function 'record_regime_change' missing Returns documentation",
        "Function 'get_results_summary' missing Returns documentation",
        "ctiondef 'add_result' has very short docstring",
        "Function 'add_result' missing Returns documentation",
        "Function 'get_all_results' missing Returns documentation",
        "Function 'get_trial_result' missing Returns documentation",
        "ctiondef 'get_best_result' has very short docstring",
        "Function 'get_best_result' missing Returns documentation",
        "Function 'get_results_by_regime' missing Returns documentation",
        "Function 'get_parameter_analysis' missing Returns documentation",
        "Function 'record_regime_change' missing Returns documentation",
        "Function 'has_data' missing Returns documentation",
        "Function 'analyze_trial' missing Returns documentation",
        "Function 'get_statistics' missing Returns documentation",
        "Function 'run_trial_with_regime_tracking' missing Returns documentation",
        "Function 'run_trial_with_regime_tracking' missing usage example",
        "Function 'get_best_parameters_by_regime' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/optimization/example.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'execute' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'evaluate'",
        "Missing docstring for ctiondef 'evaluate'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SimpleMovingAverageStrategy' docstring should reference relevant architecture documents",
        "Function 'example_basic_optimization' missing Returns documentation",
        "Function 'example_bayesian_with_constraints' missing Returns documentation",
        "Function 'example_sequential_workflow' missing Returns documentation",
        "ctiondef 'main' has very short docstring",
        "Function 'main' missing Returns documentation",
        "Function 'execute' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/optimization/example_momentum_optimization.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'create_optimizable_momentum_strategy' missing Returns documentation",
        "Function 'optimize_strategy_example' missing Returns documentation",
        "Function 'full_optimization_example' missing Returns documentation",
        "Function 'plain_strategy_example' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/optimization/example_usage.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'run_backtest'",
        "Missing docstring for ssdef 'MomentumStrategy'",
        "Missing docstring for ssdef 'RSIStrategy'",
        "Missing docstring for ctiondef 'calculate_performance'",
        "Missing docstring for ctiondef 'generate_signal'",
        "Missing docstring for ctiondef 'generate_signal'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'example_basic_optimization' missing Returns documentation",
        "Function 'example_basic_optimization' missing usage example",
        "Function 'example_sequential_optimization' missing Returns documentation",
        "Function 'example_sequential_optimization' missing usage example",
        "Function 'example_regime_optimization' missing Returns documentation",
        "Function 'example_regime_optimization' missing usage example",
        "Function 'example_signal_replay_optimization' missing Returns documentation",
        "Function 'example_signal_replay_optimization' missing usage example",
        "Function 'example_with_constraints' missing Returns documentation",
        "Function 'example_with_constraints' missing usage example",
        "Function 'run_all_examples' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/optimization/objectives.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SharpeObjective' docstring should reference relevant architecture documents",
        "Class 'MaxReturnObjective' docstring should reference relevant architecture documents",
        "Class 'MinDrawdownObjective' docstring should reference relevant architecture documents",
        "Class 'CompositeObjective' docstring should reference relevant architecture documents",
        "Class 'CalmarObjective' docstring should reference relevant architecture documents",
        "Class 'SortinoObjective' docstring should reference relevant architecture documents",
        "Function 'calculate' missing usage example",
        "Function 'get_direction' missing Returns documentation",
        "Function 'get_requirements' missing Returns documentation",
        "Function 'calculate' missing usage example",
        "ctiondef 'get_direction' has very short docstring",
        "Function 'get_direction' missing Returns documentation",
        "ctiondef 'get_requirements' has very short docstring",
        "Function 'get_requirements' missing Returns documentation",
        "Function 'calculate' missing usage example",
        "Function 'get_direction' missing Returns documentation",
        "Function 'get_requirements' missing Returns documentation",
        "Function 'calculate' missing usage example",
        "Function 'get_direction' missing Returns documentation",
        "Function 'get_requirements' missing Returns documentation",
        "Function 'calculate' missing usage example",
        "Function 'get_direction' missing Returns documentation",
        "Function 'get_requirements' missing Returns documentation",
        "Function 'calculate' missing usage example",
        "Function 'get_direction' missing Returns documentation",
        "ctiondef 'get_requirements' has very short docstring",
        "Function 'get_requirements' missing Returns documentation",
        "Class 'MaxReturnObjective' should have __init__ method",
        "Class 'MinDrawdownObjective' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.11428571428571427,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/optimization/optimizers.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'optimize' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'GridOptimizer' docstring should reference relevant architecture documents",
        "Class 'GridOptimizer' should include Architecture Context section linking to design documents",
        "Class 'RandomOptimizer' docstring should reference relevant architecture documents",
        "Class 'RandomOptimizer' should include Architecture Context section linking to design documents",
        "Function 'create_grid_optimizer' missing Returns documentation",
        "Function 'create_random_optimizer' missing Returns documentation",
        "Function 'optimize' missing usage example",
        "Function 'get_best_parameters' missing Returns documentation",
        "Function 'get_best_score' missing Returns documentation",
        "Function 'get_optimization_history' missing Returns documentation",
        "Function 'optimize' missing Returns documentation",
        "Function 'get_best_parameters' missing Returns documentation",
        "Function 'get_best_score' missing Returns documentation",
        "Function 'get_optimization_history' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/optimization/protocols.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'is_better' has parameters but no Args/Parameters documentation",
        "Function 'is_satisfied' has parameters but no Args/Parameters documentation",
        "Function 'is_valid' has parameters but no Args/Parameters documentation",
        "Function 'get_regime_metrics' has parameters but no Args/Parameters documentation",
        "Function 'get_trial_results' has parameters but no Args/Parameters documentation",
        "Function 'cleanup_trial' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'Optimizer' docstring should reference relevant architecture documents",
        "Class 'Optimizer' should include Architecture Context section linking to design documents",
        "Class 'Objective' docstring should reference relevant architecture documents",
        "Class 'Objective' should include Architecture Context section linking to design documents",
        "Class 'Constraint' docstring should reference relevant architecture documents",
        "Class 'Constraint' should include Architecture Context section linking to design documents",
        "Class 'ParameterSpace' docstring should reference relevant architecture documents",
        "Class 'ParameterSpace' should include Architecture Context section linking to design documents",
        "Class 'OptimizationWorkflow' docstring should reference relevant architecture documents",
        "Class 'OptimizationWorkflow' should include Architecture Context section linking to design documents",
        "Class 'RegimeAnalyzer' docstring should reference relevant architecture documents",
        "Class 'RegimeAnalyzer' should include Architecture Context section linking to design documents",
        "Class 'OptimizationContainer' docstring should reference relevant architecture documents",
        "Class 'OptimizationContainer' should include Architecture Context section linking to design documents",
        "Class 'ParameterSampler' docstring should reference relevant architecture documents",
        "Class 'ParameterSampler' should include Architecture Context section linking to design documents",
        "Function 'optimize' missing usage example",
        "Function 'get_best_parameters' missing Returns documentation",
        "Function 'get_best_score' missing Returns documentation",
        "Function 'calculate' missing usage example",
        "Function 'is_satisfied' missing Returns documentation",
        "Function 'validate_and_adjust' missing usage example",
        "Function 'get_description' missing Returns documentation",
        "Function 'sample' missing usage example",
        "Function 'is_valid' missing Returns documentation",
        "Function 'get_stages' missing Returns documentation",
        "Function 'get_current_stage' missing Returns documentation",
        "Function 'cancel' missing Returns documentation",
        "Function 'analyze_trades' missing usage example",
        "Function 'get_regime_metrics' missing Returns documentation",
        "Function 'get_best_parameters_by_regime' missing Returns documentation",
        "Function 'create_trial_instance' missing usage example",
        "Function 'run_trial' missing usage example",
        "Function 'get_trial_results' missing Returns documentation",
        "Function 'cleanup_trial' missing Returns documentation",
        "Function 'sample' missing usage example",
        "Function 'get_next_sample' missing usage example",
        "Class 'Optimizer' should have __init__ method",
        "Class 'Objective' should have __init__ method",
        "Class 'Constraint' should have __init__ method",
        "Class 'ParameterSpace' should have __init__ method",
        "Class 'OptimizationWorkflow' should have __init__ method",
        "Class 'RegimeAnalyzer' should have __init__ method",
        "Class 'OptimizationContainer' should have __init__ method",
        "Class 'ParameterSampler' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/optimization/signal_based_optimizer.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SignalBasedOptimizer' docstring should reference relevant architecture documents",
        "Class 'SignalBasedOptimizer' should include Architecture Context section linking to design documents",
        "Function 'example_signal_based_optimization' missing Returns documentation",
        "Function 'generate_signals_for_strategies' missing usage example",
        "Function 'optimize_ensemble_weights' missing usage example",
        "Function 'optimize_risk_parameters' missing usage example",
        "Function 'get_signal_quality_report' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/optimization/walk_forward.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Missing docstring for ctiondef 'train_size'",
        "Missing docstring for ctiondef 'test_size'",
        "Missing docstring for ctiondef 'to_dict'",
        "Function 'get_period_by_id' has parameters but no Args/Parameters documentation",
        "Function 'save_results' has parameters but no Args/Parameters documentation",
        "Function 'load_results' has parameters but no Args/Parameters documentation",
        "Function 'run_analysis' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'evaluate'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'WalkForwardPeriod' docstring should reference relevant architecture documents",
        "Class 'WalkForwardValidator' docstring should reference relevant architecture documents",
        "Class 'WalkForwardValidator' should include Architecture Context section linking to design documents",
        "Class 'WalkForwardAnalyzer' docstring should reference relevant architecture documents",
        "Class 'WalkForwardAnalyzer' should include Architecture Context section linking to design documents",
        "Class 'ContainerizedWalkForward' docstring should reference relevant architecture documents",
        "Class 'ContainerizedWalkForward' should include Architecture Context section linking to design documents",
        "Function 'get_periods' missing Returns documentation",
        "Function 'get_period_by_id' missing Returns documentation",
        "Function 'analyze_strategy' missing usage example",
        "Function 'save_results' missing Returns documentation",
        "Function 'load_results' missing Returns documentation",
        "Function 'run_analysis' missing Returns documentation",
        "Function 'run_analysis' missing usage example",
        "Class 'WalkForwardPeriod' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/optimization/walk_forward_refactored.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_walk_forward_validator' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'train_size'",
        "Missing docstring for ctiondef 'test_size'",
        "Function 'get_slice' has parameters but no Args/Parameters documentation",
        "Function 'create_backtest_container' has parameters but no Args/Parameters documentation",
        "Function 'execute_backtest' has parameters but no Args/Parameters documentation",
        "Function 'get_period_data' has parameters but no Args/Parameters documentation",
        "Function 'calculate_objective' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'evaluate'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'WalkForwardPeriod' docstring should reference relevant architecture documents",
        "Class 'DataProvider' docstring should reference relevant architecture documents",
        "Class 'BacktestExecutor' docstring should reference relevant architecture documents",
        "Class 'WalkForwardPeriodManager' docstring should reference relevant architecture documents",
        "Class 'WalkForwardPeriodManager' should include Architecture Context section linking to design documents",
        "Class 'WalkForwardOptimizer' docstring should reference relevant architecture documents",
        "Class 'WalkForwardOptimizer' should include Architecture Context section linking to design documents",
        "Class 'WalkForwardBacktestExecutor' docstring should reference relevant architecture documents",
        "Class 'WalkForwardBacktestExecutor' should include Architecture Context section linking to design documents",
        "Class 'WalkForwardCoordinator' docstring should reference relevant architecture documents",
        "Class 'WalkForwardCoordinator' should include Architecture Context section linking to design documents",
        "Function 'create_walk_forward_validator' missing Returns documentation",
        "Function 'create_walk_forward_validator' missing usage example",
        "Function 'get_slice' missing Returns documentation",
        "Function 'get_length' missing Returns documentation",
        "Function 'create_backtest_container' missing Returns documentation",
        "Function 'execute_backtest' missing Returns documentation",
        "Function 'get_periods' missing Returns documentation",
        "Function 'get_period_data' missing Returns documentation",
        "Function 'optimize_period' missing usage example",
        "Function 'calculate_objective' missing Returns documentation",
        "Function 'execute_backtest' missing usage example",
        "Function 'run_walk_forward' missing usage example",
        "Class 'WalkForwardPeriod' should have __init__ method",
        "Class 'DataProvider' should have __init__ method",
        "Class 'BacktestExecutor' should have __init__ method",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/optimization/workflows.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'create_phase_aware_workflow' has parameters but no Args/Parameters documentation",
        "Missing docstring for ctiondef 'mock_backtest'",
        "Missing docstring for ctiondef 'regime_backtest'",
        "Missing docstring for ctiondef 'evaluate'",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ContainerizedComponentOptimizer' docstring should reference relevant architecture documents",
        "Class 'SequentialOptimizationWorkflow' docstring should reference relevant architecture documents",
        "Class 'RegimeBasedOptimizationWorkflow' docstring should reference relevant architecture documents",
        "Class 'PhaseAwareOptimizationWorkflow' docstring should reference relevant architecture documents",
        "Class 'PhaseAwareOptimizationWorkflow' should include Architecture Context section linking to design documents",
        "Function 'create_phase_aware_workflow' missing Returns documentation",
        "Function 'optimize_component' missing usage example",
        "Function 'run' missing Returns documentation",
        "Function 'get_stages' missing Returns documentation",
        "Function 'get_current_stage' missing Returns documentation",
        "Function 'cancel' missing Returns documentation",
        "Function 'run' missing Returns documentation",
        "Function 'get_stages' missing Returns documentation",
        "Function 'get_current_stage' missing Returns documentation",
        "Function 'cancel' missing Returns documentation",
        "Function 'run' missing usage example",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/protocols.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'update' has parameters but no Args/Parameters documentation",
        "Function 'set_parameters' has parameters but no Args/Parameters documentation",
        "Function 'validate_parameters' has parameters but no Args/Parameters documentation",
        "Function 'create_strategy' has parameters but no Args/Parameters documentation",
        "Function 'initialize_strategy' has parameters but no Args/Parameters documentation",
        "Function 'record_trade' has parameters but no Args/Parameters documentation",
        "Function 'get_metrics' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'SignalDirection' docstring should reference relevant architecture documents",
        "Class 'Strategy' docstring should reference relevant architecture documents",
        "Class 'Strategy' should include Architecture Context section linking to design documents",
        "Class 'Indicator' docstring should reference relevant architecture documents",
        "Class 'Indicator' should include Architecture Context section linking to design documents",
        "Class 'Feature' docstring should reference relevant architecture documents",
        "Class 'Feature' should include Architecture Context section linking to design documents",
        "Class 'Rule' docstring should reference relevant architecture documents",
        "Class 'Rule' should include Architecture Context section linking to design documents",
        "Class 'SignalAggregator' docstring should reference relevant architecture documents",
        "Class 'SignalAggregator' should include Architecture Context section linking to design documents",
        "Class 'Classifier' docstring should reference relevant architecture documents",
        "Class 'Classifier' should include Architecture Context section linking to design documents",
        "Class 'RegimeAdaptive' docstring should reference relevant architecture documents",
        "Class 'RegimeAdaptive' should include Architecture Context section linking to design documents",
        "Class 'Optimizable' docstring should reference relevant architecture documents",
        "Class 'Optimizable' should include Architecture Context section linking to design documents",
        "Class 'StrategyContainer' docstring should reference relevant architecture documents",
        "Class 'StrategyContainer' should include Architecture Context section linking to design documents",
        "Class 'PerformanceTracker' docstring should reference relevant architecture documents",
        "Class 'PerformanceTracker' should include Architecture Context section linking to design documents",
        "Function 'generate_signal' missing usage example",
        "Function 'name' missing Returns documentation",
        "Function 'calculate' missing usage example",
        "Function 'update' missing Returns documentation",
        "Function 'value' missing Returns documentation",
        "Function 'ready' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'extract' missing usage example",
        "Function 'feature_names' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'evaluate' missing usage example",
        "Function 'name' missing Returns documentation",
        "Function 'weight' missing Returns documentation",
        "Function 'aggregate' missing usage example",
        "Function 'min_signals' missing Returns documentation",
        "Function 'classify' missing usage example",
        "Function 'current_class' missing Returns documentation",
        "Function 'confidence' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Function 'on_regime_change' missing Returns documentation",
        "Function 'on_regime_change' missing usage example",
        "Function 'get_active_parameters' missing Returns documentation",
        "Function 'get_parameter_space' missing usage example",
        "Function 'set_parameters' missing Returns documentation",
        "Function 'get_parameters' missing Returns documentation",
        "Function 'create_strategy' missing Returns documentation",
        "Function 'initialize_strategy' missing Returns documentation",
        "Function 'reset_strategy' missing Returns documentation",
        "Function 'record_trade' missing Returns documentation",
        "Function 'get_metrics' missing usage example",
        "Function 'get_regime_analysis' missing Returns documentation",
        "Class 'SignalDirection' should have __init__ method",
        "Class 'Strategy' should have __init__ method",
        "Class 'Indicator' should have __init__ method",
        "Class 'Feature' should have __init__ method",
        "Class 'Rule' should have __init__ method",
        "Class 'SignalAggregator' should have __init__ method",
        "Class 'Classifier' should have __init__ method",
        "Class 'RegimeAdaptive' should have __init__ method",
        "Class 'Optimizable' should have __init__ method",
        "Class 'StrategyContainer' should have __init__ method",
        "Class 'PerformanceTracker' should have __init__ method"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/strategies/__init__.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/strategies/arbitrage.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'generate_signal' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'ArbitrageStrategy' docstring should reference relevant architecture documents",
        "Class 'ArbitrageStrategy' should include Architecture Context section linking to design documents",
        "Function 'create_arbitrage_strategy' missing Returns documentation",
        "Function 'create_arbitrage_strategy' missing usage example",
        "Function 'name' missing Returns documentation",
        "Function 'generate_signal' missing Returns documentation",
        "Function 'generate_signal' missing usage example",
        "Function 'reset' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/strategies/market_making.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function '__init__' has parameters but no Args/Parameters documentation",
        "Function 'generate_signal' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']",
        "Missing logging setup. Must import and configure ComponentLogger, StructuredLogger, or similar for components with classes or multiple functions"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'MarketMakingStrategy' docstring should reference relevant architecture documents",
        "Class 'MarketMakingStrategy' should include Architecture Context section linking to design documents",
        "Function 'create_market_making_strategy' missing Returns documentation",
        "Function 'create_market_making_strategy' missing usage example",
        "Function 'name' missing Returns documentation",
        "Function 'generate_signal' missing Returns documentation",
        "Function 'generate_signal' missing usage example",
        "Function 'reset' missing Returns documentation"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": false
      }
    },
    {
      "filepath": "src/strategy/strategies/mean_reversion.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'generate_signal' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'MeanReversionStrategy' docstring should reference relevant architecture documents",
        "Class 'MeanReversionStrategy' should include Architecture Context section linking to design documents",
        "Function 'name' missing Returns documentation",
        "Function 'generate_signal' missing Returns documentation",
        "Function 'get_parameter_space' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/strategies/momentum.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'generate_signals' has parameters but no Args/Parameters documentation",
        "Function 'generate_signal' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'MomentumStrategy' docstring should reference relevant architecture documents",
        "Class 'MomentumStrategy' should include Architecture Context section linking to design documents",
        "Function 'create_momentum_strategy' missing Returns documentation",
        "Function 'create_momentum_strategy' missing usage example",
        "Function 'name' missing Returns documentation",
        "Function 'get_required_indicators' missing Returns documentation",
        "Function 'get_required_indicators' missing usage example",
        "Function 'generate_signals' missing Returns documentation",
        "Function 'generate_signals' missing usage example",
        "Function 'generate_signal' missing Returns documentation",
        "Function 'generate_signal' missing usage example",
        "Function 'reset' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/strategies/trend_following.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Function 'generate_signal' has parameters but no Args/Parameters documentation",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Class 'TrendFollowingStrategy' docstring should reference relevant architecture documents",
        "Class 'TrendFollowingStrategy' should include Architecture Context section linking to design documents",
        "Function 'create_trend_following_strategy' missing Returns documentation",
        "Function 'create_trend_following_strategy' missing usage example",
        "Function 'name' missing Returns documentation",
        "Function 'generate_signal' missing Returns documentation",
        "Function 'reset' missing Returns documentation",
        "Consider adding structured logging methods for better observability: ['log_event_flow', 'log_state_change', 'log_performance_metric', 'log_validation_result']"
      ],
      "score": 0.0,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": false,
        "type_annotations": true,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    },
    {
      "filepath": "src/strategy/test_protocols.py",
      "passed": false,
      "errors": [
        "Missing required header fields: File:, Status:, Version:, Architecture Ref:, Dependencies:, Last Review:, Purpose:",
        "Missing Status field in header",
        "Missing Purpose section in header",
        "Must reference at least one architecture document. Available: ['BACKTEST_README.md', 'MULTIPHASE_OPTIMIZATION.md', 'WORKFLOW_COMPOSITION.md', 'COMPLEXITY_CHECKLIST.md']"
      ],
      "warnings": [
        "Version should follow semantic versioning (e.g., 1.0.0)",
        "Last Review date should be in YYYY-MM-DD format",
        "Consider adding Next Review date for maintenance tracking",
        "Function 'test_protocol_compliance' missing Returns documentation"
      ],
      "score": 0.09142857142857137,
      "checks_performed": {
        "file_header": false,
        "syntax": true,
        "docstrings": true,
        "type_annotations": false,
        "class_structure": true,
        "architecture_refs": false,
        "logging_setup": true
      }
    }
  ],
  "recommendations": [
    "HIGH PRIORITY: Over 50% of files failing validation. Consider running documentation update sprint before proceeding.",
    "Create file header templates and update existing files. See templates/file_headers/ for standardized formats.",
    "Implement docstring templates for classes and functions. Focus on Args/Returns documentation for public APIs.",
    "Add architecture document references to file headers and docstrings. Link specific sections (e.g., BACKTEST_README.md#event-flow).",
    "Integrate ComponentLogger pattern throughout codebase. See src/core/logging/structured.py for implementation examples.",
    "Consider creating architecture reference guide for developers. Document which files should reference which architecture documents."
  ]
}