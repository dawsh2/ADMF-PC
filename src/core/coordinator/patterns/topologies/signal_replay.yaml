# Signal Replay Pattern
# Pipeline for replaying saved signals: signals → portfolios → risk → execution

name: signal_replay
description: Replay previously generated signals through portfolios and execution

# Stateless components
components:
  - type: risk_validators
    from_config: risk_profiles

  - type: execution_models
    from_config: execution_models
    default: []

# Containers to create
containers:
  # Signal replay container
  - name: signal_replay
    type: signal_replay
    config:
      signal_directory:
        from_config: signal_directory
      symbol:
        from_config: symbol
      start_date:
        from_config: start_date
      end_date:
        from_config: end_date

  # Portfolio containers - one per strategy/risk combo
  - name_template: "portfolio_{combo_id}"
    type: portfolio
    foreach:
      combo: "$generated.parameter_combinations"
    config:
      combo_id: "{combo_id}"
      strategy_type: "{combo.strategy_params.type}"
      strategy_params: "{combo.strategy_params}"
      risk_type: "{combo.risk_params.type}"
      risk_params: "{combo.risk_params}"
      initial_capital:
        from_config: initial_capital
        default: 100000
      objective_function:
        from_config: objective_function
        default:
          name: sharpe_ratio
      results:
        from_config: results
        default: {}
      metrics:
        from_config: metrics
        default: {}

  # Execution container
  - name: execution
    type: execution
    config:
      mode: backtest
      execution_models:
        from_config: execution_models
        default: []

# Routes to create
routes:
  # Risk validation route
  - name: risk_validation
    type: risk_service
    source_pattern: "portfolio_*"
    target: "$root_event_bus"

  # Fill broadcast
  - name: fill_broadcast
    type: broadcast
    source: execution
    targets: "portfolio_*"
    allowed_types: [FILL]

# Special behaviors
behaviors:
  # Subscribe portfolios to replayed signals
  - type: subscribe_to_root_bus
    containers: "portfolio_*"
    event_type: SIGNAL
    handler: signal_processor.on_signal

  # Subscribe execution to orders
  - type: subscribe_to_root_bus
    containers: execution
    event_type: ORDER
    handler: execution_engine.on_order