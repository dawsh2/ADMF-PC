	  Read CLAUDE.md, STYLE.md, signal-storage-replay.md, 
  src/core/containers/race-conditions-and-pending-orders, src/core/events/refactor.md.


> Please read NEW_README.md and docs/architecture/topology-system-guide.md. Keep in mind all 
  these docs are probably slightly outdated but shouldn't be _too_ far off. 

  src/core/{container/, events/, routing/} form the building blocks of our event driven, config 
  driven, quantitative trading and research platform we're developing (events will be rewritten 
  as specified in events/ and src/core/events/observer.md). Our data handling will look like this
   eventually: docs/architecture/data-*. We're going to do a holistic system review now. I think 
  I've got most the system ideas worked out now that I've worked out the signal storgae and 
  repaly, new event module + tracing as source of truth for results, and ensuring no race 
  condition in the containers. 

  The way we track results and handle performance data is to initialize containers with an 
  observer with a given amount of event tracing. If we only need to track for metrics (objective 
  function, sharpe, etc) we only keep traces for open trade events in memory, and only in the 
  portfolio (each portfolio container runs it's own isolated event bus), then upon trade 
  completion we update the metrics, and remove from memory. But this can scale up to full blown 
  event tracing incrementally. We use containers/metrics.py for this but I think the observe.md 
  will deprecate it. 

  Please recall the refactor.md (our upcoming events module), review src/core/components, 
  src/core/container/, src/core/routing. Then we'll review our coordinator module, which ties all
   these togheter with a declarative, YAML driven config approach. The trading-specific modules 
  should be relatively self explanatory or explained sufficiently in NEW_README.md that we don't 
  need to read them. I want to get a high level system overview and make sure everything is 
  conceptually cohesive. Please use PhD level critical thinking.
