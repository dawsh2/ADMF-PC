#!/usr/bin/env python3
"""Test topology feature inference with param_feature_mapping."""

import sys
sys.path.insert(0, '/Users/daws/ADMF-PC')

from src.core.coordinator.topology import TopologyBuilder

# Create a simple strategy config with stochastic_crossover
strategies = [
    {
        'name': 'test_stochastic',
        'type': 'stochastic_crossover',
        'params': {
            'k_period': 5,
            'd_period': 3
        }
    }
]

# Create topology builder and test feature inference
builder = TopologyBuilder()

# Call the feature inference method directly
required_features = builder._infer_features_from_strategies(strategies)

print("Required features generated by topology builder:")
for feature in sorted(required_features):
    print(f"  {feature}")

# Check if the expected features are there
expected_features = ['stochastic_5_3_k', 'stochastic_5_3_d']
print(f"\nExpected features: {expected_features}")

for expected in expected_features:
    if expected in required_features:
        print(f"✅ {expected} - FOUND")
    else:
        print(f"❌ {expected} - MISSING")

# Also check if the base feature is generated
base_feature = 'stochastic_5_3'
if base_feature in required_features:
    print(f"✅ Base feature {base_feature} - FOUND")
else:
    print(f"❌ Base feature {base_feature} - MISSING")