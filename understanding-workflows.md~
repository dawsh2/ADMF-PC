Understanding The ADMF Engine: From Idea to Insight
Welcome to the Algorithmic & Declarative Modeling Framework (ADMF)! This document explains the core concepts that power the system. Instead of thinking in terms of code, we will use the analogy of a sophisticated, automated factory assembly line.

Our factory's goal is to take a raw research idea (e.g., "does this strategy work?") and turn it into a validated, data-rich final product (a backtest report with performance metrics) in a way that is repeatable, scalable, and error-proof.

The Core Concepts: A Factory Analogy

Every great product starts with a blueprint and moves through a structured assembly process. Our system works the same way.

1. The Topology: The Machine's Blueprint

A Topology is the detailed blueprint for a single "workstation" on our assembly line. It doesn't do any work itself, but it defines the machine that will. It specifies the necessary components (strategies, risk models, etc.) and how they are wired together into a functioning machine (Container).

2. The Sequence: The Machine's Operating Manual

A Sequence is the instruction manual that tells the machine how to operate. For example, does the machine run the process just once (single_pass) or on different batches of material over rolling time periods (walk_forward)? The sequence defines the iteration logic.

3. The Phase: A Fully Configured Workstation

A Phase is a single, ready-to-run stage of our assembly line. It is a configuration that binds one Topology (the blueprint) with one Sequence (the operating manual) and a specific Config (the raw materials, like the dataset and parameters).

4. The Workflow: The Entire Assembly Line

A Workflow is the master plan for the entire factory floor. It defines how multiple, distinct Phases are chained together, managing the order of operations and the hand-off of results from one phase to the next.

This is where the power of the system becomes clear. A complex, multi-stage research process that would be bug-prone and difficult to manage in code becomes a reusable, robust, and performant pattern.

Example: An "Adaptive Ensemble" Workflow

Consider this advanced workflow, which would be enormously complex to code by hand but is manageable and repeatable with our architecture:

Phase 1: Signal Generation & Parameter Sweep

Goal: Find the best strategy parameters across different market regimes.
Process: Runs a signal_generation topology in a walk_forward sequence for every possible parameter combination, capturing all performance data.
Phase 2: Regime Analysis

Goal: Identify which parameters worked best in each market regime.
Process: Analyzes the performance data from Phase 1 to determine the optimal strategy configuration for each detected regime (e.g., high volatility, low volatility).
Phase 3: Ensemble Weighting

Goal: Find the optimal capital allocation between the best strategies for each regime.
Process: Uses a signal_replay topology to test different weightings for the "regime-optimal" strategies identified in Phase 2. This is much faster than re-running the full backtest.
Phase 4: Final Validation

Goal: Test the final, fully adaptive strategy on out-of-sample data.
Process: Deploys the complete adaptive model from Phase 3 in a final backtest topology, allowing it to dynamically switch its parameters and weights as the market regime changes.
5. The Coordinator: The Factory Foreman

The Coordinator is the engine that runs the factory. It's the foreman who reads the Workflow plan and manages the entire end-to-end process, ensuring everything runs smoothly from start to finish.

Visualizing the Hierarchy

This layered approach allows for incredible flexibility. You can swap out machine blueprints (Topologies) or operating manuals (Sequences) at any stage (Phase) to create new, custom Workflows without having to rebuild the entire factory.

       +------------------+
       |   COORDINATOR    | (The Foreman)
       +------------------+
                |
                v
       +--------------------------------------------------------+
       |           WORKFLOW (The Assembly Line Plan)            |
       |                                                        |
       |  +-----------+     +-----------+     +-----------+     |
       |  |  PHASE 1  | --> |  PHASE 2  | --> |  PHASE 3  | --> ...
       |  | (Train)   |     | (Analyze) |     | (Test)    |     |
       |  +-----------+     +-----------+     +-----------+     |
       |                                                        |
       +--------------------------------------------------------+
                |
                v (A look inside a single Phase)
       +---------------------------------------+
       |      PHASE: "Train Parameters"        |
       |=======================================|
       | SEQUENCE: "walk_forward" (How to run) |
       |---------------------------------------|
       | TOPOLOGY: "optimization" (What to run)|
       |---------------------------------------|
       | CONFIG:   {...}          (With what)  |
       +---------------------------------------+
By understanding these five core concepts, you can effectively design and execute sophisticated, repeatable research experiments using the full power of the ADMF.
