# Signal Replay Pattern
# Replay pre-computed signals through portfolio and execution
# Uses SignalReplayHandler to read traces and publish SIGNAL events

name: signal_replay
description: Replay previously generated signals through portfolios and execution

# Stateless components
components:
  - type: risk_validators
    from_config: risk_validators
    default: []

# Containers to create
containers:
  # Root container
  - name: root
    type: root
    components: []
    config: {}
      
  # Signal replay data container - reads traces and publishes SIGNAL events
  - name: signal_replay_data
    type: data
    components: ["data_streamer"]
    parent: root
    config:
      data_source: signal_replay  # Use signal replay handler
      traces_dir:
        from_config: traces_dir
        default: ./traces
      symbols:
        from_config: symbols
      strategies:
        from_config: strategies
      parameter_space:
        from_config: parameter_space
      # Risk overrides for replay
      risk:
        from_config: risk

  # Portfolio container - receives SIGNAL events, manages positions
  - name: portfolio
    type: portfolio  
    components: ["portfolio_state", "risk_manager"]
    parent: root
    config:
      initial_capital:
        from_config: initial_capital
        default: 100000
      symbols:
        from_config: symbols
      # Risk configuration can be overridden during replay
      risk:
        from_config: risk
        default: {}

  # Execution container - receives ORDER events, simulates fills
  - name: execution
    type: execution
    components: ["execution_engine", "order_manager"]
    parent: root
    config:
      broker:
        from_config: broker
        default: simulated
      execution:
        from_config: execution
        default: {}

# Use standard events (SIGNAL, ORDER, FILL) via root event bus